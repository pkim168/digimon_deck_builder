{"version":3,"sources":["assets/spinner.png","assets/card-back.jpg","component/Admin/AdminNavbar.js","component/Admin/FilterMenu.js","component/Admin/Cards.js","component/Admin/CardDB.js","component/Admin/AdminPanel.js","component/CardDB/FilterMenu.js","component/CardDB/Cards.js","component/CardDB/CardDB.js","component/Decks/DeckInfo1.js","component/Decks/DeckInfo2.js","component/Decks/MainDeck.js","component/Decks/EggDeck.js","component/Decks/VisualView.js","component/Decks/Deck.js","component/DeckBuilder/FilterMenu.js","component/DeckBuilder/Cards.js","component/DeckBuilder/DeckPanel.js","component/DeckBuilder/DeckBuilder.js","component/DeckDB/FilterMenu.js","component/DeckDB/Decks.js","component/DeckDB/DeckDB.js","component/DeckEditor/FilterMenu.js","component/DeckEditor/Cards.js","component/DeckEditor/DeckPanel.js","component/DeckEditor/DeckEditor.js","component/Home/Decks.js","component/Home/Home.js","component/MyDecks/FilterMenu.js","component/MyDecks/Decks.js","component/MyDecks/MyDecks.js","component/Navbar/LoginRegister.js","component/Navbar/UserPanel.js","component/Navbar/Navbar.js","component/Account/Password.js","component/Account/Resend.js","component/Account/Reset.js","component/Account/UserInformation.js","component/Account/ProfileSettings.js","component/Account/Settings.js","component/Account/Confirmation.js","App.js","serviceWorker.js","CookieController.js","API.js","index.js","config.js"],"names":["module","exports","AdminNavbar","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","e","preventDefault","service","Post","data","alert","error","FilterMenu","useState","power","setPower","sets","setSets","types","setTypes","isOpen","setIsOpen","getData","useCallback","mounted","Get","option","sort","map","key","value","console","log","useEffect","Form","onSubmit","search","document","getElementById","trim","attributeSelect","cardLevelSelect","cardNameInput","cardTypeSelect","colorSelect","costSelect","digivolveSelect","formSelect","playEffectInput","powerSelect","securityEffectInput","setSelect","typeSelect","cardData","JSON","parse","sessionStorage","getItem","setCards","setPages","Math","ceil","length","cardsPerPage","setPage","filter","card","flag","toLowerCase","indexOf","sortCards","filterPages","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","Collapse","sm","name","defaultValue","role","style","marginLeft","marginRight","CardsList","cards","slice","page","src","alt","Cards","previousLabel","nextLabel","breakLabel","breakClassName","breakLinkClassName","pageCount","pages","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","pageClassName","forcePage","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","cardsInRow","rowsPerPage","CardDB","setDisplay","floor","a","b","currentDate","Date","now","sessionObject","created","setItem","stringify","AdminPanel","history","useHistory","setPageName","loaded","userDetails","push","raritySelect","cardBack","DeckInfo","infoOpen","setInfoOpen","date","params","getMonth","getDate","getFullYear","getHours","getMinutes","border","padding","margin","disabled","addon","checked","DeckInfo2","levelsOpen","setLevelsOpen","colorsOpen","setColorsOpen","typesOpen","setTypesOpen","getColorValue","color","colors","Object","keys","colorValues","colorCount","borderColors","colorValue","borderColor","colorData","labels","datasets","barPercentage","barThickness","minBarThickness","maxBarThickness","backgroundColor","borderWidth","hoverBackgroundColor","hoverBorderColor","typeJson","forEach","barColor","values","cardTypes","bar","label","stack","typeData","levelJson","levels","levelKeys","index","findIndex","temp","level","splice","levelData","height","options","scales","xAxes","ticks","beginAtZero","stepSize","maxTicksLimit","legend","display","tooltips","caretSize","enabled","callbacks","tooltipItem","datasetIndex","MainDeck","i","textColor","FormGroup","row","UncontrolledPopover","delay","boundariesElement","placement","trigger","target","PopoverHeader","PopoverBody","EggDeck","VisualView","eggDeckOpen","setEggDeckOpen","mainDeckOpen","setMainDeckOpen","mainSecondary","setMainSecondary","eggSecondary","setEggSecondary","mainDecklist","keysLookup","unshift","deckArr","j","mainDeck","eggDeck","overflowY","overflowX","Deck","toRender","setToRender","visualView","setVisualView","listView","setListView","mainDeckInfo","eggDeckInfo","deck","setDeck","mParams","useParams","_id","title","replace","deckString","content","fileName","contentType","createElement","file","Blob","URL","createObjectURL","download","click","onNavigate","username","user","tabIndex","aria-labelledby","aria-hidden","data-dismiss","request","DeckInfo1","powers","set","data-container","addEggCard","addCard","removeEggCard","removeCard","DeckPanel","mainOpen","setMainOpen","eggOpen","setEggOpen","onChange","changeTitle","privacy","changePrivacy","clearData","decklist","deckInfo","count","setEggDeck","deckTitle","eggColors","mainDeckCount","eggDeckCount","status","DeckBuilder","setTitle","setPrivacy","cardIndex","item","cardNo","cardColor","tempDeckInfo","tempDeck","newTitle","newPrivacy","setCardNo","cardNos","deckTitleInput","usernameInput","cardNoSelect","andCheckbox","deckData","setDecks","decksPerPage","includes","colorFlag","hasOwnProperty","textAlign","DecksList","decks","numDecks","result","rowNum","decksInRow","concat","Set","Array","from","join","to","makeRows","Decks","DeckDB","creation","DeckEditor","Home","limit","Card","body","appId","width","tabs","smallHeader","CardTitle","MyDecks","Login","email","password","onLoginChange","Label","for","required","ButtonGroup","Button","Register","firstName","lastName","flex","LoginRegister","component","setComponent","changeSelected","UserPanel","admin","DropdownItem","tag","Link","divider","Logout","TopNavbar","Navbar","dark","expand","NavbarBrand","NavbarText","paddingRight","pageName","NavbarToggler","navbar","Nav","NavItem","NavLink","rightNav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","rightNavigation","Password","borderRadius","Resend","Reset","validToken","setValidToken","show","setShow","token","UserProfile","setFirstName","setLastName","confirmPassword","Update","Settings","aria-orientation","aria-selected","borderLeft","UserInformation","ProfileSettings","Confirmation","App","setUserDetails","setLoaded","setAdmin","setRightNav","setParams","Authorized","spinner","path","exact","render","match","Boolean","window","location","hostname","CookieController","cookies","cookie","split","eqPos","substr","str","_return","child","axios","require","routing","config","apiEndPoint","port","routingPrefix","UniversalService","this","accesstoken","GetCookies","bind","onCompleted","onError","dispatchEvent","CustomEvent","detail","loggedin","PutCookie","post","then","response","catch","get","headers","CheckAuthorization","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1e4308c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8f2beb27.png\";","module.exports = __webpack_public_path__ + \"static/media/card-back.9a6335d4.jpg\";","import React from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction AdminNavbar(props) {\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light py-3 shadow-sm fixed-bottom justify-content-between\">\r\n      <a className=\"navbar-brand\" href=\"/#\"> Admin Panel </a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <a className=\"nav-link\" href=\"/#\" onClick={(e) => {\r\n            e.preventDefault();\r\n            props.service.Post(\"/cards/update\", '', (data) => {\r\n              alert(\"Update Finished\")\r\n            }, (error) => {\r\n              alert(error);\r\n            })\r\n          }}> Update Card Database </a>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React, {useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, InputGroup, InputGroupAddon, InputGroupText, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FilterMenu(props) {\r\n  const [power, setPower] = useState();\r\n  const [sets, setSets] = useState();\r\n  const [types, setTypes] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function filterPages() {\r\n    var search = document.getElementById(\"searchInput\").value.trim();\r\n\r\n    var attributeSelect = document.getElementById(\"attributeSelect\").value;\r\n    if (attributeSelect === \"default\")\r\n      attributeSelect = \"\";\r\n\r\n    var cardLevelSelect = document.getElementById(\"cardLevelSelect\").value;\r\n    if (cardLevelSelect === \"default\")\r\n      cardLevelSelect = \"\";\r\n\r\n    var cardNameInput = document.getElementById(\"cardNameInput\").value.trim();\r\n\r\n    var cardTypeSelect = document.getElementById(\"cardTypeSelect\").value;\r\n    if (cardTypeSelect === \"default\")\r\n      cardTypeSelect = \"\";\r\n\r\n    var colorSelect = document.getElementById(\"colorSelect\").value;\r\n    if (colorSelect === \"default\")\r\n      colorSelect = \"\";\r\n\r\n    var costSelect = document.getElementById(\"costSelect\").value;\r\n    if (costSelect === \"default\")\r\n      costSelect = \"\";\r\n\r\n    var digivolveSelect = document.getElementById(\"digivolveSelect\").value;\r\n    if (digivolveSelect === \"default\")\r\n      digivolveSelect = \"\";\r\n\r\n    var formSelect = document.getElementById(\"formSelect\").value;\r\n    if (formSelect === \"default\")\r\n      formSelect = \"\";\r\n\r\n    var playEffectInput = document.getElementById(\"playEffectInput\").value.trim();\r\n\r\n    var powerSelect = document.getElementById(\"powerSelect\").value;\r\n    if (powerSelect === \"default\")\r\n      powerSelect = \"\";\r\n\r\n    var securityEffectInput = document.getElementById(\"securityEffectInput\").value.trim();\r\n\r\n    var setSelect = document.getElementById(\"setSelect\").value;\r\n    if (setSelect === \"default\")\r\n      setSelect = \"\";\r\n\r\n    var typeSelect = document.getElementById(\"typeSelect\").value;\r\n    if (typeSelect === \"default\")\r\n      typeSelect = \"\";\r\n\r\n    var empty = !(search || attributeSelect || cardLevelSelect || cardNameInput || cardTypeSelect || colorSelect || costSelect || digivolveSelect || formSelect || playEffectInput || powerSelect || securityEffectInput || setSelect || typeSelect);\r\n\r\n    var cardData = [];\r\n\r\n    if (empty) {\r\n      cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"]\r\n      props.setCards(cardData);\r\n      props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n      props.setPage(1);\r\n      // console.log(\"Length: \"+cardData.length);\r\n      // console.log(\"Pages: \"+Math.ceil(cardData.length/props.cardsPerPage));\r\n      return;\r\n    }\r\n\r\n    cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"].filter(function (card) {\r\n      var flag = true;\r\n      if (search) {\r\n        flag = flag && card[\"fullText\"].toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n      }\r\n      if (attributeSelect)\r\n        flag = flag && card['attribute'] === attributeSelect;\r\n      if (cardLevelSelect)\r\n        flag = flag && card[\"cardLv\"] === cardLevelSelect;\r\n      if (cardNameInput) {\r\n        flag = flag && card[\"cardName\"].toLowerCase().indexOf(cardNameInput.toLowerCase()) > -1;\r\n      }\r\n      if (cardTypeSelect)\r\n        flag = flag && card[\"cardType\"] === cardTypeSelect;\r\n      if (colorSelect)\r\n        flag = flag && card[\"cardColor\"] === colorSelect;\r\n      if (costSelect)\r\n        flag = flag && card[\"playCost\"] === costSelect;\r\n      if (digivolveSelect)\r\n        flag = flag && (card[\"digivolve1Cost\"] === digivolveSelect || card[\"digivolve2Cost\"] === digivolveSelect);\r\n      if (formSelect)\r\n        flag = flag && card[\"form\"] === formSelect;\r\n      if (playEffectInput)\r\n        flag = flag && card[\"effect\"].toLowerCase().indexOf(playEffectInput.toLowerCase()) > -1;\r\n      if (powerSelect)\r\n        flag = flag && card[\"digiPower\"] === powerSelect;\r\n      if (securityEffectInput)\r\n        flag = flag && card[\"securityEffect\"].toLowerCase().indexOf(securityEffectInput.toLowerCase()) > -1;\r\n      if (setSelect)\r\n        flag = flag && card[\"setId\"] === setSelect;\r\n      if (typeSelect)\r\n        flag = flag && card[\"type\"] === typeSelect;\r\n      return flag;\r\n    });\r\n    props.setCards(cardData.sort(props.sortCards()));\r\n    props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n    // console.log(cardData);\r\n    // console.log(\"Length: \"+cardData.length);\r\n    // console.log(\"Pages: \"+Math.ceil(cardData.length/props.cardsPerPage));\r\n    props.setPage(1);\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Get(\"/cards/power\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((power) => {\r\n          return (\r\n            <option key={\"power\" + power} value={power}>{power}</option>\r\n          );\r\n        });\r\n        setPower(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setPower(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/sets\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((sets) => {\r\n          return (\r\n            <option key={\"set\" + sets} value={sets}>{sets}</option>\r\n          );\r\n        });\r\n        setSets(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setSets(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/types\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((types) => {\r\n          return (\r\n            <option key={\"type\" + types} value={types}>{types}</option>\r\n          );\r\n        });\r\n        setTypes(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setTypes(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n  }, [props.service]);\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"FilterMenu w-100\">\r\n      <Form className=\"px-4 py-3\" id=\"filter\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        filterPages();\r\n      }}>\r\n        <div className=\"form-row d-flex\">\r\n          <div className=\"form-group-filter-element w-100\">\r\n            <div className=\"form-group\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText> All Text </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input placeholder=\"Search Card Text\" id=\"searchInput\"/>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setIsOpen(!isOpen)}}>\r\n                    Show more filters\r\n                  </button>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse isOpen={isOpen}>\r\n          <div className=\"d-flex form-row flex-wrap justify-content-left\">\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText> Attribute </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"attributeSelect\" sm=\"8\" id=\"attributeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Attribute- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"Data\"> Data </option>\r\n                    <option value=\"Free\"> Free </option>\r\n                    <option value=\"Unknown\"> Unknown </option>\r\n                    <option value=\"Vaccine\"> Vaccine </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Card Level </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"cardLevelSelect\" sm=\"8\" id=\"cardLevelSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Level- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Card Name </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"-Card Name-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Card Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"cardTypeSelect\" sm=\"8\" id=\"cardTypeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Type- </option>\r\n                    <option value=\"Digi-Egg\"> Digi-Egg </option>\r\n                    <option value=\"Digimon\"> Digimon </option>\r\n                    <option value=\"Option\"> Option </option>\r\n                    <option value=\"Tamer\"> Tamer </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Color </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"colorSelect\" sm=\"8\" id=\"colorSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Color- </option>\r\n                    <option value=\"Black\"> Black </option>\r\n                    <option value=\"Blue\"> Blue </option>\r\n                    <option value=\"Green\"> Green </option>\r\n                    <option value=\"Purple\"> Purple </option>\r\n                    <option value=\"Red\"> Red </option>\r\n                    <option value=\"White\"> White </option>\r\n                    <option value=\"Yellow\"> Yellow </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"costSelect\" sm=\"8\" id=\"costSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                    <option value=\"8\"> 8 </option>\r\n                    <option value=\"9\"> 9 </option>\r\n                    <option value=\"10\"> 10 </option>\r\n                    <option value=\"11\"> 11 </option>\r\n                    <option value=\"12\"> 12 </option>\r\n                    <option value=\"13\"> 13 </option>\r\n                    <option value=\"14\"> 14 </option>\r\n                    <option value=\"15\"> 15 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Digivolve Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"digivolveSelect\" sm=\"8\" id=\"digivolveSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Digivolve Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Form </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"formSelect\" sm=\"8\" id=\"formSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Form- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"In-Training\"> In-Training </option>\r\n                    <option value=\"Rookie\"> Rookie </option>\r\n                    <option value=\"Champion\"> Champion </option>\r\n                    <option value=\"Ultimate\"> Ultimate </option>\r\n                    <option value=\"Mega\"> Mega </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input name=\"playEffectInput\" sm=\"8\" id=\"playEffectInput\" placeholder=\"-Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText> Power </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"powerSelect\" sm=\"8\" id=\"powerSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Power- </option>\r\n                    {power}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Security Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input name=\"securityEffectInput\" sm=\"8\" id=\"securityEffectInput\" placeholder=\"-Security Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Set </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"setSelect\" sm=\"8\" id=\"setSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Set- </option>\r\n                    {sets}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText> Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input type=\"select\" name=\"typeSelect\" sm=\"8\" id=\"typeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Type- </option>\r\n                    {types}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n        <div className=\"form-row\">\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button style={{marginLeft: \".5rem\"}} type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"searchInput\").value = '';\r\n              document.getElementById(\"attributeSelect\").value = 'default';\r\n              document.getElementById(\"cardLevelSelect\").value = 'default';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"cardTypeSelect\").value = 'default';\r\n              document.getElementById(\"colorSelect\").value = 'default';\r\n              document.getElementById(\"costSelect\").value = 'default';\r\n              document.getElementById(\"digivolveSelect\").value = 'default';\r\n              document.getElementById(\"formSelect\").value = 'default';\r\n              document.getElementById(\"playEffectInput\").value = '';\r\n              document.getElementById(\"powerSelect\").value = 'default';\r\n              document.getElementById(\"securityEffectInput\").value = '';\r\n              document.getElementById(\"setSelect\").value = 'default';\r\n              document.getElementById(\"typeSelect\").value = 'default';\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button style={{marginRight: \".5rem\"}} type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/*<h5> Filter Cards </h5>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> All Text </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input placeholder=\"Search Card Text\" id=\"searchInput\"/>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n              <InputGroupText> Attribute </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"attributeSelect\" sm=\"8\" id=\"attributeSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Attribute- </option>\r\n              <option value=\"-\"> - </option>\r\n              <option value=\"Data\"> Data </option>\r\n              <option value=\"Free\"> Free </option>\r\n              <option value=\"Unknown\"> Unknown </option>\r\n              <option value=\"Vaccine\"> Vaccine </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Card Level </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"cardLevelSelect\" sm=\"8\" id=\"cardLevelSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Card Level- </option>\r\n              <option value=\"-\"> - </option>\r\n              <option value=\"1\"> 1 </option>\r\n              <option value=\"2\"> 2 </option>\r\n              <option value=\"3\"> 3 </option>\r\n              <option value=\"4\"> 4 </option>\r\n              <option value=\"5\"> 5 </option>\r\n              <option value=\"6\"> 6 </option>\r\n              <option value=\"7\"> 7 </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Card Name </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"-Card Name-\">\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Card Type </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"cardTypeSelect\" sm=\"8\" id=\"cardTypeSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Card Type- </option>\r\n              <option value=\"Digi-Egg\"> Digi-Egg </option>\r\n              <option value=\"Digimon\"> Digimon </option>\r\n              <option value=\"Option\"> Option </option>\r\n              <option value=\"Tamer\"> Tamer </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Color </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"colorSelect\" sm=\"8\" id=\"colorSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Color- </option>\r\n              <option value=\"Black\"> Black </option>\r\n              <option value=\"Blue\"> Blue </option>\r\n              <option value=\"Green\"> Green </option>\r\n              <option value=\"Purple\"> Purple </option>\r\n              <option value=\"Red\"> Red </option>\r\n              <option value=\"White\"> White </option>\r\n              <option value=\"Yellow\"> Yellow </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Cost </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"costSelect\" sm=\"8\" id=\"costSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Cost- </option>\r\n              <option value=\"-\"> - </option>\r\n              <option value=\"1\"> 1 </option>\r\n              <option value=\"2\"> 2 </option>\r\n              <option value=\"3\"> 3 </option>\r\n              <option value=\"4\"> 4 </option>\r\n              <option value=\"5\"> 5 </option>\r\n              <option value=\"6\"> 6 </option>\r\n              <option value=\"7\"> 7 </option>\r\n              <option value=\"8\"> 8 </option>\r\n              <option value=\"9\"> 9 </option>\r\n              <option value=\"10\"> 10 </option>\r\n              <option value=\"11\"> 11 </option>\r\n              <option value=\"12\"> 12 </option>\r\n              <option value=\"13\"> 13 </option>\r\n              <option value=\"14\"> 14 </option>\r\n              <option value=\"15\"> 15 </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Digivolve Cost </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"digivolveSelect\" sm=\"8\" id=\"digivolveSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Digivolve Cost- </option>\r\n              <option value=\"-\"> - </option>\r\n              <option value=\"1\"> 1 </option>\r\n              <option value=\"2\"> 2 </option>\r\n              <option value=\"3\"> 3 </option>\r\n              <option value=\"4\"> 4 </option>\r\n              <option value=\"5\"> 5 </option>\r\n              <option value=\"6\"> 6 </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Form </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"formSelect\" sm=\"8\" id=\"formSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Form- </option>\r\n              <option value=\"-\"> - </option>\r\n              <option value=\"In-Training\"> In-Training </option>\r\n              <option value=\"Rookie\"> Rookie </option>\r\n              <option value=\"Champion\"> Champion </option>\r\n              <option value=\"Ultimate\"> Ultimate </option>\r\n              <option value=\"Mega\"> Mega </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Keyword </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"keywordSelect\" sm=\"8\" id=\"keywordSelect\">\r\n              <option selected> -Keyword- </option>\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Effect </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input name=\"playEffectInput\" sm=\"8\" id=\"playEffectInput\" placeholder=\"-Effect-\">\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n              <InputGroupText> Power </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"powerSelect\" sm=\"8\" id=\"powerSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Power- </option>\r\n              {power}\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Security Effect </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input name=\"securityEffectInput\" sm=\"8\" id=\"securityEffectInput\" placeholder=\"-Security Effect-\">\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Set </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"setSelect\" sm=\"8\" id=\"setSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Set- </option>\r\n              {sets}\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText> Type </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type=\"select\" name=\"typeSelect\" sm=\"8\" id=\"typeSelect\" defaultValue=\"default\">\r\n              <option value=\"default\"> -Type- </option>\r\n              {types}\r\n            </Input>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"searchInput\").value = '';\r\n              document.getElementById(\"attributeSelect\").value = 'default';\r\n              document.getElementById(\"cardLevelSelect\").value = 'default';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"cardTypeSelect\").value = 'default';\r\n              document.getElementById(\"colorSelect\").value = 'default';\r\n              document.getElementById(\"costSelect\").value = 'default';\r\n              document.getElementById(\"digivolveSelect\").value = 'default';\r\n              document.getElementById(\"formSelect\").value = 'default';\r\n              document.getElementById(\"playEffectInput\").value = '';\r\n              document.getElementById(\"powerSelect\").value = 'default';\r\n              document.getElementById(\"securityEffectInput\").value = '';\r\n              document.getElementById(\"setSelect\").value = 'default';\r\n              document.getElementById(\"typeSelect\").value = 'default';\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </FormGroup>*/}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMenu;\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction CardsList(props) {\r\n\r\n  function fillRow(rowCards) {\r\n    let row = rowCards.map((card) => {\r\n      return (\r\n        <div className=\"card-container col-lg-4 col-md-6 col-sm-12\" key={card+card[\"cardNo\"]}>\r\n          <div className=\"card text-left\" key={card[\"cardNo\"]}>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-5\">\r\n                <a href=\"/#\" id={card['cardNo'] + \"link\"}>\r\n                  <img src={card[\"src\"]} className=\"card-img\" alt=\"...\"/>\r\n                </a>\r\n              </div>\r\n              <div className=\"col-7\">\r\n                <div className=\"card-header\" >{card['cardNo'] + ' ' + card['cardName']}</div>\r\n                <div className=\"card-body cards-body\" >\r\n                  <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                  <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                  <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                  <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                  <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                  <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return row;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {fillRow(props.cards.slice(props.cardsPerPage*(props.page-1), props.cards.length <props.cardsPerPage*props.page ? props.cards.length : props.cardsPerPage*props.page))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Cards(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  function handlePageClick(data) {\r\n    props.setPage(data.selected + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      <div className=\"row justify-content-center align-items-center pagination-top\">\r\n        <ReactPaginate\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'page-item disabled'}\r\n          breakLinkClassName={'page-link'}\r\n          pageCount={props.pages}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item'}\r\n          forcePage={props.page-1}\r\n          pageLinkClassName={'page-link'}\r\n          previousClassName={'page-item'}\r\n          previousLinkClassName={'page-link'}\r\n          nextClassName={'page-item'}\r\n          nextLinkClassName={'page-link'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n      <div className=\"row d-flex card-list-container\">\r\n        <CardsList cards={props.cards} page={props.page} cardsInRow={props.cardsInRow} cardsPerPage={props.cardsPerPage} rowsPerPage={props.rowsPerPage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport Cards from './Cards';\r\n\r\nfunction CardDB(props) {\r\n  const [cards, setCards] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  const setDisplay = props.setDisplay;\r\n  var cardsInRow = 3;\r\n  var cardsPerPage = cardsInRow * 4;\r\n  var rowsPerPage = Math.floor(cardsPerPage/cardsInRow);\r\n\r\n  function sortCards() {\r\n\r\n    return function (a, b) {\r\n      if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n        return 1;\r\n      }\r\n      else{\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const getData = useCallback((mounted) => {\r\n    var currentDate = Date.now();\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('cardData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    if (sessionStorage.getItem('cardData') == null) {\r\n      // console.log(\"Session Storage doesn't exist.\");\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n          // console.log(cards);\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        console.log(error);\r\n      });\r\n    }\r\n    else if (currentDate - JSON.parse(sessionStorage.getItem('cardData'))['created'] >= 43200000) {\r\n      // console.log(\"Created At: \" + JSON.parse(sessionStorage.getItem('cardData'))['created']);\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n          // console.log(cards);\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        console.log(error);\r\n      });\r\n    }\r\n    else {\r\n      if (mounted) {\r\n        var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n        setCards(cards.sort(sortCards()));\r\n        setPages(Math.ceil(cards.length/cardsPerPage));\r\n        setDisplay(\"none\");\r\n        // console.log(cards);\r\n      }\r\n    }\r\n  }, [props.service, cardsPerPage, setDisplay]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row flex-nowrap\">\r\n        <div className=\"col cards-filter-container\">\r\n          <div className=\"filterWrapper-top row flex\">\r\n            <FilterMenu sortCards={sortCards} service={props.service} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n          </div>\r\n          <div className=\"cardsWrapper\">\r\n            <Cards service={props.service} cards={cards} pages={pages} page={page} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n          </div>\r\n        </div>\r\n        {/*<div className=\"filterMenuWrapper col-3\">\r\n          <FilterMenu service={props.service} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n        </div>\r\n        <div className=\"cardsWrapper col-9\">\r\n          <Cards service={props.service} cards={cards} pages={pages} page={page} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n        </div>*/}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CardDB;\r\n","import React, { useEffect } from 'react';\r\nimport AdminNavbar from './AdminNavbar.js';\r\nimport CardDB from './CardDB';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AdminPanel (props) {\r\n  const history = useHistory();\r\n  const setPageName = props.setPageName;\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Admin Dashboard\");\r\n    if (props.loaded) {\r\n      if (props.userDetails[\"role\"] !== \"admin\")\r\n        history.push('/');\r\n    }\r\n    return;\r\n  },[props.loaded, props.userDetails, history, setPageName]);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNavbar service={props.service}/>\r\n      <CardDB {...props} service={props.service}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel;\r\n","import React, {useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, InputGroup, InputGroupAddon, InputGroupText, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FilterMenu(props) {\r\n  const [power, setPower] = useState();\r\n  const [sets, setSets] = useState();\r\n  const [types, setTypes] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function filterPages() {\r\n    var search = document.getElementById(\"searchInput\").value.trim();\r\n\r\n    var attributeSelect = document.getElementById(\"attributeSelect\").value;\r\n    if (attributeSelect === \"default\")\r\n      attributeSelect = \"\";\r\n\r\n    var cardLevelSelect = document.getElementById(\"cardLevelSelect\").value;\r\n    if (cardLevelSelect === \"default\")\r\n      cardLevelSelect = \"\";\r\n\r\n    var cardNameInput = document.getElementById(\"cardNameInput\").value.trim();\r\n\r\n    var cardTypeSelect = document.getElementById(\"cardTypeSelect\").value;\r\n    if (cardTypeSelect === \"default\")\r\n      cardTypeSelect = \"\";\r\n\r\n    var colorSelect = document.getElementById(\"colorSelect\").value;\r\n    if (colorSelect === \"default\")\r\n      colorSelect = \"\";\r\n\r\n    var costSelect = document.getElementById(\"costSelect\").value;\r\n    if (costSelect === \"default\")\r\n      costSelect = \"\";\r\n\r\n    var digivolveSelect = document.getElementById(\"digivolveSelect\").value;\r\n    if (digivolveSelect === \"default\")\r\n      digivolveSelect = \"\";\r\n\r\n    var formSelect = document.getElementById(\"formSelect\").value;\r\n    if (formSelect === \"default\")\r\n      formSelect = \"\";\r\n\r\n    var playEffectInput = document.getElementById(\"playEffectInput\").value.trim();\r\n\r\n    var powerSelect = document.getElementById(\"powerSelect\").value;\r\n    if (powerSelect === \"default\")\r\n      powerSelect = \"\";\r\n\r\n    var securityEffectInput = document.getElementById(\"securityEffectInput\").value.trim();\r\n\r\n    var setSelect = document.getElementById(\"setSelect\").value;\r\n    if (setSelect === \"default\")\r\n      setSelect = \"\";\r\n\r\n    var typeSelect = document.getElementById(\"typeSelect\").value;\r\n    if (typeSelect === \"default\")\r\n      typeSelect = \"\";\r\n\r\n    var raritySelect = document.getElementById(\"raritySelect\").value;\r\n    if (raritySelect === \"default\")\r\n      raritySelect = \"\";\r\n\r\n    var empty = !(search || attributeSelect || cardLevelSelect || cardNameInput || cardTypeSelect || colorSelect || costSelect || digivolveSelect || formSelect || playEffectInput || powerSelect || securityEffectInput || setSelect || typeSelect || raritySelect);\r\n\r\n    var cardData = [];\r\n\r\n    if (empty) {\r\n      cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"]\r\n      props.setCards(cardData);\r\n      props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n      props.setPage(1);\r\n      // console.log(\"Length: \"+cardData.length);\r\n      // console.log(\"Pages: \"+Math.ceil(cardData.length/props.cardsPerPage));\r\n      return;\r\n    }\r\n\r\n    cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"].filter(function (card) {\r\n      var flag = true;\r\n      if (search) {\r\n        flag = flag && card[\"fullText\"].toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n      }\r\n      if (attributeSelect)\r\n        flag = flag && card['attribute'] === attributeSelect;\r\n      if (cardLevelSelect)\r\n        flag = flag && card[\"cardLv\"] === cardLevelSelect;\r\n      if (cardNameInput) {\r\n        flag = flag && card[\"cardName\"].toLowerCase().indexOf(cardNameInput.toLowerCase()) > -1;\r\n      }\r\n      if (cardTypeSelect)\r\n        flag = flag && card[\"cardType\"] === cardTypeSelect;\r\n      if (colorSelect)\r\n        flag = flag && card[\"cardColor\"] === colorSelect;\r\n      if (costSelect)\r\n        flag = flag && card[\"playCost\"] === costSelect;\r\n      if (digivolveSelect)\r\n        flag = flag && (card[\"digivolve1Cost\"] === digivolveSelect || card[\"digivolve2Cost\"] === digivolveSelect);\r\n      if (formSelect)\r\n        flag = flag && card[\"form\"] === formSelect;\r\n      if (playEffectInput)\r\n        flag = flag && card[\"effect\"].toLowerCase().indexOf(playEffectInput.toLowerCase()) > -1;\r\n      if (powerSelect)\r\n        flag = flag && card[\"digiPower\"] === powerSelect;\r\n      if (securityEffectInput)\r\n        flag = flag && card[\"securityEffect\"].toLowerCase().indexOf(securityEffectInput.toLowerCase()) > -1;\r\n      if (setSelect)\r\n        flag = flag && card[\"setId\"] === setSelect;\r\n      if (typeSelect)\r\n        flag = flag && card[\"type\"] === typeSelect;\r\n      if (raritySelect)\r\n        flag = flag && card[\"cardRarity\"] === raritySelect;\r\n      return flag;\r\n    });\r\n    props.setCards(cardData.sort(props.sortCards()));\r\n    props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n    // console.log(cardData);\r\n    // console.log(\"Length: \"+cardData.length);\r\n    // console.log(\"Pages: \"+Math.ceil(cardData.length/props.cardsPerPage));\r\n    props.setPage(1);\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Get(\"/cards/power\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((power) => {\r\n          return (\r\n            <option key={\"power\" + power} value={power}>{power}</option>\r\n          );\r\n        });\r\n        setPower(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setPower(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/sets\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((sets) => {\r\n          return (\r\n            <option key={\"set\" + sets} value={sets}>{sets}</option>\r\n          );\r\n        });\r\n        setSets(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setSets(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/types\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((types) => {\r\n          return (\r\n            <option key={\"type\" + types} value={types}>{types}</option>\r\n          );\r\n        });\r\n        setTypes(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setTypes(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n  }, [props.service]);\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"FilterMenu w-100\">\r\n      <Form className=\"px-4 py-3\" id=\"filter\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.setPage(1);\r\n        filterPages();\r\n      }}>\r\n        <div className=\"form-row d-flex\">\r\n          <div className=\"form-group-filter-element w-100\">\r\n            <div className=\"form-group\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"bg-dark text-white\"> All Text </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"bg-dark text-white\" placeholder=\"Search Card Text\" id=\"searchInput\"/>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setIsOpen(!isOpen)}}>\r\n                    Show more filters\r\n                  </button>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse isOpen={isOpen}>\r\n          <div className=\"d-flex form-row flex-wrap justify-content-left\">\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText className=\"bg-dark text-white\"> Attribute </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"attributeSelect\" sm=\"8\" id=\"attributeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Attribute- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"Data\"> Data </option>\r\n                    <option value=\"Free\"> Free </option>\r\n                    <option value=\"Unknown\"> Unknown </option>\r\n                    <option value=\"Vaccine\"> Vaccine </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Level </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardLevelSelect\" sm=\"8\" id=\"cardLevelSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Level- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Name </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"-Card Name-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardTypeSelect\" sm=\"8\" id=\"cardTypeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Type- </option>\r\n                    <option value=\"Digi-Egg\"> Digi-Egg </option>\r\n                    <option value=\"Digimon\"> Digimon </option>\r\n                    <option value=\"Option\"> Option </option>\r\n                    <option value=\"Tamer\"> Tamer </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Color </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"colorSelect\" sm=\"8\" id=\"colorSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Color- </option>\r\n                    <option value=\"Black\"> Black </option>\r\n                    <option value=\"Blue\"> Blue </option>\r\n                    <option value=\"Green\"> Green </option>\r\n                    <option value=\"Purple\"> Purple </option>\r\n                    <option value=\"Red\"> Red </option>\r\n                    <option value=\"White\"> White </option>\r\n                    <option value=\"Yellow\"> Yellow </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"costSelect\" sm=\"8\" id=\"costSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                    <option value=\"8\"> 8 </option>\r\n                    <option value=\"9\"> 9 </option>\r\n                    <option value=\"10\"> 10 </option>\r\n                    <option value=\"11\"> 11 </option>\r\n                    <option value=\"12\"> 12 </option>\r\n                    <option value=\"13\"> 13 </option>\r\n                    <option value=\"14\"> 14 </option>\r\n                    <option value=\"15\"> 15 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Digivolve Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"digivolveSelect\" sm=\"8\" id=\"digivolveSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Digivolve Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Form </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"formSelect\" sm=\"8\" id=\"formSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Form- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"In-Training\"> In-Training </option>\r\n                    <option value=\"Rookie\"> Rookie </option>\r\n                    <option value=\"Champion\"> Champion </option>\r\n                    <option value=\"Ultimate\"> Ultimate </option>\r\n                    <option value=\"Mega\"> Mega </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"playEffectInput\" sm=\"8\" id=\"playEffectInput\" placeholder=\"-Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText className=\"bg-dark text-white\"> Power </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"powerSelect\" sm=\"8\" id=\"powerSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Power- </option>\r\n                    {power}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Rarity </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"raritySelect\" sm=\"8\" id=\"raritySelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Rarity- </option>\r\n                    <option value=\"C\"> Common </option>\r\n                    <option value=\"U\"> Uncommon </option>\r\n                    <option value=\"R\"> Rare </option>\r\n                    <option value=\"SR\"> Super Rare </option>\r\n                    <option value=\"SEC\"> Secret Rare </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Security Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"securityEffectInput\" sm=\"8\" id=\"securityEffectInput\" placeholder=\"-Security Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Set </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"setSelect\" sm=\"8\" id=\"setSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Set- </option>\r\n                    {sets}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"typeSelect\" sm=\"8\" id=\"typeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Type- </option>\r\n                    {types}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n        <div className=\"form-row\">\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button style={{marginLeft: \".5rem\"}} type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"searchInput\").value = '';\r\n              document.getElementById(\"attributeSelect\").value = 'default';\r\n              document.getElementById(\"cardLevelSelect\").value = 'default';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"cardTypeSelect\").value = 'default';\r\n              document.getElementById(\"colorSelect\").value = 'default';\r\n              document.getElementById(\"costSelect\").value = 'default';\r\n              document.getElementById(\"digivolveSelect\").value = 'default';\r\n              document.getElementById(\"formSelect\").value = 'default';\r\n              document.getElementById(\"playEffectInput\").value = '';\r\n              document.getElementById(\"powerSelect\").value = 'default';\r\n              document.getElementById(\"securityEffectInput\").value = '';\r\n              document.getElementById(\"setSelect\").value = 'default';\r\n              document.getElementById(\"typeSelect\").value = 'default';\r\n              document.getElementById(\"raritySelect\").value = 'default';\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button style={{marginRight: \".5rem\"}} type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMenu;\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\n\r\nfunction CardsList(props) {\r\n\r\n  function fillRow(rowCards) {\r\n    let row = rowCards.map((card) => {\r\n      return (\r\n        <div className=\"card-container col-lg-4 col-md-6 col-sm-12\" key={card[\"cardNo\"]}>\r\n          <div className=\"card text-white bg-dark text-left\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-5\">\r\n                <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                  <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                  <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                </a>\r\n              </div>\r\n              <div className=\"col-7\">\r\n                <div className=\"card-header\" >{card['cardNo'] + ' ' + card['cardName']}</div>\r\n                <div className=\"card-body cards-body\" >\r\n                  <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                  <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                  <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                  <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                  <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                  <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return row;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {fillRow(props.cards.slice(props.cardsPerPage*(props.page-1), props.cards.length <props.cardsPerPage*props.page ? props.cards.length : props.cardsPerPage*props.page))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Cards(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  function handlePageClick(data) {\r\n    props.setPage(data.selected + 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center align-items-center pagination-top\">\r\n        <ReactPaginate\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'page-item disabled'}\r\n          breakLinkClassName={'page-link text-white bg-dark'}\r\n          pageCount={props.pages}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item'}\r\n          pageLinkClassName={'page-link text-white bg-dark'}\r\n          forcePage={props.page-1}\r\n          previousClassName={'page-item'}\r\n          previousLinkClassName={'page-link text-white bg-dark'}\r\n          nextClassName={'page-item'}\r\n          nextLinkClassName={'page-link text-white bg-dark'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n      <div className=\"row d-flex card-list-container\">\r\n        <CardsList cards={props.cards} page={props.page} cardsInRow={props.cardsInRow} cardsPerPage={props.cardsPerPage} rowsPerPage={props.rowsPerPage}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport Cards from './Cards';\r\n\r\nfunction CardDB(props) {\r\n  const [cards, setCards] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  const setDisplay = props.setDisplay;\r\n  const setPageName = props.setPageName;\r\n  var cardsInRow = 3;\r\n  var cardsPerPage = cardsInRow * 4;\r\n  var rowsPerPage = Math.floor(cardsPerPage/cardsInRow);\r\n\r\n  function sortCards() {\r\n\r\n    return function (a, b) {\r\n      if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n        return 1;\r\n      }\r\n      else{\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    var currentDate = Date.now();\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('cardData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    if (sessionStorage.getItem('cardData') == null) {\r\n      // console.log(\"Session Storage doesn't exist.\");\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n          // console.log(cards);\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        console.log(error);\r\n      });\r\n    }\r\n    else if (currentDate - JSON.parse(sessionStorage.getItem('cardData'))['created'] >= 43200000) {\r\n      // console.log(\"Created At: \" + JSON.parse(sessionStorage.getItem('cardData'))['created']);\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards);\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n          // console.log(cards);\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        console.log(error);\r\n      });\r\n    }\r\n    else {\r\n      if (mounted) {\r\n        var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n        setCards(cards);\r\n        setPages(Math.ceil(cards.length/cardsPerPage));\r\n        setDisplay(\"none\");\r\n        // console.log(cards);\r\n      }\r\n    }\r\n  }, [props.service, cardsPerPage, setDisplay]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Card Database\");\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData, setPageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex flex-column flex-start\">\r\n      <div className=\"filterWrapper-top flex-row\">\r\n        <FilterMenu sortCards={sortCards} service={props.service} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n      </div>\r\n      <div className=\"cardsWrapper flex-grow-1 d-flex flex-column\">\r\n        <Cards service={props.service} cards={cards} pages={pages} page={page} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CardDB;\r\n","import React, {useState} from 'react';\r\nimport { Input, InputGroup, InputGroupAddon, InputGroupText, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction DeckInfo(props) {\r\n  const [infoOpen, setInfoOpen] = useState(true);\r\n\r\n  var date = Date.parse(props.params['creation']);\r\n  date = new Date(date);\r\n  date = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \", \" + date.getHours() + \":\" + date.getMinutes();\r\n\r\n\r\n  return (\r\n    <div className=\"deck-info-list\">\r\n      <div className=\"deckInfo\"  style={{border: \"none\", padding: \"0px\"}}>\r\n        <div className=\"titleButton\">\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setInfoOpen(!infoOpen)}}>\r\n            Deck Info\r\n          </button>\r\n        </div>\r\n        <Collapse isOpen={infoOpen}>\r\n          <div className=\"deck-info-container col\">\r\n            <div className=\"row\" style={{margin:\"0px\"}}>\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"bg-dark text-white\"> Deck Title </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"bg-dark text-white\" id=\"deckTitle\" value={props.params[\"title\"]} disabled/>\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"bg-dark text-white\"> Created By </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"bg-dark text-white\" id=\"createdBy\" value={props.params[\"user\"]} disabled/>\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"bg-dark text-white\"> Created On </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"bg-dark text-white\" id=\"createdOn\" value={date} disabled/>\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <Input className=\"bg-dark text-white\" value=\"Private\" id=\"private\" disabled/>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText className=\"bg-dark text-white\">\r\n                    <Input addon type=\"checkbox\" id=\"privacy\" checked={props.params[\"privacy\"]} disabled/>\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckInfo;\r\n","import React, {useState} from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\nfunction DeckInfo2(props) {\r\n  const [levelsOpen, setLevelsOpen] = useState(true);\r\n  const [colorsOpen, setColorsOpen] = useState(true);\r\n  const [typesOpen, setTypesOpen] = useState(true);\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"Black\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"Black\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"Black\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"Black\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"Black\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n  var colors = Object.keys(props.params[\"mainDeckInfo\"][\"colors\"]);\r\n  var colorValues = [];\r\n  var colorCount = [];\r\n  var borderColors = [];\r\n  for (const color in props.params[\"mainDeckInfo\"][\"colors\"]) {\r\n    var [colorValue, borderColor] = getColorValue(color);\r\n    colorValues.push(colorValue);\r\n    borderColors.push(borderColor);\r\n    colorCount.push(props.params[\"mainDeckInfo\"][\"colors\"][color])\r\n  }\r\n\r\n  const colorData = {\r\n    labels: colors,\r\n    datasets: [\r\n      {\r\n        barPercentage: 1,\r\n        barThickness: \"flex\",\r\n        minBarThickness: 30,\r\n        maxBarThickness: 30,\r\n        backgroundColor: colorValues,\r\n        borderColor: borderColors,\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: colorValues,\r\n        hoverBorderColor: borderColors,\r\n        data: colorCount\r\n      }\r\n    ]\r\n  };\r\n\r\n  var typeJson = {};\r\n  colors.forEach((color) => {\r\n    typeJson[color] = {\r\n      borderColor: [],\r\n      barColor: [],\r\n      values: []\r\n    };\r\n  });\r\n  var cardTypes = props.params[\"mainDeckInfo\"][\"cardTypes\"];\r\n  var types = Object.keys(cardTypes);\r\n  for (const type in cardTypes) {\r\n    for (const color in typeJson) {\r\n      var [bar, border] = getColorValue(color);\r\n      if (cardTypes[type][\"colors\"][color]) {\r\n        typeJson[color][\"values\"].push(cardTypes[type][\"colors\"][color])\r\n      }\r\n      else {\r\n        typeJson[color][\"values\"].push(0);\r\n      }\r\n      typeJson[color][\"barColor\"].push(bar);\r\n      typeJson[color][\"borderColor\"].push(border);\r\n    }\r\n  }\r\n\r\n  var datasets = []\r\n  Object.keys(typeJson).forEach((color) => {\r\n    datasets.push({\r\n      label: color,\r\n      stack: \"key\",\r\n      barPercentage: 1,\r\n      barThickness: \"flex\",\r\n      minBarThickness: 30,\r\n      maxBarThickness: 30,\r\n      backgroundColor: typeJson[color][\"barColor\"],\r\n      borderColor: typeJson[color][\"borderColor\"],\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: typeJson[color][\"barColor\"],\r\n      hoverBorderColor: typeJson[color][\"borderColor\"],\r\n      data: typeJson[color][\"values\"]\r\n    })\r\n  });\r\n\r\n  const typeData = {\r\n    labels: types,\r\n    datasets: datasets\r\n  };\r\n\r\n  // var costJson = {};\r\n  // colors.forEach((color) => {\r\n  //   costJson[color] = {\r\n  //     borderColor: [],\r\n  //     barColor: [],\r\n  //     values: []\r\n  //   };\r\n  // });\r\n  // var costs = props.params[\"mainDeckInfo\"][\"costs\"]\r\n  // var costKeys = Object.keys(costs);\r\n  // var costKeysLookup = Object.keys(costs);\r\n  // var index = costKeys.findIndex((temp) => temp === '-');\r\n  // if (index > -1) {\r\n  //   costKeys.splice(index, 1);\r\n  //   costKeysLookup.splice(index, 1);\r\n  //   costKeys.unshift(0);\r\n  //   costKeysLookup.unshift('-');\r\n  // }\r\n  // for (var i=0; i<costKeysLookup.length; i++) {\r\n  //   for (const color in costJson) {\r\n  //     [bar, border] = getColorValue(color);\r\n  //     if (costs[costKeysLookup[i]][\"colors\"][color]) {\r\n  //       costJson[color][\"values\"].push(costs[costKeysLookup[i]][\"colors\"][color])\r\n  //     }\r\n  //     else {\r\n  //       costJson[color][\"values\"].push(0);\r\n  //     }\r\n  //     costJson[color][\"barColor\"].push(bar);\r\n  //     costJson[color][\"borderColor\"].push(border);\r\n  //   }\r\n  // }\r\n  //\r\n  // var datasets = [];\r\n  // Object.keys(costJson).forEach((color) => {\r\n  //   datasets.push({\r\n  //     label: color,\r\n  //     stack: \"key\",\r\n  //     barPercentage: 1,\r\n  //     barThickness: \"flex\",\r\n  //     minBarThickness: 10,\r\n  //     maxBarThickness: 30,\r\n  //     backgroundColor: costJson[color][\"barColor\"],\r\n  //     borderColor: costJson[color][\"borderColor\"],\r\n  //     borderWidth: 1,\r\n  //     hoverBackgroundColor: costJson[color][\"barColor\"],\r\n  //     hoverBorderColor: costJson[color][\"borderColor\"],\r\n  //     data: costJson[color][\"values\"]\r\n  //   })\r\n  // });\r\n  //\r\n  // const costData = {\r\n  //   labels: costKeys,\r\n  //   datasets: datasets\r\n  // };\r\n\r\n  var levelJson = {};\r\n  colors.forEach((color) => {\r\n    levelJson[color] = {\r\n      borderColor: [],\r\n      barColor: [],\r\n      values: []\r\n    };\r\n  });\r\n  var levels = props.params[\"mainDeckInfo\"][\"levels\"];\r\n  var levelKeys = Object.keys(levels);\r\n  var index = levelKeys.findIndex((temp) => temp === '-');\r\n  if (index > -1) {\r\n    levelKeys.splice(index, 1);\r\n  }\r\n  for (const level in levels) {\r\n    if (level === '-')\r\n      continue;\r\n    for (const color in levelJson) {\r\n      [bar, border] = getColorValue(color);\r\n      if (levels[level][\"colors\"][color]) {\r\n        levelJson[color][\"values\"].push(levels[level][\"colors\"][color])\r\n      }\r\n      else {\r\n        levelJson[color][\"values\"].push(0);\r\n      }\r\n      levelJson[color][\"barColor\"].push(bar);\r\n      levelJson[color][\"borderColor\"].push(border);\r\n    }\r\n  }\r\n\r\n  datasets = [];\r\n  Object.keys(levelJson).forEach((color) => {\r\n    datasets.push({\r\n      label: color,\r\n      stack: \"key\",\r\n      barPercentage: 1,\r\n      barThickness: \"flex\",\r\n      minBarThickness: 30,\r\n      maxBarThickness: 30,\r\n      backgroundColor: levelJson[color][\"barColor\"],\r\n      borderColor: levelJson[color][\"borderColor\"],\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: levelJson[color][\"barColor\"],\r\n      hoverBorderColor: levelJson[color][\"borderColor\"],\r\n      data: levelJson[color][\"values\"]\r\n    })\r\n  });\r\n\r\n  const levelData = {\r\n    labels: levelKeys,\r\n    datasets: datasets\r\n  };\r\n\r\n  return (\r\n    <div className=\"deck-info-list\">\r\n      <div className=\"colorChart panel-row-chart\">\r\n        <div className=\"titleButton\">\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setColorsOpen(!colorsOpen)}}>\r\n            Colors\r\n          </button>\r\n        </div>\r\n        <Collapse isOpen={colorsOpen}>\r\n          <HorizontalBar\r\n            data={colorData}\r\n            height={colorData[\"labels\"].length * 30 + 30}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    stepSize: 1,\r\n                    maxTicksLimit: 11,\r\n                  }\r\n                }],\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n              tooltips: {\r\n                caretSize: 0,\r\n                enabled: true,\r\n                //mode: 'single',\r\n                callbacks: {\r\n                  label: function (tooltipItem, data) {\r\n                    const tooltip = data.datasets[tooltipItem.datasetIndex];\r\n                    const value = tooltip.data[tooltipItem.index];\r\n                    return value === 0 ? null : value;\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Collapse>\r\n      </div>\r\n      <div className=\"typeChart panel-row-chart-bottom\">\r\n        <div className=\"titleButton\">\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setTypesOpen(!typesOpen)}}>\r\n            Types\r\n          </button>\r\n        </div>\r\n        <Collapse isOpen={typesOpen}>\r\n          <HorizontalBar\r\n            data={typeData}\r\n            height={typeData[\"labels\"].length * 30 + 30 + 15*colors.length}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    stepSize: 1,\r\n                    maxTicksLimit: 11,\r\n                  }\r\n                }]\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n              tooltips: {\r\n                caretSize: 0,\r\n                enabled: true,\r\n                //mode: 'single',\r\n                callbacks: {\r\n                  label: function (tooltipItem, data) {\r\n                    const tooltip = data.datasets[tooltipItem.datasetIndex];\r\n                    const value = tooltip.data[tooltipItem.index];\r\n                    return value === 0 ? null : value;\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Collapse>\r\n      </div>\r\n      {/*<div className=\"costChart panel-row-chart\">\r\n        <div className=\"titleButton\">\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setCostsOpen(!costsOpen)}}>\r\n            Costs\r\n          </button>\r\n        </div>\r\n        <Collapse isOpen={costsOpen}>\r\n          <HorizontalBar\r\n            data={costData}\r\n            height={costData[\"labels\"].length * 30 + 30 + 15*colors.length}\r\n            options={{\r\n              responsive: true,\r\n              scales: {\r\n                xAxes: [{\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    stepSize: 1,\r\n                    maxTicksLimit: 11,\r\n                  }\r\n                }]\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n              tooltips: {\r\n                caretSize: 0,\r\n                enabled: true,\r\n                //mode: 'single',\r\n                callbacks: {\r\n                  label: function (tooltipItem, data) {\r\n                    const tooltip = data.datasets[tooltipItem.datasetIndex];\r\n                    const value = tooltip.data[tooltipItem.index];\r\n                    return value === 0 ? null : value;\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Collapse>\r\n      </div>*/}\r\n      <div className=\"levelChart panel-row-bottom\">\r\n        <div className=\"titleButton\">\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setLevelsOpen(!levelsOpen)}}>\r\n            Levels\r\n          </button>\r\n        </div>\r\n        <Collapse isOpen={levelsOpen}>\r\n          <HorizontalBar\r\n            data={levelData}\r\n            height={levelData[\"labels\"].length * 30 + 30 + 15*colors.length}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    stepSize: 1,\r\n                    maxTicksLimit: 11,\r\n                  }\r\n                }]\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n              tooltips: {\r\n                caretSize: 0,\r\n                enabled: true,\r\n                //mode: 'single',\r\n                callbacks: {\r\n                  label: function (tooltipItem, data) {\r\n                    const tooltip = data.datasets[tooltipItem.datasetIndex];\r\n                    const value = tooltip.data[tooltipItem.index];\r\n                    return value === 0 ? null : value;\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckInfo2;\r\n","import React from 'react';\r\nimport { FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, UncontrolledPopover, PopoverHeader, PopoverBody} from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\n\r\nfunction MainDeck(props) {\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"White\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"White\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"White\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"White\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"White\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n\r\n  var result = props.params[\"mainDeck\"].map((card, i) => {\r\n    if (!card)\r\n      return(<></>);\r\n    var [backgroundColor, textColor] = getColorValue(card[\"cardColor\"]);\r\n    return (\r\n      <FormGroup className=\"deck-row\" key={card[\"cardNo\"] + card[\"cardName\"]} row>\r\n        <InputGroup>\r\n          <Input value={card[\"cardNo\"] + \" \" + card[\"cardName\"]} id={card[\"cardNo\"] + \"row\"} style={{backgroundColor: backgroundColor, color: textColor}} disabled/>\r\n          <UncontrolledPopover delay={{\"show\": 250}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card['cardNo'] + \"row\"}>\r\n            <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"bg-dark text-white\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"]}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                        <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                        <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </PopoverBody>\r\n          </UncontrolledPopover>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText className=\"bg-dark text-white\"> {card[\"count\"]} </InputGroupText>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    )\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default MainDeck;\r\n","import React from 'react';\r\nimport { FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\n\r\nfunction EggDeck(props) {\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"White\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"White\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"White\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"White\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"White\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n\r\n  var result = props.params[\"eggDeck\"].map((card, i) => {\r\n    if (!card)\r\n      return(<></>);\r\n    var [backgroundColor, textColor] = getColorValue(card[\"cardColor\"]);\r\n    return (\r\n      <FormGroup className=\"deck-row\" key={card[\"cardNo\"] + card[\"cardName\"]} row>\r\n        <InputGroup>\r\n          <Input value={card[\"cardNo\"] + \" \" + card[\"cardName\"]} id={card[\"cardNo\"] + \"row\"} style={{backgroundColor: backgroundColor, color: textColor}} disabled/>\r\n          <UncontrolledPopover delay={{\"show\": 250}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card['cardNo'] + \"row\"}>\r\n            <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"bg-dark text-white\">\r\n              <div className=\"bg-dark text-white card text-left\" key={card[\"cardNo\"]}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                        <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                        <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </PopoverBody>\r\n          </UncontrolledPopover>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText className=\"bg-dark text-white\"> {card[\"count\"]} </InputGroupText>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    )\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default EggDeck;\r\n","import React, {useState} from 'react';\r\nimport { UncontrolledPopover, PopoverHeader, PopoverBody, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\n\r\nfunction VisualView(props) {\r\n  const [eggDeckOpen, setEggDeckOpen] = useState(true);\r\n  const [mainDeckOpen, setMainDeckOpen] = useState(true);\r\n  const [mainSecondary, setMainSecondary] = useState(\"flex\");\r\n  const [eggSecondary, setEggSecondary] = useState(\"flex\");\r\n  let mainDecklist = {};\r\n  props.params[\"mainDeck\"].forEach((card) => {\r\n    if (mainDecklist[card[\"cardLv\"]]) {\r\n      mainDecklist[card[\"cardLv\"]].push(card);\r\n    }\r\n    else {\r\n      mainDecklist[card[\"cardLv\"]] = [card];\r\n    }\r\n  });\r\n\r\n  var keys = Object.keys(mainDecklist);\r\n  var keysLookup = Object.keys(mainDecklist);\r\n  var index = keys.findIndex((temp) => temp === '-');\r\n  if (index > -1) {\r\n    keysLookup.splice(index, 1);\r\n    keysLookup.unshift('-');\r\n  }\r\n\r\n  var deckArr = [];\r\n  for (var i=0; i<keys.length; i++){\r\n    for (var j=0; j<mainDecklist[keys[i]].length; j++){\r\n      deckArr.push(mainDecklist[keys[i]][j]);\r\n    }\r\n  }\r\n\r\n  // Iterate through dictionary keys. If key is '-' then do last\r\n\r\n  let mainDeck = deckArr.map((card) => {\r\n    return (\r\n      <div className=\"card-container col-xl-3 col-lg-6 col-md-6 col-sm-6 col-12\" key={card[\"cardNo\"]}>\r\n        <div className=\"card text-white bg-dark text-left\">\r\n          <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n            <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n            <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n          </a>\r\n          <UncontrolledPopover delay={{\"show\": 350}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card['cardNo'] + \"link\"}>\r\n            <PopoverHeader className=\"text-white bg-dark\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"text-white bg-dark\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"]}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                      <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  let eggDeck = props.params[\"eggDeck\"].map((card) => {\r\n    return (\r\n      <div className=\"card-container col-xl-6 col-lg-12 col-md-12 col-sm-12 col-12\" key={card[\"cardNo\"]}>\r\n        <div className=\"card text-white bg-dark text-left\">\r\n          <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n            <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n            <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n          </a>\r\n          <UncontrolledPopover delay={{\"show\": 350}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card['cardNo'] + \"link\"}>\r\n            <PopoverHeader className=\"text-white bg-dark\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"text-white bg-dark\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"]}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                      <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-column flex-grow-1 col-12 col-xl-8 col-lg-8 col-md-8 col-sm-12 visualView-container-decks deck-info-list-container\" >\r\n        <div className=\"d-flex flex-column flex-grow-1 deck-info-list\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setMainDeckOpen(!mainDeckOpen);\r\n              if (mainSecondary === \"none\") {\r\n                setMainSecondary(\"flex\");\r\n              }\r\n              else {\r\n                setMainSecondary(\"none\");\r\n              }}}>\r\n              Main Deck\r\n            </button>\r\n          </div>\r\n          <Collapse className=\"flex-row flex-wrap card-list-container\" isOpen={mainDeckOpen} style={{overflowY:\"auto\", overflowX:\"hidden\", display: mainSecondary}} >\r\n            {mainDeck}\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex flex-column flex-grow-1 col-12 col-xl-4 col-lg-4 col-md-4 col-sm-12 visualView-container-decks deck-info-list-container\">\r\n        <div className=\"d-flex flex-column flex-grow-1 deck-info-list\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setEggDeckOpen(!eggDeckOpen);\r\n              if (eggSecondary === \"none\") {\r\n                setEggSecondary(\"flex\");\r\n              }\r\n              else {\r\n                setEggSecondary(\"none\");\r\n              }}}>\r\n              Egg Deck\r\n            </button>\r\n          </div>\r\n          <Collapse className=\"flex-row flex-wrap card-list-container\" isOpen={eggDeckOpen} style={{overflowY:\"auto\", overflowX:\"hidden\", display: eggSecondary}}>\r\n            {eggDeck}\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VisualView;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport DeckInfo1 from './DeckInfo1.js';\r\nimport DeckInfo2 from './DeckInfo2.js';\r\nimport MainDeck from './MainDeck.js';\r\nimport EggDeck from './EggDeck.js';\r\nimport VisualView from './VisualView.js';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nfunction sortDeck() {\r\n\r\n  return function (a, b) {\r\n    if (a[\"cardColor\"] > b[\"cardColor\"]) {\r\n      return 1;\r\n    }\r\n    else if (a[\"cardColor\"] < b[\"cardColor\"]) {\r\n      return -1;\r\n    }\r\n    else {\r\n      if (a[\"cardType\"] > b[\"cardType\"]) {\r\n        return 1;\r\n      }\r\n      else if (a[\"cardType\"] < b[\"cardType\"]) {\r\n        return -1;\r\n      }\r\n      else {\r\n        if (a[\"cardLv\"] > b[\"cardLv\"]) {\r\n          return 1;\r\n        }\r\n        else if (a[\"cardLv\"] < b[\"cardLv\"]) {\r\n          return -1;\r\n        }\r\n        else {\r\n          if (a[\"cardName\"] > b[\"cardName\"]) {\r\n            return 1;\r\n          }\r\n          else if (a[\"cardName\"] < b[\"cardName\"]) {\r\n            return -1;\r\n          }\r\n          else {\r\n            if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n              return 1;\r\n            }\r\n            else if (a[\"cardNo\"] < b[\"cardNo\"]) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction Deck(props) {\r\n  const [eggDeckOpen, setEggDeckOpen] = useState(true);\r\n  const [mainDeckOpen, setMainDeckOpen] = useState(true);\r\n  const [toRender, setToRender] = useState(false);\r\n  const [visualView, setVisualView] = useState(\"none\");\r\n  const [listView, setListView] = useState(\"flex\");\r\n  const [deck, setDeck] = useState({\r\n    mainDeck: [],\r\n    mainDeckInfo: {\r\n      colors: {},\r\n      // costs: {},\r\n      cardTypes: {},\r\n      levels: {}\r\n    },\r\n    eggDeck: [],\r\n    eggDeckInfo: {\r\n      colors: {}\r\n    }\r\n  });\r\n  let mParams = useParams();\r\n  const setDisplay = props.setDisplay;\r\n  const setPageName = props.setPageName;\r\n  const history = useHistory();\r\n\r\n  const getData = useCallback((mounted) => {\r\n    setDisplay(\"block\");\r\n    props.service.Get(\"/decks/deck\", {_id: mParams.id}, (data) => {\r\n      if (mounted) {\r\n        data[\"mainDeck\"].sort(sortDeck());\r\n        data[\"eggDeck\"].sort(sortDeck());\r\n        setDeck(data);\r\n        setToRender(true);\r\n        setDisplay(\"none\");\r\n      }\r\n    }, (error) => {\r\n      setDisplay(\"none\");\r\n      history.push('/');\r\n    });\r\n  }, [props.service, setDisplay, history, mParams.id]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Decklist\");\r\n    let mounted = true;\r\n    if (mounted) {\r\n      if (props.params) {\r\n        props.params[\"mainDeck\"].sort(sortDeck());\r\n        props.params[\"eggDeck\"].sort(sortDeck());\r\n        setDeck(props.params)\r\n        setToRender(true);\r\n      }\r\n      else\r\n        getData(mounted);\r\n    }\r\n    return () => mounted = false;\r\n  }, [getData, props.params, setPageName]);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column flex-start container-fluid\">\r\n      <div className=\"d-flex row header-container justify-content-center\">\r\n        <div className=\"col header\">\r\n          <h1> Deck: {deck[\"title\"]} </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex row deck-options justify-content-start d-flex align-items-center\">\r\n        <div className=\"option-button-container\">\r\n          <button style={{marginRight: \".5rem\"}} type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            var mainDeck = deck[\"mainDeck\"];\r\n            var eggDeck = deck[\"eggDeck\"];\r\n            var title = deck[\"title\"];\r\n            title = title.replace(/[/\\\\?%*:|\"<>]/g, '-');\r\n            // var sideDeck = props.params[\"sideDeck\"];\r\n            var deckString = \"//Main Deck\\n\";\r\n            mainDeck.forEach((card) => {\r\n              deckString += (card[\"count\"] + ' ' + card[\"cardName\"] + ' (' + card[\"cardNo\"] + ')\\n');\r\n            });\r\n            deckString += \"\\n//Digi-Egg Deck\\n\";\r\n            eggDeck.forEach((card) => {\r\n              deckString += (card[\"count\"] + ' ' + card[\"cardName\"] + ' (' + card[\"cardNo\"] + ')\\n');\r\n            });\r\n            // deckString += \"\\n//Side Deck Deck\\n\";\r\n            // eggDeck.forEach((card) => {\r\n            //   deckString += (card[\"count\"] + ' ' + card[\"cardName\"] + ' ' + card[\"cardNo\"] + '\\n');\r\n            // });\r\n\r\n\r\n            function download(content, fileName, contentType) {\r\n             const a = document.createElement(\"a\");\r\n             const file = new Blob([content], { type: contentType });\r\n             a.href = URL.createObjectURL(file);\r\n             a.download = fileName;\r\n             a.click();\r\n            }\r\n            download(deckString, title+\".txt\", \"text/plain\");\r\n\r\n          }}>\r\n            Export to Untap\r\n          </button>\r\n        </div>\r\n        <div className=\"option-button-container\">\r\n          <button style={{marginRight: \".5rem\"}} type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            var params = deck;\r\n            params[\"request\"] = \"Copy\";\r\n            props.onNavigate(params);\r\n            history.push('/deckeditor/');\r\n          }}>\r\n            Copy Deck\r\n          </button>\r\n        </div>\r\n        {props.userDetails.username === deck.user &&\r\n        <>\r\n          <div className=\"option-button-container\">\r\n            <button style={{marginRight: \".5rem\"}} type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n              var params = deck;\r\n              params[\"request\"] = \"Edit\";\r\n              props.onNavigate(params);\r\n              history.push('/deckeditor/');\r\n            }}>\r\n              Edit Deck\r\n            </button>\r\n          </div>\r\n          <div className=\"option-button-container\">\r\n            <button style={{marginRight: \".5rem\"}} type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteModal\">\r\n              Delete Deck\r\n            </button>\r\n            <div className=\"modal fade\" id=\"deleteModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n              <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content bg-dark\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"deleteModalLabel\">Delete Deck</h5>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    Are you sure you want to delete this deck? This cannot be reversed.\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Nevermind</button>\r\n                    <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\" onClick={() => {\r\n                      if (deck[\"user\"] === props.userDetails[\"username\"]) {\r\n                        var request = {_id: deck[\"id\"], user: deck[\"user\"]};\r\n                        props.service.Post(\"/decks/delete\", request, () => {\r\n                          alert(\"Deck Deleted\");\r\n                          props.onNavigate(null);\r\n                          history.push('/mydecks');\r\n                        }, (e) => {\r\n                          alert(e);\r\n                        });\r\n                      }\r\n                    }}>Delete Deck</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        }\r\n        <div className=\"option-button-container\">\r\n          <button style={{marginRight: \".5rem\"}} type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            if (visualView === \"none\") {\r\n              setVisualView(\"flex\");\r\n              setListView(\"none\");\r\n            }\r\n            else {\r\n              setVisualView(\"none\");\r\n              setListView(\"flex\");\r\n            }\r\n          }}>\r\n            {visualView === \"none\" && \"Visual View\"}\r\n            {listView === \"none\" && \"List View\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"deck-info-container d-flex flex-row flex-grow-1 flex-start flex-wrap justify-content-center\">\r\n        <div className=\"col-xl-3 col-md-4 col-sm-12 deck-info-list-container\">\r\n          {toRender && <DeckInfo1 params={deck} />}\r\n        </div>\r\n        <div className=\"row col-xl-9 col-md-8 col-sm-12 deck-info-list-container \" style={{display: listView}}>\r\n          <div className=\"col-xl-4 col-md-6 col-sm-12\">\r\n            <div className=\"deck-info-list\">\r\n              <div className=\"titleButton\">\r\n                <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setMainDeckOpen(!mainDeckOpen)}}>\r\n                  Main Deck\r\n                </button>\r\n              </div>\r\n              <Collapse isOpen={mainDeckOpen}>\r\n                <div className=\"mainDeck-list-container col\">\r\n                  {toRender && <MainDeck params={deck} />}\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4 col-md-6 col-sm-12\">\r\n            <div className=\"deck-info-list\">\r\n              <div className=\"titleButton\">\r\n                <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setEggDeckOpen(!eggDeckOpen)}}>\r\n                  Egg Deck\r\n                </button>\r\n              </div>\r\n              <Collapse isOpen={eggDeckOpen}>\r\n                <div className=\"eggDeck-list-container col\">\r\n                  {toRender && <EggDeck params={deck} />}\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4 col-md-6 col-sm-12\">\r\n            {toRender && <DeckInfo2 params={deck} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"row flex-grow-1 col-xl-9 col-md-8 col-sm-12 visualView-container flex-wrap\" style={{display: visualView}}>\r\n          {toRender && <VisualView params={deck} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Deck;\r\n","import React, {useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, InputGroup, InputGroupAddon, InputGroupText, Collapse} from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FilterMenu(props) {\r\n  const [power, setPower] = useState();\r\n  const [sets, setSets] = useState();\r\n  const [types, setTypes] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function filterPages() {\r\n    var search = document.getElementById(\"searchInput\").value.trim();\r\n\r\n    var attributeSelect = document.getElementById(\"attributeSelect\").value;\r\n    if (attributeSelect === \"default\")\r\n      attributeSelect = \"\";\r\n\r\n    var cardLevelSelect = document.getElementById(\"cardLevelSelect\").value;\r\n    if (cardLevelSelect === \"default\")\r\n      cardLevelSelect = \"\";\r\n\r\n    var cardNameInput = document.getElementById(\"cardNameInput\").value.trim();\r\n\r\n    var cardTypeSelect = document.getElementById(\"cardTypeSelect\").value;\r\n    if (cardTypeSelect === \"default\")\r\n      cardTypeSelect = \"\";\r\n\r\n    var colorSelect = document.getElementById(\"colorSelect\").value;\r\n    if (colorSelect === \"default\")\r\n      colorSelect = \"\";\r\n\r\n    var costSelect = document.getElementById(\"costSelect\").value;\r\n    if (costSelect === \"default\")\r\n      costSelect = \"\";\r\n\r\n    var digivolveSelect = document.getElementById(\"digivolveSelect\").value;\r\n    if (digivolveSelect === \"default\")\r\n      digivolveSelect = \"\";\r\n\r\n    var formSelect = document.getElementById(\"formSelect\").value;\r\n    if (formSelect === \"default\")\r\n      formSelect = \"\";\r\n\r\n    var playEffectInput = document.getElementById(\"playEffectInput\").value.trim();\r\n\r\n    var powerSelect = document.getElementById(\"powerSelect\").value;\r\n    if (powerSelect === \"default\")\r\n      powerSelect = \"\";\r\n\r\n    var securityEffectInput = document.getElementById(\"securityEffectInput\").value.trim();\r\n\r\n    var setSelect = document.getElementById(\"setSelect\").value;\r\n    if (setSelect === \"default\")\r\n      setSelect = \"\";\r\n\r\n    var typeSelect = document.getElementById(\"typeSelect\").value;\r\n    if (typeSelect === \"default\")\r\n      typeSelect = \"\";\r\n\r\n    var raritySelect = document.getElementById(\"raritySelect\").value;\r\n    if (raritySelect === \"default\")\r\n      raritySelect = \"\";\r\n\r\n    var empty = !(search || attributeSelect || cardLevelSelect || cardNameInput || cardTypeSelect || colorSelect || costSelect || digivolveSelect || formSelect || playEffectInput || powerSelect || securityEffectInput || setSelect || typeSelect || raritySelect);\r\n\r\n    var cardData = [];\r\n\r\n    if (empty) {\r\n      cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"]\r\n      props.setCards(cardData);\r\n      props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n      props.setPage(1);\r\n      return;\r\n    }\r\n\r\n    cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"].filter(function (card) {\r\n      var flag = true;\r\n      if (search) {\r\n        flag = flag && card[\"fullText\"].toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n      }\r\n      if (attributeSelect)\r\n        flag = flag && card['attribute'] === attributeSelect;\r\n      if (cardLevelSelect)\r\n        flag = flag && card[\"cardLv\"] === cardLevelSelect;\r\n      if (cardNameInput) {\r\n        flag = flag && card[\"cardName\"].toLowerCase().indexOf(cardNameInput.toLowerCase()) > -1;\r\n      }\r\n      if (cardTypeSelect)\r\n        flag = flag && card[\"cardType\"] === cardTypeSelect;\r\n      if (colorSelect)\r\n        flag = flag && card[\"cardColor\"] === colorSelect;\r\n      if (costSelect)\r\n        flag = flag && card[\"playCost\"] === costSelect;\r\n      if (digivolveSelect)\r\n        flag = flag && (card[\"digivolve1Cost\"] === digivolveSelect || card[\"digivolve2Cost\"] === digivolveSelect);\r\n      if (formSelect)\r\n        flag = flag && card[\"form\"] === formSelect;\r\n      if (playEffectInput)\r\n        flag = flag && card[\"effect\"].toLowerCase().indexOf(playEffectInput.toLowerCase()) > -1;\r\n      if (powerSelect)\r\n        flag = flag && card[\"digiPower\"] === powerSelect;\r\n      if (securityEffectInput)\r\n        flag = flag && card[\"securityEffect\"].toLowerCase().indexOf(securityEffectInput.toLowerCase()) > -1;\r\n      if (setSelect)\r\n        flag = flag && card[\"setId\"] === setSelect;\r\n      if (typeSelect)\r\n        flag = flag && card[\"type\"] === typeSelect;\r\n      if (raritySelect)\r\n        flag = flag && card[\"cardRarity\"] === raritySelect;\r\n      return flag;\r\n    });\r\n    props.setCards(cardData.sort(props.sortCards()));\r\n    props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n    props.setPage(1);\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Get(\"/cards/power\", {}, (data) => {\r\n      console.log(mounted);\r\n      if (mounted) {\r\n        let option = data.sort().map((powers) => {\r\n          return (\r\n            <option key={\"power\" + powers} value={powers}>{powers}</option>\r\n          );\r\n        });\r\n        setPower(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setPower(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/sets\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((set) => {\r\n          return (\r\n            <option key={\"set\" + set} value={set}>{set}</option>\r\n          );\r\n        });\r\n        setSets(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setSets(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/types\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((type) => {\r\n          return (\r\n            <option key={\"type\" + type} value={type}>{type}</option>\r\n          );\r\n        });\r\n        setTypes(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setTypes(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n  }, [props.service]);\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"FilterMenu w-100\">\r\n      <Form className=\"px-4 py-3\" id=\"filter\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.setPage(1);\r\n        filterPages();\r\n      }}>\r\n        <div className=\"form-row d-flex\">\r\n          <div className=\"form-group-filter-element w-100\">\r\n            <div className=\"form-group\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"bg-dark text-white\"> All Text </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"bg-dark text-white\" placeholder=\"Search Card Text\" id=\"searchInput\"/>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setIsOpen(!isOpen)}}>\r\n                    Show more filters\r\n                  </button>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse isOpen={isOpen}>\r\n          <div className=\"d-flex form-row flex-wrap justify-content-left\">\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText className=\"bg-dark text-white\"> Attribute </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"attributeSelect\" sm=\"8\" id=\"attributeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Attribute- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"Data\"> Data </option>\r\n                    <option value=\"Free\"> Free </option>\r\n                    <option value=\"Unknown\"> Unknown </option>\r\n                    <option value=\"Vaccine\"> Vaccine </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Level </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardLevelSelect\" sm=\"8\" id=\"cardLevelSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Level- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Name </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"-Card Name-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardTypeSelect\" sm=\"8\" id=\"cardTypeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Type- </option>\r\n                    <option value=\"Digi-Egg\"> Digi-Egg </option>\r\n                    <option value=\"Digimon\"> Digimon </option>\r\n                    <option value=\"Option\"> Option </option>\r\n                    <option value=\"Tamer\"> Tamer </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Color </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"colorSelect\" sm=\"8\" id=\"colorSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Color- </option>\r\n                    <option value=\"Black\"> Black </option>\r\n                    <option value=\"Blue\"> Blue </option>\r\n                    <option value=\"Green\"> Green </option>\r\n                    <option value=\"Purple\"> Purple </option>\r\n                    <option value=\"Red\"> Red </option>\r\n                    <option value=\"White\"> White </option>\r\n                    <option value=\"Yellow\"> Yellow </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"costSelect\" sm=\"8\" id=\"costSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                    <option value=\"8\"> 8 </option>\r\n                    <option value=\"9\"> 9 </option>\r\n                    <option value=\"10\"> 10 </option>\r\n                    <option value=\"11\"> 11 </option>\r\n                    <option value=\"12\"> 12 </option>\r\n                    <option value=\"13\"> 13 </option>\r\n                    <option value=\"14\"> 14 </option>\r\n                    <option value=\"15\"> 15 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Digivolve Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"digivolveSelect\" sm=\"8\" id=\"digivolveSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Digivolve Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Form </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"formSelect\" sm=\"8\" id=\"formSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Form- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"In-Training\"> In-Training </option>\r\n                    <option value=\"Rookie\"> Rookie </option>\r\n                    <option value=\"Champion\"> Champion </option>\r\n                    <option value=\"Ultimate\"> Ultimate </option>\r\n                    <option value=\"Mega\"> Mega </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            {/*<div className=\"form-group-filter-element\">\r\n              <div className=\"form-group d-              <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Keyword </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"keywordSelect\" sm={8} id=\"keywordSelect\">\r\n                    <option selected> -Keyword- </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>*/}\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group flex-nowrap\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"playEffectInput\" sm=\"8\" id=\"playEffectInput\" placeholder=\"-Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText className=\"bg-dark text-white\"> Power </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"powerSelect\" sm=\"8\" id=\"powerSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Power- </option>\r\n                    {power}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Rarity </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"raritySelect\" sm=\"8\" id=\"raritySelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Rarity- </option>\r\n                    <option value=\"C\"> Common </option>\r\n                    <option value=\"U\"> Uncommon </option>\r\n                    <option value=\"R\"> Rare </option>\r\n                    <option value=\"SR\"> Super Rare </option>\r\n                    <option value=\"SEC\"> Secret Rare </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Security Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"securityEffectInput\" sm=\"8\" id=\"securityEffectInput\" placeholder=\"-Security Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Set </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"setSelect\" sm=\"8\" id=\"setSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Set- </option>\r\n                    {sets}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"typeSelect\" sm=\"8\" id=\"typeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Type- </option>\r\n                    {types}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n        <div className=\"form-row\">\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button style={{marginLeft: \".5rem\"}} type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"searchInput\").value = '';\r\n              document.getElementById(\"attributeSelect\").value = 'default';\r\n              document.getElementById(\"cardLevelSelect\").value = 'default';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"cardTypeSelect\").value = 'default';\r\n              document.getElementById(\"colorSelect\").value = 'default';\r\n              document.getElementById(\"costSelect\").value = 'default';\r\n              document.getElementById(\"digivolveSelect\").value = 'default';\r\n              document.getElementById(\"formSelect\").value = 'default';\r\n              document.getElementById(\"playEffectInput\").value = '';\r\n              document.getElementById(\"powerSelect\").value = 'default';\r\n              document.getElementById(\"securityEffectInput\").value = '';\r\n              document.getElementById(\"setSelect\").value = 'default';\r\n              document.getElementById(\"typeSelect\").value = 'default';\r\n              document.getElementById(\"raritySelect\").value = 'default';\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button style={{marginRight: \".5rem\"}} type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMenu;\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\n\r\nfunction CardsList(props) {\r\n  function addCard(card) {\r\n    props.addCard(card);\r\n  }\r\n\r\n  function addEggCard(card) {\r\n    props.addEggCard(card);\r\n  }\r\n\r\n  function fillRow(rowCards) {\r\n    let row = rowCards.map((card) => {\r\n      return (\r\n        <div className=\"card-container col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12\" key={card[\"cardNo\"]}>\r\n          <div className=\"card text-white bg-dark text-left\">\r\n            <a href=\"/#\" id={card['cardNo'] + \"link\"} data-container=\"body\" onClick={(e) => {\r\n              e.preventDefault();\r\n              if (card['cardType'] === \"Digi-Egg\") {\r\n                addEggCard(card);\r\n              }\r\n              else {\r\n                addCard(card);\r\n              }\r\n            }}>\r\n              <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n              <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n            </a>\r\n            <UncontrolledPopover delay={{\"show\": 350}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card['cardNo'] + \"link\"}>\r\n              <PopoverHeader className=\"text-white bg-dark\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n              <PopoverBody className=\"text-white bg-dark\">\r\n                <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"]}>\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col\">\r\n                      <div className=\"popover-card-body-image\">\r\n                        <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                          <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                          <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"popover-card-body-text\">\r\n                        <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                        <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                        <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                        <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                        <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                        <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </PopoverBody>\r\n            </UncontrolledPopover>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return row;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {fillRow(props.cards.slice(props.cardsPerPage*(props.page-1), props.cards.length <props.cardsPerPage*props.page ? props.cards.length : props.cardsPerPage*props.page))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Cards(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  function handlePageClick(data) {\r\n    props.setPage(data.selected + 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-center align-items-center pagination-top\">\r\n        <ReactPaginate\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'page-item disabled'}\r\n          breakLinkClassName={'page-link text-white bg-dark'}\r\n          pageCount={props.pages}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item'}\r\n          forcePage={props.page-1}\r\n          pageLinkClassName={'page-link text-white bg-dark'}\r\n          previousClassName={'page-item'}\r\n          previousLinkClassName={'page-link text-white bg-dark'}\r\n          nextClassName={'page-item'}\r\n          nextLinkClassName={'page-link text-white bg-dark'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n      <div className=\"flex-row flex-grow-1 d-flex db-card-list-container\">\r\n        <CardsList {...props}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React, {useState} from 'react';\r\nimport { Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, UncontrolledPopover, PopoverHeader, PopoverBody, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction EggDeck(props) {\r\n\r\n  function removeEggCard(i){\r\n    props.removeEggCard(i);\r\n  }\r\n\r\n  function addEggCard(card){\r\n    props.addEggCard(card);\r\n  }\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"White\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"White\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"White\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"White\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"White\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n\r\n  var result = props.eggDeck[\"decklist\"].map((card, i) => {\r\n    var [backgroundColor, textColor] = getColorValue(card[\"cardColor\"]);\r\n    return (\r\n      <FormGroup className=\"deck-row\" key={card[\"cardNo\"] + card[\"cardName\"] + \"row\"} row>\r\n        <InputGroup>\r\n          <Input value={card[\"cardNo\"] + \" \" + card[\"cardName\"]} id={card[\"cardNo\"] + \"row\"} style={{backgroundColor: backgroundColor, color: textColor}} disabled/>\r\n          <UncontrolledPopover delay={{\"show\": 250}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card[\"cardNo\"] + \"row\"}>\r\n            <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"bg-dark text-white\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"] + \"row\"}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                        <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                        <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-danger\" onClick={() => {removeEggCard(i)}}>\r\n              -\r\n            </button>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText className=\"bg-dark text-white\"> {card[\"count\"]} </InputGroupText>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-success\" onClick={() => {addEggCard(card)}}>\r\n              +\r\n            </button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    )\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction Deck(props) {\r\n\r\n  function removeCard(i){\r\n    props.removeCard(i);\r\n  }\r\n\r\n  function addCard(card){\r\n    props.addCard(card);\r\n  }\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"White\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"White\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"White\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"White\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"White\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n\r\n  var result = props.deck[\"decklist\"].map((card, i) => {\r\n    var [backgroundColor, textColor] = getColorValue(card[\"cardColor\"]);\r\n    return (\r\n      <FormGroup className=\"deck-row\" key={card[\"cardNo\"] + card[\"cardName\"]} row>\r\n        <InputGroup>\r\n          <Input value={card[\"cardNo\"] + \" \" + card[\"cardName\"]} id={card[\"cardNo\"] + \"row\"} style={{backgroundColor: backgroundColor, color: textColor}} disabled/>\r\n          <UncontrolledPopover delay={{\"show\": 250}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card[\"cardNo\"] + \"row\"}>\r\n            <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"bg-dark text-white\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"]}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                        <img src={card[\"src\"]} className=\"card-img\" alt=\"...\"/>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-danger\" onClick={() => {removeCard(i)}}>\r\n              -\r\n            </button>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText className=\"bg-dark text-white\"> {card[\"count\"]} </InputGroupText>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-success\" onClick={() => {addCard(card)}}>\r\n              +\r\n            </button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    )\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction DeckPanel(props) {\r\n  const [infoOpen, setInfoOpen] = useState(true);\r\n  const [mainOpen, setMainOpen] = useState(true);\r\n  const [eggOpen, setEggOpen] = useState(true);\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //\r\n  //   getDeck(props);\r\n  // },[getDeck]);\r\n\r\n  // function sortForms() {\r\n  //   return function (a, b) {\r\n  //     var forms = {\"3\": 1, \"4\": 2, \"5\": 3, \"6\": 4, \"-\": 5};\r\n  //     // console.log(forms[a] + \" | \" + forms[b]);\r\n  //     if (forms[a] > forms[b]) {\r\n  //       return 1;\r\n  //     }\r\n  //     else if (forms[a] < forms[b]) {\r\n  //       return -1;\r\n  //     }\r\n  //     return 0;\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"deckMenu\">\r\n      <Form className=\"deckPanel\" id=\"deckPanel\"  onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}>\r\n        <div className=\"deckInfo\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setInfoOpen(!infoOpen)}}>\r\n              Deck Info\r\n            </button>\r\n          </div>\r\n          <Collapse isOpen={infoOpen}>\r\n            <div className=\"deck-info-container col\">\r\n              <FormGroup row style={{margin:0}}>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Deck Title </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" id=\"deckTitle\" value={props.title} onChange={(e) => {\r\n                    props.changeTitle(e.target.value);\r\n                  }}/>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <Input className=\"bg-dark text-white\" value=\"Private\" id=\"private\" disabled/>\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText className=\"bg-dark text-white\">\r\n                      <Input addon type=\"checkbox\" id=\"privacy\" checked={props.privacy} onChange={(e) => {\r\n                        props.changePrivacy(e.target.checked);\r\n                      }}/>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </FormGroup>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"mainDeck\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setMainOpen(!mainOpen)}}>\r\n              Main Deck: {props.deck[\"count\"]}\r\n            </button>\r\n          </div>\r\n          <Collapse isOpen={mainOpen}>\r\n            <div className=\"deck-list-container col\">\r\n              <Deck {...props} />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"digiEggDeck\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setEggOpen(!eggOpen)}}>\r\n              Digi-Egg Deck: {props.eggDeck[\"count\"]}\r\n            </button>\r\n          </div>\r\n          <Collapse isOpen={eggOpen}>\r\n            <div className=\"egg-deck-list-container col\">\r\n              <EggDeck {...props} />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"deckPanel-buttons col\">\r\n          <FormGroup row>\r\n            <div className=\"btn-group-vertical w-100\">\r\n              <div className=\"col btn-group\">\r\n                <button type=\"button\" className=\"btn w-50 btn-danger\" onClick={()=> {\r\n                  props.clearData();\r\n                  props.setDeck({decklist :[], deckInfo: {colors: {}, cardTypes: {}, levels: {}}, count: 0});\r\n                  // props.setDeck({decklist :[], deckInfo: {colors: {}, costs: {}, cardTypes: {}, levels: {}}, count: 0});\r\n                  props.setEggDeck({decklist :[], deckInfo: {colors: {}}, count: 0});\r\n                }}>\r\n                  Clear\r\n                </button>\r\n                <button type=\"button\" className=\"btn w-50 btn-warning\" onClick={() => {\r\n                  if (!props.userDetails[\"username\"]) {\r\n                    alert(\"Log in to save this list\");\r\n                    return;\r\n                  }\r\n                  if (props.deck[\"count\"] === 0 && props.eggDeck[\"count\"] === 0) {\r\n                    alert(\"Please add a card first\");\r\n                    return;\r\n                  }\r\n                  var deckTitle = document.getElementById(\"deckTitle\").value.trim();\r\n                  var privacy = document.getElementById(\"privacy\").checked;\r\n                  var deckInfo = props.deck[\"deckInfo\"];\r\n                  var eggDeckInfo = props.eggDeck[\"deckInfo\"];\r\n                  var cardTypes = {};\r\n                  var colors = {};\r\n                  // var costs = {};\r\n                  var levels = {};\r\n                  var eggColors = {};\r\n\r\n                  var mainDeck = [];\r\n                  for (var i=0; i < props.deck[\"decklist\"].length; i++) {\r\n                    mainDeck.push({id: props.deck[\"decklist\"][i][\"id\"], count: props.deck[\"decklist\"][i][\"count\"]});\r\n                  }\r\n\r\n                  var eggDeck = [];\r\n                  for (var j=0; j < props.eggDeck[\"decklist\"].length; j++) {\r\n                    eggDeck.push({id: props.eggDeck[\"decklist\"][j][\"id\"], count: props.eggDeck[\"decklist\"][j][\"count\"]});\r\n                  }\r\n\r\n                  Object.keys(deckInfo[\"cardTypes\"]).sort().forEach(function(key) {\r\n                    var temp = {};\r\n                    var count = deckInfo[\"cardTypes\"][key][\"count\"];\r\n                    Object.keys(deckInfo[\"cardTypes\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                      temp[color] = deckInfo[\"cardTypes\"][key][\"colors\"][color];\r\n                    });\r\n                    cardTypes[key] = {colors: temp, count: count};\r\n                  });\r\n\r\n                  Object.keys(deckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                    colors[key] = deckInfo[\"colors\"][key];\r\n                  });\r\n\r\n                  // Object.keys(deckInfo[\"costs\"]).sort().forEach(function(key) {\r\n                  //   var temp = {};\r\n                  //   var count = deckInfo[\"costs\"][key][\"count\"];\r\n                  //   Object.keys(deckInfo[\"costs\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                  //     temp[color] = deckInfo[\"costs\"][key][\"colors\"][color];\r\n                  //   });\r\n                  //   costs[key] = {colors: temp, count: count};\r\n                  // });\r\n\r\n                  Object.keys(deckInfo[\"levels\"]).sort().forEach(function(key) {\r\n                    var temp = {};\r\n                    var count = deckInfo[\"levels\"][key][\"count\"];\r\n                    Object.keys(deckInfo[\"levels\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                      temp[color] = deckInfo[\"levels\"][key][\"colors\"][color];\r\n                    });\r\n                    levels[key] = {colors: temp, count: count};\r\n                  });\r\n\r\n                  Object.keys(eggDeckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                    eggColors[key] = eggDeckInfo[\"colors\"][key];\r\n                  });\r\n\r\n                  deckInfo[\"cardTypes\"] = cardTypes;\r\n                  // deckInfo[\"costs\"] = costs;\r\n                  deckInfo[\"colors\"] = colors;\r\n                  deckInfo[\"levels\"] = levels;\r\n                  eggDeckInfo[\"colors\"] = eggColors;\r\n                  var request = {mainDeck: mainDeck, mainDeckInfo: deckInfo, mainDeckCount: props.deck[\"count\"], eggDeck: eggDeck, eggDeckInfo: eggDeckInfo, eggDeckCount: props.eggDeck[\"count\"], status: \"Incomplete\", title: deckTitle, privacy: privacy, user: props.userDetails[\"username\"]};\r\n                  // console.log(request);\r\n                  props.service.Post(\"/decks/submit\", request, () => {\r\n                    alert(\"Deck Saved\");\r\n                    props.clearData();\r\n                    history.push('/mydecks');\r\n                    props.onNavigate(null);\r\n                  }, (e) => {\r\n                    alert(e);\r\n                  });\r\n                }}>\r\n                  Save for Later\r\n                </button>\r\n              </div>\r\n              <div className=\"col btn-group\">\r\n                <button type=\"button\" className=\"btn w-100 btn-success\" onClick={() => {\r\n                  if (!props.userDetails[\"username\"]) {\r\n                    alert(\"Log in to save this list\");\r\n                    return;\r\n                  }\r\n                  if (props.deck[\"count\"] < 50) {\r\n                    alert(\"Not enough cards in the Main Deck. Either add 50 cards to the Main Deck or click Save for Later.\");\r\n                    return;\r\n                  }\r\n                  else {\r\n                    var deckTitle = document.getElementById(\"deckTitle\").value.trim();\r\n                    var privacy = document.getElementById(\"privacy\").checked;\r\n                    var deckInfo = props.deck[\"deckInfo\"];\r\n                    var eggDeckInfo = props.eggDeck[\"deckInfo\"];\r\n                    var cardTypes = {};\r\n                    var colors = {};\r\n                    // var costs = {};\r\n                    var levels = {};\r\n                    var eggColors = {};\r\n\r\n                    var mainDeck = [];\r\n                    for (var i=0; i < props.deck[\"decklist\"].length; i++) {\r\n                      mainDeck.push({id: props.deck[\"decklist\"][i][\"id\"], count: props.deck[\"decklist\"][i][\"count\"]});\r\n                    }\r\n\r\n                    var eggDeck = [];\r\n                    for (var j=0; j < props.eggDeck[\"decklist\"].length; j++) {\r\n                      eggDeck.push({id: props.eggDeck[\"decklist\"][j][\"id\"], count: props.eggDeck[\"decklist\"][j][\"count\"]});\r\n                    }\r\n\r\n                    Object.keys(deckInfo[\"cardTypes\"]).sort().forEach(function(key) {\r\n                      var temp = {};\r\n                      var count = deckInfo[\"cardTypes\"][key][\"count\"];\r\n                      Object.keys(deckInfo[\"cardTypes\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                        temp[color] = deckInfo[\"cardTypes\"][key][\"colors\"][color];\r\n                      });\r\n                      cardTypes[key] = {colors: temp, count: count};\r\n                    });\r\n\r\n                    Object.keys(deckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                      colors[key] = deckInfo[\"colors\"][key];\r\n                    });\r\n\r\n                    // Object.keys(deckInfo[\"costs\"]).sort().forEach(function(key) {\r\n                    //   var temp = {};\r\n                    //   var count = deckInfo[\"costs\"][key][\"count\"];\r\n                    //   Object.keys(deckInfo[\"costs\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                    //     temp[color] = deckInfo[\"costs\"][key][\"colors\"][color];\r\n                    //   });\r\n                    //   costs[key] = {colors: temp, count: count};\r\n                    // });\r\n\r\n                    Object.keys(deckInfo[\"levels\"]).sort().forEach(function(key) {\r\n                      var temp = {};\r\n                      var count = deckInfo[\"levels\"][key][\"count\"];\r\n                      Object.keys(deckInfo[\"levels\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                        temp[color] = deckInfo[\"levels\"][key][\"colors\"][color];\r\n                      });\r\n                      levels[key] = {colors: temp, count: count};\r\n                    });\r\n\r\n                    Object.keys(eggDeckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                      eggColors[key] = eggDeckInfo[\"colors\"][key];\r\n                    });\r\n\r\n                    deckInfo[\"cardTypes\"] = cardTypes;\r\n                    // deckInfo[\"costs\"] = costs;\r\n                    deckInfo[\"colors\"] = colors;\r\n                    deckInfo[\"levels\"] = levels;\r\n                    eggDeckInfo[\"colors\"] = eggColors;\r\n                    var request = {mainDeck: mainDeck, mainDeckInfo: deckInfo, mainDeckCount: props.deck[\"count\"], eggDeck: eggDeck, eggDeckInfo: eggDeckInfo, eggDeckCount: props.eggDeck[\"count\"], status: \"Complete\", title: deckTitle, privacy: privacy, user: props.userDetails[\"username\"]};\r\n                    // console.log(request);\r\n                    props.service.Post(\"/decks/submit\", request, () => {\r\n                      alert(\"Deck Saved\");\r\n                      props.clearData();\r\n                      history.push('/mydecks');\r\n                      props.onNavigate( null);\r\n                    }, (e) => {\r\n                      alert(e);\r\n                    });\r\n                  }\r\n                }}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckPanel;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport Cards from './Cards';\r\nimport DeckPanel from './DeckPanel';\r\n\r\nfunction DeckBuilder(props) {\r\n  const [cards, setCards] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  const setDisplay = props.setDisplay;\r\n  const setPageName = props.setPageName;\r\n\r\n  function sortCards() {\r\n\r\n    return function (a, b) {\r\n      if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n        return 1;\r\n      }\r\n      else{\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (sessionStorage.getItem('deckBuilderData') == null) {\r\n    var sessionObject = {\r\n      mainDeck: {\r\n        decklist :[],\r\n        deckInfo: {\r\n          colors: {},\r\n          // costs: {},\r\n          cardTypes: {},\r\n          levels: {}\r\n        },\r\n        count: 0\r\n      },\r\n      eggDeck: {\r\n        decklist: [],\r\n        deckInfo: {\r\n          colors: {}\r\n        },\r\n        count: 0\r\n      },\r\n      title: '',\r\n      privacy: false\r\n    }\r\n    sessionStorage.setItem('deckBuilderData', JSON.stringify(sessionObject));\r\n  }\r\n  const [deck, setDeck] = useState(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"mainDeck\"]);\r\n  const [eggDeck, setEggDeck] = useState(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"eggDeck\"]);\r\n  const [title, setTitle] = useState(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"title\"]);\r\n  const [privacy, setPrivacy] = useState(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"privacy\"]);\r\n  var cardsInRow = 6;\r\n  var cardsPerPage = cardsInRow * 5;\r\n  var rowsPerPage = Math.floor(cardsPerPage/cardsInRow);\r\n\r\n  function clearData() {\r\n    var sessionObject = {\r\n      mainDeck: {\r\n        decklist :[],\r\n        deckInfo: {\r\n          colors: {},\r\n          // costs: {},\r\n          cardTypes: {},\r\n          levels: {}\r\n        },\r\n        count: 0\r\n      },\r\n      eggDeck: {\r\n        decklist: [],\r\n        deckInfo: {\r\n          colors: {}\r\n        },\r\n        count: 0\r\n      },\r\n      title: '',\r\n      privacy: false\r\n    }\r\n    sessionStorage.setItem('deckBuilderData', JSON.stringify(sessionObject));\r\n    setDeck(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"mainDeck\"]);\r\n    setEggDeck(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"eggDeck\"]);\r\n    setTitle(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"title\"]);\r\n    setPrivacy(JSON.parse(sessionStorage.getItem('deckBuilderData'))[\"privacy\"]);\r\n  }\r\n\r\n  function changeTitle(newTitle) {\r\n    setTitle(newTitle);\r\n    sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: deck, eggDeck: eggDeck, title: newTitle,\r\n    privacy: privacy}));\r\n  }\r\n\r\n  function changePrivacy(newPrivacy) {\r\n    setPrivacy(newPrivacy);\r\n    sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: deck, eggDeck: eggDeck, title: title,\r\n    privacy: newPrivacy}));\r\n  }\r\n\r\n  function addCard(card) {\r\n    console.log(deck);\r\n    console.log(card);\r\n    // Make sure not to exceed deck limit\r\n    if (deck[\"count\"] < 50) {\r\n      // Update decklist\r\n      // Check if a copy of the card is already in the deck\r\n      var cardIndex = deck[\"decklist\"].findIndex(item => {\r\n         return item.cardNo === card[\"cardNo\"];\r\n      });\r\n\r\n      var cardColor = card[\"cardColor\"];\r\n      var tempDeckInfo = {...deck[\"deckInfo\"]};\r\n      if (cardIndex > -1) {\r\n        // Make sure not to exceed card limit\r\n        var tempDeck = [...deck[\"decklist\"]];\r\n        if (tempDeck[cardIndex][\"count\"] < 4) {\r\n          // Update Deck Info\r\n          // Update colors\r\n          if (tempDeckInfo[\"colors\"][cardColor]) {\r\n            tempDeckInfo[\"colors\"][cardColor] += 1;\r\n          }\r\n          else {\r\n            tempDeckInfo[\"colors\"][cardColor] = 1;\r\n          }\r\n\r\n          // Update costs\r\n          // if (tempDeckInfo[\"costs\"][card[\"playCost\"]]) {\r\n          //   if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"]) {\r\n          //     if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor]) {\r\n          //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] += 1;\r\n          //     }\r\n          //     else {\r\n          //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] = 1;\r\n          //     }\r\n          //   }\r\n          //   else {\r\n          //     tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"] = {[cardColor]: 1};\r\n          //   }\r\n          //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] += 1;\r\n          // }\r\n          // else {\r\n          //   tempDeckInfo[\"costs\"][card[\"playCost\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n          // }\r\n\r\n          // Update cardTypes\r\n          if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]]) {\r\n            if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"]) {\r\n              if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor]) {\r\n                tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] += 1;\r\n              }\r\n              else {\r\n                tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] = 1;\r\n              }\r\n            }\r\n            else {\r\n              tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"] = {[cardColor]: 1};\r\n            }\r\n            tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] += 1;\r\n          }\r\n          else {\r\n            tempDeckInfo[\"cardTypes\"][card[\"cardType\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n          }\r\n\r\n          // Update levels\r\n          if (tempDeckInfo[\"levels\"][card[\"cardLv\"]]) {\r\n            if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"]) {\r\n              if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor]) {\r\n                tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] += 1;\r\n              }\r\n              else {\r\n                tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] = 1;\r\n              }\r\n            }\r\n            else {\r\n              tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"] = {[cardColor]: 1};\r\n            }\r\n            tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] += 1;\r\n          }\r\n          else {\r\n            tempDeckInfo[\"levels\"][card[\"cardLv\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n          }\r\n\r\n          tempDeck[cardIndex][\"count\"] = tempDeck[cardIndex][\"count\"] + 1;\r\n          setDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]+1});\r\n          sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: {decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]+1}, eggDeck: eggDeck, title: title,\r\n          privacy: privacy}));\r\n        }\r\n      }\r\n      else {\r\n        // Update Deck Info\r\n        // Update colors\r\n        if (tempDeckInfo[\"colors\"][cardColor]) {\r\n          tempDeckInfo[\"colors\"][cardColor] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"colors\"][cardColor] = 1;\r\n        }\r\n\r\n        // Update costs\r\n        // if (tempDeckInfo[\"costs\"][card[\"playCost\"]]) {\r\n        //   if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"]) {\r\n        //     if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor]) {\r\n        //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] += 1;\r\n        //     }\r\n        //     else {\r\n        //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] = 1;\r\n        //     }\r\n        //   }\r\n        //   else {\r\n        //     tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"] = {[cardColor]: 1};\r\n        //   }\r\n        //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] += 1;\r\n        // }\r\n        // else {\r\n        //   tempDeckInfo[\"costs\"][card[\"playCost\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n        // }\r\n\r\n        // Update cardTypes\r\n        if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]]) {\r\n          if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"]) {\r\n            if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor]) {\r\n              tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] += 1;\r\n            }\r\n            else {\r\n              tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] = 1;\r\n            }\r\n          }\r\n          else {\r\n            tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"] = {[cardColor]: 1};\r\n          }\r\n          tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"cardTypes\"][card[\"cardType\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n        }\r\n\r\n        // Update levels\r\n        if (tempDeckInfo[\"levels\"][card[\"cardLv\"]]) {\r\n          if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"]) {\r\n            if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor]) {\r\n              tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] += 1;\r\n            }\r\n            else {\r\n              tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] = 1;\r\n            }\r\n          }\r\n          else {\r\n            tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"] = {[cardColor]: 1};\r\n          }\r\n          tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"levels\"][card[\"cardLv\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n        }\r\n\r\n        card[\"count\"] = 1;\r\n        setDeck({decklist: [...deck[\"decklist\"], card].sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]+1});\r\n        sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: {decklist: [...deck[\"decklist\"], card].sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]+1}, eggDeck: eggDeck, title: title,\r\n        privacy: privacy}));\r\n      }\r\n    }\r\n    // console.log(deck);\r\n  }\r\n\r\n  function removeCard(index) {\r\n    var card = deck[\"decklist\"][index];\r\n\r\n    // Update decklist\r\n    var tempDeck = [...deck[\"decklist\"]];\r\n    if (index < tempDeck.length) {\r\n      // Update deck information\r\n      var tempDeckInfo = {...deck[\"deckInfo\"]};\r\n      if (tempDeckInfo[\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n\r\n      // if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][card[\"cardColor\"]] === 1) {\r\n      //   delete tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][card[\"cardColor\"]];\r\n      // }\r\n      // else {\r\n      //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][card[\"cardColor\"]] -= 1;\r\n      // }\r\n      // if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] === 1) {\r\n      //   delete tempDeckInfo[\"costs\"][card[\"playCost\"]];\r\n      // }\r\n      // else {\r\n      //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] -= 1;\r\n      // }\r\n\r\n      if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n      if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] === 1) {\r\n        delete tempDeckInfo[\"cardTypes\"][card[\"cardType\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] -= 1;\r\n      }\r\n\r\n      if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n      if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] === 1) {\r\n        delete tempDeckInfo[\"levels\"][card[\"cardLv\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] -= 1;\r\n      }\r\n\r\n      // Check if card is last copy\r\n      if (tempDeck[index][\"count\"] > 1) {\r\n        tempDeck[index][\"count\"] = tempDeck[index][\"count\"] - 1;\r\n      }\r\n      else {\r\n        tempDeck.splice(index, 1);\r\n      }\r\n      setDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]-1});\r\n      sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: {decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]-1}, eggDeck: eggDeck, title: title,\r\n      privacy: privacy}));\r\n    }\r\n    // console.log(deck);\r\n  }\r\n\r\n  function addEggCard(card) {\r\n    // Make sure not to exceed deck limit\r\n    if (eggDeck[\"count\"] < 5) {\r\n\r\n      // Update decklist\r\n      // Check if a copy of the card is already in the deck\r\n      var cardIndex = eggDeck[\"decklist\"].findIndex(item => {\r\n         return item.cardNo === card[\"cardNo\"];\r\n      });\r\n      var tempDeckInfo = {...eggDeck[\"deckInfo\"]};\r\n      // console.log(tempDeckInfo);\r\n      if (cardIndex > -1) {\r\n        // Update deck information\r\n        if (tempDeckInfo[\"colors\"][card[\"cardColor\"]]) {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] = 1;\r\n        }\r\n        var tempDeck = [...eggDeck[\"decklist\"]];\r\n        if (tempDeck[cardIndex][\"count\"] < 4) {\r\n          tempDeck[cardIndex][\"count\"] = tempDeck[cardIndex][\"count\"] + 1;\r\n          setEggDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]+1});\r\n          sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: deck, eggDeck: {decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]+1}, title: title,\r\n          privacy: privacy}));\r\n        }\r\n      }\r\n      else {\r\n        // Update deck information\r\n        if (tempDeckInfo[\"colors\"][card[\"cardColor\"]]) {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] = 1;\r\n        }\r\n        card[\"count\"] = 1;\r\n        setEggDeck({decklist: [...eggDeck[\"decklist\"], card].sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]+1});\r\n        sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: deck, eggDeck: {decklist: [...eggDeck[\"decklist\"], card].sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]+1}, title: title,\r\n        privacy: privacy}));\r\n      }\r\n    }\r\n    // console.log(eggDeck);\r\n  }\r\n\r\n  function removeEggCard(index) {\r\n    var card = eggDeck[\"decklist\"][index];\r\n\r\n    // Update decklist\r\n    var tempDeck = [...eggDeck[\"decklist\"]];\r\n    if (index < tempDeck.length) {\r\n      // Update deck information\r\n      var tempDeckInfo = {...eggDeck[\"deckInfo\"]};\r\n      if (tempDeckInfo[\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n      // Check if card is last copy\r\n      if (tempDeck[index][\"count\"] > 1) {\r\n        tempDeck[index][\"count\"] = tempDeck[index][\"count\"] - 1;\r\n      }\r\n      else {\r\n        tempDeck.splice(index, 1);\r\n      }\r\n      setEggDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]-1});\r\n      sessionStorage.setItem('deckBuilderData', JSON.stringify({mainDeck: deck, eggDeck: {decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]-1}, title: title,\r\n      privacy: privacy}));\r\n    }\r\n\r\n    // console.log(eggDeck);\r\n  }\r\n\r\n  function sortDeck() {\r\n\r\n    return function (a, b) {\r\n      if (a[\"cardColor\"] > b[\"cardColor\"]) {\r\n        return 1;\r\n      }\r\n      else if (a[\"cardColor\"] < b[\"cardColor\"]) {\r\n        return -1;\r\n      }\r\n      else {\r\n        if (a[\"cardType\"] > b[\"cardType\"]) {\r\n          return 1;\r\n        }\r\n        else if (a[\"cardType\"] < b[\"cardType\"]) {\r\n          return -1;\r\n        }\r\n        else {\r\n          if (a[\"cardLv\"] > b[\"cardLv\"]) {\r\n            return 1;\r\n          }\r\n          else if (a[\"cardLv\"] < b[\"cardLv\"]) {\r\n            return -1;\r\n          }\r\n          else {\r\n            if (a[\"cardName\"] > b[\"cardName\"]) {\r\n              return 1;\r\n            }\r\n            else if (a[\"cardName\"] < b[\"cardName\"]) {\r\n              return -1;\r\n            }\r\n            else {\r\n              if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n                return 1;\r\n              }\r\n              else if (a[\"cardNo\"] < b[\"cardNo\"]) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    var currentDate = Date.now();\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('cardData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    if (sessionStorage.getItem('cardData') == null) {\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        console.log(error);\r\n      });\r\n    }\r\n    else if (currentDate - JSON.parse(sessionStorage.getItem('cardData'))['created'] >= 43200000) {\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        console.log(error);\r\n      });\r\n    }\r\n    else {\r\n      if (mounted) {\r\n        var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n        setCards(cards.sort(sortCards()));\r\n        setPages(Math.ceil(cards.length/cardsPerPage));\r\n        setDisplay(\"none\");\r\n      }\r\n    }\r\n  }, [props.service, cardsPerPage, setDisplay]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Deck Builder\");\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData, setPageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex flex-row flex-wrap flex-start\">\r\n      <div className=\"flex-column col-lg-4 col-md-4 col-sm-12 deck-list\">\r\n        <DeckPanel {...props} clearData={clearData} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage} addCard={addCard} removeCard={removeCard} deck={deck} setDeck={setDeck} addEggCard={addEggCard} removeEggCard={removeEggCard} eggDeck={eggDeck} setEggDeck={setEggDeck} title={title} changeTitle={changeTitle} privacy={privacy} changePrivacy={changePrivacy}/>\r\n      </div>\r\n      <div className=\"d-flex flex-column col-lg-8 col-md-8 col-sm-12 db-cards-filter-container\">\r\n        <div className=\"filterWrapper-top row d-flex\">\r\n          <FilterMenu sortCards={sortCards} userDetails={props.userDetails} service={props.service} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n        </div>\r\n        <div className=\"d-flex flex-column flex-grow-1 cardsWrapper\">\r\n          <Cards service={props.service} cards={cards} pages={pages} page={page} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage} addCard={addCard}  addEggCard={addEggCard}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DeckBuilder;\r\n","import React, {useState, useEffect, useCallback } from 'react';\r\nimport { Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FilterMenu(props) {\r\n  const [cardNo, setCardNo] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function filterPages() {\r\n    var deckTitleInput = document.getElementById(\"deckTitleInput\").value.trim();\r\n    var usernameInput = document.getElementById(\"usernameInput\").value.trim();\r\n    var cardNameInput = document.getElementById(\"cardNameInput\").value.trim();\r\n    var cardNoSelect = document.getElementById(\"cardNoSelect\").value;\r\n    if (cardNoSelect === \"default\")\r\n      cardNoSelect = \"\";\r\n\r\n    var colors = [];\r\n    var andCheckbox = document.getElementById(\"andCheckbox\").checked;\r\n    var blackCheckbox = document.getElementById(\"blackCheckbox\").checked;\r\n    if (blackCheckbox)\r\n      colors.push(\"Black\")\r\n    var blueCheckbox = document.getElementById(\"blueCheckbox\").checked;\r\n    if (blueCheckbox)\r\n      colors.push(\"Blue\")\r\n    var greenCheckbox = document.getElementById(\"greenCheckbox\").checked;\r\n    if (greenCheckbox)\r\n      colors.push(\"Green\")\r\n    var purpleCheckbox = document.getElementById(\"purpleCheckbox\").checked;\r\n    if (purpleCheckbox)\r\n      colors.push(\"Purple\")\r\n    var redCheckbox = document.getElementById(\"redCheckbox\").checked;\r\n    if (redCheckbox)\r\n      colors.push(\"Red\")\r\n    var whiteCheckbox = document.getElementById(\"whiteCheckbox\").checked;\r\n    if (whiteCheckbox)\r\n      colors.push(\"White\")\r\n    var yellowCheckbox = document.getElementById(\"yellowCheckbox\").checked;\r\n    if (yellowCheckbox)\r\n      colors.push(\"Yellow\")\r\n    var empty = !(cardNoSelect || cardNameInput || usernameInput || deckTitleInput || colors.length > 0);\r\n\r\n    var deckData = [];\r\n\r\n    if (empty) {\r\n      deckData = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"]\r\n      props.setDecks(deckData);\r\n      props.setPages(Math.ceil(deckData.length/props.decksPerPage));\r\n      props.setPage(1);\r\n      return;\r\n    }\r\n\r\n    deckData = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"].filter(function (deck) {\r\n      var flag = true;\r\n      if (cardNoSelect) {\r\n        flag = flag && (deck[\"mainDeck\"].filter(function (cards) {\r\n          if (cards[\"cardNo\"] === cardNoSelect)\r\n            return true;\r\n          else\r\n            return false;\r\n        }) || deck[\"eggDeck\"].filter(function (cards) {\r\n          if (cards[\"cardNo\"] === cardNoSelect)\r\n            return true;\r\n          else\r\n            return false;\r\n        }));\r\n      }\r\n      if (cardNameInput) {\r\n        flag = flag && (deck[\"mainDeck\"].filter(function (cards) {\r\n          if (cards[\"cardName\"].toLowerCase() === cardNameInput.toLowerCase())\r\n            return true;\r\n          else\r\n            return false;\r\n        }) || deck[\"eggDeck\"].filter(function (cards) {\r\n          if (cards[\"cardName\"].toLowerCase() === cardNameInput.toLowerCase())\r\n            return true;\r\n          else\r\n            return false;\r\n        }));\r\n      }\r\n\r\n      if (usernameInput) {\r\n        flag = flag && (deck[\"user\"].toLowerCase() === usernameInput.toLowerCase());\r\n      }\r\n\r\n      if (deckTitleInput) {\r\n        flag = flag && (deck[\"title\"].toLowerCase().includes(deckTitleInput.toLowerCase()));\r\n      }\r\n\r\n      if (colors.length > 0) {\r\n        var colorFlag = false;\r\n        if (andCheckbox) {\r\n          colorFlag = true;\r\n          for (var i=0; i < colors.length; i++) {\r\n            if (!deck[\"mainDeckInfo\"][\"colors\"].hasOwnProperty(colors[i]) && !deck[\"eggDeckInfo\"][\"colors\"].hasOwnProperty(colors[i])){\r\n              colorFlag = false;\r\n              break;\r\n            }\r\n          }\r\n\r\n        }\r\n        else {\r\n          for (var j=0; j < colors.length; j++) {\r\n            if (deck[\"mainDeckInfo\"][\"colors\"].hasOwnProperty(colors[j]) || deck[\"eggDeckInfo\"][\"colors\"].hasOwnProperty(colors[j])){\r\n              colorFlag = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        flag = flag && colorFlag;\r\n      }\r\n      return flag;\r\n    });\r\n    props.setDecks(deckData);\r\n    props.setPages(Math.ceil(deckData.length/props.decksPerPage));\r\n    props.setPage(1);\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Get(\"/cards/cardNo\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.map((cardNos) => {\r\n          return (\r\n            <option key={\"no\" + cardNos[\"cardNo\"]} value={cardNos[\"cardNo\"]}>{cardNos[\"cardNo\"]+\" \"+cardNos[\"cardName\"]}</option>\r\n          );\r\n        });\r\n        setCardNo(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setCardNo(\"\");\r\n    })\r\n  }, [props.service]);\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"FilterMenu filterMenu-left\">\r\n      <Form className=\"px-4 py-3\" id=\"filter\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.setPage(1);\r\n        filterPages();\r\n      }}>\r\n        <h5> Filter Decks </h5>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText className=\"bg-dark text-white\" > Deck Title </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input className=\"bg-dark text-white\" name=\"deckTitleInput\" sm=\"8\" id=\"deckTitleInput\" placeholder=\"Search by Deck Title\">\r\n            </Input>\r\n            <InputGroupAddon addonType=\"append\">\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setIsOpen(!isOpen)}}>\r\n                Show more filters\r\n              </button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <Collapse isOpen={isOpen}>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Username </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" name=\"usernameInput\" sm=\"8\" id=\"usernameInput\" placeholder=\"Search by Username\">\r\n              </Input>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Card Name </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"Search by Card Name\">\r\n              </Input>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Card No. </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardNoSelect\" sm=\"8\" id=\"cardNoSelect\" defaultValue=\"default\">\r\n                <option value=\"default\"> -Card No.- </option>\r\n                {cardNo}\r\n              </Input>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <Input className=\"bg-dark text-white\" value=\"Colors\" id=\"colors\" style={{textAlign: \"center\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText className=\"bg-dark text-white\">\r\n                  AND\r\n                </InputGroupText>\r\n                <InputGroupText className=\"bg-dark text-white\">\r\n                  <Input addon type=\"checkbox\" id=\"andCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Black\" id=\"black\" style={{backgroundColor: \"Black\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"Black\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"blackCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Blue\" id=\"blue\" style={{backgroundColor: \"#0097f4\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#0097f4\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"blueCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Green\" id=\"green\" style={{backgroundColor: \"#009c6b\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#009c6b\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"greenCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Purple\" id=\"purple\" style={{backgroundColor: \"#6456a3\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#6456a3\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"purpleCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Red\" id=\"red\" style={{backgroundColor: \"#e6002c\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#e6002c\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"redCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"White\" id=\"white\" style={{backgroundColor: \"White\", color: \"Black\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"White\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"whiteCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Yellow\" id=\"yellow\" style={{backgroundColor: \"#ffff00\", color: \"Black\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#ffff00\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"yellowCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n          </FormGroup>\r\n        </Collapse>\r\n        <FormGroup row>\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"cardNoSelect\").value = 'default';\r\n              document.getElementById(\"deckTitleInput\").value = '';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"usernameInput\").value = '';\r\n              document.getElementById(\"andCheckbox\").checked = false;\r\n              document.getElementById(\"blackCheckbox\").checked = false;\r\n              document.getElementById(\"blueCheckbox\").checked = false;\r\n              document.getElementById(\"greenCheckbox\").checked = false;\r\n              document.getElementById(\"purpleCheckbox\").checked = false;\r\n              document.getElementById(\"redCheckbox\").checked = false;\r\n              document.getElementById(\"whiteCheckbox\").checked = false;\r\n              document.getElementById(\"yellowCheckbox\").checked = false;\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMenu;\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction DecksList(props) {\r\n\r\n  function fillRow(rowDecks) {\r\n    let row = rowDecks.map((deck) => {\r\n      if (!deck[\"privacy\"] && deck[\"status\"] === \"Complete\") {\r\n        var colors = Object.keys(deck[\"mainDeckInfo\"][\"colors\"]);\r\n        colors = colors.concat(Object.keys(deck[\"eggDeckInfo\"][\"colors\"]));\r\n        colors = new Set(colors);\r\n        colors = Array.from(colors).join(\", \");\r\n        var date = Date.parse(deck['update']);\r\n        date = new Date(date);\r\n        date = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \", \" + date.getHours() + \":\" + (date.getMinutes()<10?'0':'') + date.getMinutes();\r\n        return (\r\n          <div className=\"col\" id= {deck[\"id\"]} key={deck[\"id\"]}>\r\n            <div className=\"card text-white bg-dark text-left\">\r\n              <Link className=\"text-white\" to={\"/decklist/\" + deck[\"id\"]} onClick={() => {\r\n                props.onNavigate(deck);\r\n              }}>\r\n                <div className=\"card-block\"><div className=\"card-header\">{deck['title'] + '  by ' + deck['user'] + ' on ' + date}</div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"card-body\">\r\n                        <p className=\"card-text\">{\"Colors: \" + colors}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      return (<></>);\r\n    });\r\n    return row;\r\n  }\r\n\r\n  function makeRows() {\r\n\r\n    // console.log(props.cards.slice(15*(props.page-1), props.cards.length <15*props.page ? props.cards.length : 15*props.page));\r\n    var decks = props.decks.slice(props.decksPerPage*(props.page-1), props.decks.length <props.decksPerPage*props.page ? props.decks.length : props.decksPerPage*props.page);\r\n\r\n    var numDecks = 0;\r\n    if (decks.length < props.rowsPerPage) {\r\n      numDecks = decks.length;\r\n    }\r\n    else {\r\n      numDecks = props.rowsPerPage;\r\n    }\r\n\r\n    var result = [];\r\n    for (var rowNum=1; rowNum<=numDecks; rowNum++) {\r\n      result.push(\r\n        <div className=\"row decks-row\" key={rowNum}>\r\n          {fillRow(decks.slice((rowNum-1)*props.decksInRow, rowNum*props.decksInRow))}\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      {makeRows()}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Decks(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  function handlePageClick(data) {\r\n    props.setPage(data.selected + 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center align-items-center pagination-top\">\r\n        <ReactPaginate\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'page-item disabled'}\r\n          breakLinkClassName={'page-link text-white bg-dark'}\r\n          pageCount={props.pages}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item'}\r\n          forcePage={props.page-1}\r\n          pageLinkClassName={'page-link text-white bg-dark'}\r\n          previousClassName={'page-item'}\r\n          previousLinkClassName={'page-link text-white bg-dark'}\r\n          nextClassName={'page-item'}\r\n          nextLinkClassName={'page-link text-white bg-dark'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n      <div className=\"flex-row flex-grow-1 d-flex flex-nowrap decks-list-container\">\r\n        <DecksList {...props}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Decks;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport Decks from './Decks';\r\n\r\nfunction DeckDB(props) {\r\n  const [decks, setDecks] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  var decksInRow = 1;\r\n  var decksPerPage = decksInRow * 5;\r\n  var rowsPerPage = Math.floor(decksPerPage/decksInRow);\r\n  const setDisplay = props.setDisplay;\r\n  const setPageName = props.setPageName;\r\n\r\n  const getData = useCallback((mounted) => {\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('deckData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    setDisplay(\"block\");\r\n    props.service.Get(\"/decks/deckdb\", {}, (data) => {\r\n      // put data into local storage\r\n      if (mounted) {\r\n        var created = Date.now();\r\n        var sessionObject = {\r\n            created: created,\r\n            data: data\r\n        }\r\n        sessionStorage.setItem('deckData', JSON.stringify(sessionObject));\r\n        var decks = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"];\r\n        setDecks(decks);\r\n        setPages(Math.ceil(decks.length/decksPerPage));\r\n        setDisplay(\"none\");\r\n      }\r\n    }, (error) => {\r\n      setDisplay(\"none\");\r\n      console.log(error);\r\n    });\r\n  }, [props.service, decksPerPage, setDisplay]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Deck Database\");\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData, setPageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex flex-row flex-wrap flex-start\">\r\n      <div className=\"filterMenuWrapper col-xl-4 col-lg-6 col-md-12 col-sm-12\">\r\n        <FilterMenu service={props.service} setDecks={setDecks} setPages={setPages} setPage={setPage} decksInRow={decksInRow} decksPerPage={decksPerPage} rowsPerPage={rowsPerPage}/>\r\n      </div>\r\n      <div className=\"decksWrapper flex-grow-1 d-flex flex-column col-xl-8 col-lg-6 col-md-12 col-sm-12\">\r\n        <Decks {...props} decks={decks} pages={pages} page={page} setPage={setPage} decksInRow={decksInRow} decksPerPage={decksPerPage} rowsPerPage={rowsPerPage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DeckDB;\r\n","import React, {useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, InputGroup, InputGroupAddon, InputGroupText, Collapse} from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FilterMenu(props) {\r\n  const [power, setPower] = useState();\r\n  const [sets, setSets] = useState();\r\n  const [types, setTypes] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function filterPages() {\r\n    var search = document.getElementById(\"searchInput\").value.trim();\r\n\r\n    var attributeSelect = document.getElementById(\"attributeSelect\").value;\r\n    if (attributeSelect === \"default\")\r\n      attributeSelect = \"\";\r\n\r\n    var cardLevelSelect = document.getElementById(\"cardLevelSelect\").value;\r\n    if (cardLevelSelect === \"default\")\r\n      cardLevelSelect = \"\";\r\n\r\n    var cardNameInput = document.getElementById(\"cardNameInput\").value.trim();\r\n\r\n    var cardTypeSelect = document.getElementById(\"cardTypeSelect\").value;\r\n    if (cardTypeSelect === \"default\")\r\n      cardTypeSelect = \"\";\r\n\r\n    var colorSelect = document.getElementById(\"colorSelect\").value;\r\n    if (colorSelect === \"default\")\r\n      colorSelect = \"\";\r\n\r\n    var costSelect = document.getElementById(\"costSelect\").value;\r\n    if (costSelect === \"default\")\r\n      costSelect = \"\";\r\n\r\n    var digivolveSelect = document.getElementById(\"digivolveSelect\").value;\r\n    if (digivolveSelect === \"default\")\r\n      digivolveSelect = \"\";\r\n\r\n    var formSelect = document.getElementById(\"formSelect\").value;\r\n    if (formSelect === \"default\")\r\n      formSelect = \"\";\r\n\r\n    var playEffectInput = document.getElementById(\"playEffectInput\").value.trim();\r\n\r\n    var powerSelect = document.getElementById(\"powerSelect\").value;\r\n    if (powerSelect === \"default\")\r\n      powerSelect = \"\";\r\n\r\n    var securityEffectInput = document.getElementById(\"securityEffectInput\").value.trim();\r\n\r\n    var setSelect = document.getElementById(\"setSelect\").value;\r\n    if (setSelect === \"default\")\r\n      setSelect = \"\";\r\n\r\n    var typeSelect = document.getElementById(\"typeSelect\").value;\r\n    if (typeSelect === \"default\")\r\n      typeSelect = \"\";\r\n\r\n    var raritySelect = document.getElementById(\"raritySelect\").value;\r\n    if (raritySelect === \"default\")\r\n      raritySelect = \"\";\r\n\r\n    var empty = !(search || attributeSelect || cardLevelSelect || cardNameInput || cardTypeSelect || colorSelect || costSelect || digivolveSelect || formSelect || playEffectInput || powerSelect || securityEffectInput || setSelect || typeSelect || raritySelect);\r\n\r\n    var cardData = [];\r\n\r\n    if (empty) {\r\n      cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"]\r\n      props.setCards(cardData);\r\n      props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n      props.setPage(1);\r\n      return;\r\n    }\r\n\r\n    cardData = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"].filter(function (card) {\r\n      var flag = true;\r\n      if (search) {\r\n        flag = flag && card[\"fullText\"].toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n      }\r\n      if (attributeSelect)\r\n        flag = flag && card['attribute'] === attributeSelect;\r\n      if (cardLevelSelect)\r\n        flag = flag && card[\"cardLv\"] === cardLevelSelect;\r\n      if (cardNameInput) {\r\n        flag = flag && card[\"cardName\"].toLowerCase().indexOf(cardNameInput.toLowerCase()) > -1;\r\n      }\r\n      if (cardTypeSelect)\r\n        flag = flag && card[\"cardType\"] === cardTypeSelect;\r\n      if (colorSelect)\r\n        flag = flag && card[\"cardColor\"] === colorSelect;\r\n      if (costSelect)\r\n        flag = flag && card[\"playCost\"] === costSelect;\r\n      if (digivolveSelect)\r\n        flag = flag && (card[\"digivolve1Cost\"] === digivolveSelect || card[\"digivolve2Cost\"] === digivolveSelect);\r\n      if (formSelect)\r\n        flag = flag && card[\"form\"] === formSelect;\r\n      if (playEffectInput)\r\n        flag = flag && card[\"effect\"].toLowerCase().indexOf(playEffectInput.toLowerCase()) > -1;\r\n      if (powerSelect)\r\n        flag = flag && card[\"digiPower\"] === powerSelect;\r\n      if (securityEffectInput)\r\n        flag = flag && card[\"securityEffect\"].toLowerCase().indexOf(securityEffectInput.toLowerCase()) > -1;\r\n      if (setSelect)\r\n        flag = flag && card[\"setId\"] === setSelect;\r\n      if (typeSelect)\r\n        flag = flag && card[\"type\"] === typeSelect;\r\n      if (raritySelect)\r\n        flag = flag && card[\"cardRarity\"] === raritySelect;\r\n      return flag;\r\n    });\r\n    props.setCards(cardData.sort(props.sortCards()));\r\n    props.setPages(Math.ceil(cardData.length/props.cardsPerPage));\r\n    props.setPage(1);\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Get(\"/cards/power\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((powers) => {\r\n          return (\r\n            <option key={\"power\" + powers} value={powers}>{powers}</option>\r\n          );\r\n        });\r\n        setPower(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setPower(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/sets\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((set) => {\r\n          return (\r\n            <option key={\"set\" + set} value={set}>{set}</option>\r\n          );\r\n        });\r\n        setSets(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setSets(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n    props.service.Get(\"/cards/types\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.sort().map((type) => {\r\n          return (\r\n            <option key={\"type\" + type} value={type}>{type}</option>\r\n          );\r\n        });\r\n        setTypes(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setTypes(\"\");\r\n    })\r\n    if (!mounted)\r\n      return;\r\n  }, [props.service]);\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"FilterMenu w-100\">\r\n      <Form className=\"px-4 py-3\" id=\"filter\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.setPage(1);\r\n        filterPages();\r\n      }}>\r\n        <div className=\"form-row d-flex\">\r\n          <div className=\"form-group-filter-element w-100\">\r\n            <div className=\"form-group\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"bg-dark text-white\"> All Text </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"bg-dark text-white\" placeholder=\"Search Card Text\" id=\"searchInput\"/>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setIsOpen(!isOpen)}}>\r\n                    Show more filters\r\n                  </button>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse isOpen={isOpen}>\r\n          <div className=\"d-flex form-row flex-wrap justify-content-left\">\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText className=\"bg-dark text-white\"> Attribute </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"attributeSelect\" sm=\"8\" id=\"attributeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Attribute- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"Data\"> Data </option>\r\n                    <option value=\"Free\"> Free </option>\r\n                    <option value=\"Unknown\"> Unknown </option>\r\n                    <option value=\"Vaccine\"> Vaccine </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Level </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardLevelSelect\" sm=\"8\" id=\"cardLevelSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Level- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Name </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"-Card Name-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Card Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardTypeSelect\" sm=\"8\" id=\"cardTypeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Card Type- </option>\r\n                    <option value=\"Digi-Egg\"> Digi-Egg </option>\r\n                    <option value=\"Digimon\"> Digimon </option>\r\n                    <option value=\"Option\"> Option </option>\r\n                    <option value=\"Tamer\"> Tamer </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Color </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"colorSelect\" sm=\"8\" id=\"colorSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Color- </option>\r\n                    <option value=\"Black\"> Black </option>\r\n                    <option value=\"Blue\"> Blue </option>\r\n                    <option value=\"Green\"> Green </option>\r\n                    <option value=\"Purple\"> Purple </option>\r\n                    <option value=\"Red\"> Red </option>\r\n                    <option value=\"White\"> White </option>\r\n                    <option value=\"Yellow\"> Yellow </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"costSelect\" sm=\"8\" id=\"costSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                    <option value=\"7\"> 7 </option>\r\n                    <option value=\"8\"> 8 </option>\r\n                    <option value=\"9\"> 9 </option>\r\n                    <option value=\"10\"> 10 </option>\r\n                    <option value=\"11\"> 11 </option>\r\n                    <option value=\"12\"> 12 </option>\r\n                    <option value=\"13\"> 13 </option>\r\n                    <option value=\"14\"> 14 </option>\r\n                    <option value=\"15\"> 15 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Digivolve Cost </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"digivolveSelect\" sm=\"8\" id=\"digivolveSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Digivolve Cost- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"1\"> 1 </option>\r\n                    <option value=\"2\"> 2 </option>\r\n                    <option value=\"3\"> 3 </option>\r\n                    <option value=\"4\"> 4 </option>\r\n                    <option value=\"5\"> 5 </option>\r\n                    <option value=\"6\"> 6 </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Form </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"formSelect\" sm=\"8\" id=\"formSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Form- </option>\r\n                    <option value=\"-\"> - </option>\r\n                    <option value=\"In-Training\"> In-Training </option>\r\n                    <option value=\"Rookie\"> Rookie </option>\r\n                    <option value=\"Champion\"> Champion </option>\r\n                    <option value=\"Ultimate\"> Ultimate </option>\r\n                    <option value=\"Mega\"> Mega </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            {/*<div className=\"form-group-filter-element\">\r\n              <div className=\"form-group d-              <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Keyword </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"keywordSelect\" sm={8} id=\"keywordSelect\">\r\n                    <option selected> -Keyword- </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>*/}\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group flex-nowrap\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"playEffectInput\" sm=\"8\" id=\"playEffectInput\" placeholder=\"-Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\" sm=\"4\" >\r\n                    <InputGroupText className=\"bg-dark text-white\"> Power </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"powerSelect\" sm=\"8\" id=\"powerSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Power- </option>\r\n                    {power}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Rarity </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"raritySelect\" sm=\"8\" id=\"raritySelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Rarity- </option>\r\n                    <option value=\"C\"> Common </option>\r\n                    <option value=\"U\"> Uncommon </option>\r\n                    <option value=\"R\"> Rare </option>\r\n                    <option value=\"SR\"> Super Rare </option>\r\n                    <option value=\"SEC\"> Secret Rare </option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Security Effect </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" name=\"securityEffectInput\" sm=\"8\" id=\"securityEffectInput\" placeholder=\"-Security Effect-\">\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Set </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"setSelect\" sm=\"8\" id=\"setSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Set- </option>\r\n                    {sets}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-filter-element\">\r\n              <div className=\"form-group\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Type </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" type=\"select\" name=\"typeSelect\" sm=\"8\" id=\"typeSelect\" defaultValue=\"default\">\r\n                    <option value=\"default\"> -Type- </option>\r\n                    {types}\r\n                  </Input>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n        <div className=\"form-row\">\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button style={{marginLeft: \".5rem\"}} type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"searchInput\").value = '';\r\n              document.getElementById(\"attributeSelect\").value = 'default';\r\n              document.getElementById(\"cardLevelSelect\").value = 'default';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"cardTypeSelect\").value = 'default';\r\n              document.getElementById(\"colorSelect\").value = 'default';\r\n              document.getElementById(\"costSelect\").value = 'default';\r\n              document.getElementById(\"digivolveSelect\").value = 'default';\r\n              document.getElementById(\"formSelect\").value = 'default';\r\n              document.getElementById(\"playEffectInput\").value = '';\r\n              document.getElementById(\"powerSelect\").value = 'default';\r\n              document.getElementById(\"securityEffectInput\").value = '';\r\n              document.getElementById(\"setSelect\").value = 'default';\r\n              document.getElementById(\"typeSelect\").value = 'default';\r\n              document.getElementById(\"raritySelect\").value = 'default';\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button style={{marginRight: \".5rem\"}} type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMenu;\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\n\r\nfunction CardsList(props) {\r\n  function addCard(card) {\r\n    props.addCard(card);\r\n  }\r\n\r\n  function addEggCard(card) {\r\n    props.addEggCard(card);\r\n  }\r\n\r\n  function fillRow(rowCards) {\r\n    let row = rowCards.map((card) => {\r\n      return (\r\n        <div className=\"card-container col-xl-2 col-lg-2 col-md-3 col-sm-4 col-12\" key={card[\"cardNo\"]}>\r\n          <div className=\"card text-white bg-dark text-left\">\r\n            <a href=\"/#\" id={card['cardNo'] + \"link\"} data-container=\"body\" onClick={(e) => {\r\n              e.preventDefault();\r\n              if (card['cardType'] === \"Digi-Egg\") {\r\n                addEggCard(card);\r\n              }\r\n              else {\r\n                addCard(card);\r\n              }\r\n            }}>\r\n              <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n              <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n            </a>\r\n            <UncontrolledPopover delay={{\"show\": 350}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card['cardNo'] + \"link\"}>\r\n              <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n              <PopoverBody className=\"bg-dark text-white\">\r\n                <div className=\"card text-white bg-dark text-left\" key={card[\"cardNo\"]}>\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col\">\r\n                      <div className=\"popover-card-body-image\">\r\n                        <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                          <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                          <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"popover-card-body-text\">\r\n                        <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                        <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                        <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                        <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                        <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                        <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                </PopoverBody>\r\n            </UncontrolledPopover>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return row;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {fillRow(props.cards.slice(props.cardsPerPage*(props.page-1), props.cards.length <props.cardsPerPage*props.page ? props.cards.length : props.cardsPerPage*props.page))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Cards(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  function handlePageClick(data) {\r\n    props.setPage(data.selected + 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-center align-items-center pagination-top\">\r\n        <ReactPaginate\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'page-item disabled'}\r\n          breakLinkClassName={'page-link bg-dark text-white'}\r\n          pageCount={props.pages}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item'}\r\n          forcePage={props.page-1}\r\n          pageLinkClassName={'page-link bg-dark text-white'}\r\n          previousClassName={'page-item'}\r\n          previousLinkClassName={'page-link bg-dark text-white'}\r\n          nextClassName={'page-item'}\r\n          nextLinkClassName={'page-link bg-dark text-white'}\r\n          activeClassName={'active bg-dark text-white'}\r\n        />\r\n      </div>\r\n      <div className=\"flex-row flex-grow-1 d-flex db-card-list-container\">\r\n        <CardsList {...props}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React, {useState, } from 'react';\r\nimport { Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, UncontrolledPopover, PopoverHeader, PopoverBody, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport cardBack from '../../assets/card-back.jpg';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction EggDeck(props) {\r\n\r\n  function removeEggCard(i){\r\n    props.removeEggCard(i);\r\n  }\r\n\r\n  function addEggCard(card){\r\n    props.addEggCard(card);\r\n  }\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"White\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"White\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"White\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"White\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"White\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n\r\n  console.log(props.deck);\r\n  console.log(props.eggDeck);\r\n  var result = props.eggDeck[\"decklist\"].map((card, i) => {\r\n    var [backgroundColor, textColor] = getColorValue(card[\"cardColor\"]);\r\n    return (\r\n      <FormGroup className=\"deck-row\" key={card[\"cardNo\"] + card[\"cardName\"] + \"row\"} row>\r\n        <InputGroup>\r\n          <Input value={card[\"cardNo\"] + \" \" + card[\"cardName\"]} id={card[\"cardNo\"] + \"row\"} style={{backgroundColor: backgroundColor, color: textColor}} disabled/>\r\n          <UncontrolledPopover delay={{\"show\": 250}} className={\"card-builder-popover\"} boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card[\"cardNo\"] + \"row\"}>\r\n            <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"bg-dark text-white\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"] + \"row\"}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                        <img src={cardBack} className=\"card-img card-back\" alt={card[\"alt\"]}/>\r\n                        <img src={card[\"src\"]} className=\"card-img card-front\" alt={card[\"alt\"]}/>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-danger\" onClick={() => {removeEggCard(i); console.log(props.eggDeck)}}>\r\n              -\r\n            </button>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText className=\"bg-dark text-white\"> {card[\"count\"]} </InputGroupText>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-success\" onClick={() => {addEggCard(card); console.log(props.eggDeck)}}>\r\n              +\r\n            </button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    )\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction Deck(props) {\r\n\r\n  function removeCard(i){\r\n    props.removeCard(i);\r\n  }\r\n\r\n  function addCard(card){\r\n    props.addCard(card);\r\n  }\r\n\r\n  function getColorValue(color) {\r\n    switch (color) {\r\n      case \"Black\":\r\n        return [\"Black\", \"White\"];\r\n\r\n      case \"Blue\":\r\n        return \t[\"#0097f4\", \"White\"];\r\n\r\n      case \"Green\":\r\n        return [\"#009c6b\", \"White\"];\r\n\r\n      case \"Purple\":\r\n        return [\"#6456a3\", \"White\"];\r\n\r\n      case \"Red\":\r\n        return [\"#e6002c\", \"White\"];\r\n\r\n      case \"White\":\r\n        return [\"White\", \"Black\"];\r\n\r\n      case \"Yellow\":\r\n        return \t[\"#ffff00\", \"Black\"];\r\n\r\n      default:\r\n        return [\"White\", \"Black\"];\r\n    }\r\n  }\r\n\r\n  var result = props.deck[\"decklist\"].map((card, i) => {\r\n    var [backgroundColor, textColor] = getColorValue(card[\"cardColor\"]);\r\n    return (\r\n      <FormGroup className=\"deck-row\" key={card[\"cardNo\"] + card[\"cardName\"]} row>\r\n        <InputGroup>\r\n          <Input value={card[\"cardNo\"] + \" \" + card[\"cardName\"]} id={card[\"cardNo\"] + \"row\"} style={{backgroundColor: backgroundColor, color: textColor}} disabled/>\r\n          <UncontrolledPopover delay={{\"show\": 250}} className=\"card-builder-popover\" boundariesElement=\"body\" placement=\"auto\" trigger=\"hover\" target={card[\"cardNo\"] + \"row\"}>\r\n            <PopoverHeader className=\"bg-dark text-white\">{card['cardNo'] + ' ' + card['cardName']}</PopoverHeader>\r\n            <PopoverBody className=\"bg-dark text-white\">\r\n              <div className=\"card bg-dark text-white text-left\" key={card[\"cardNo\"]}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"popover-card-body-image\">\r\n                      <a href=\"/#\" id={card['cardNo'] + \"link\"} onClick={(e) => {e.preventDefault();}}>\r\n                        <img src={card[\"src\"]} className=\"card-img\" alt=\"...\"/>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"popover-card-body-text\">\r\n                      <p className=\"card-text\">{\"Card Color: \" + card['cardColor']}</p>\r\n                      <p className=\"card-text\">{\"Card Type: \" + card['cardType']}</p>\r\n                      <p className=\"card-text\">{\"Card Rarity: \" + card['cardRarity']}</p>\r\n                      <p className=\"card-text\">{\"Effect: \" + card['effect']}</p>\r\n                      <p className=\"card-text\">{\"Inherited Effect: \" + card['digivolveEffect']}</p>\r\n                      <p className=\"card-text\">{\"Security Effect: \" + card['securityEffect']}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-danger\" onClick={() => {removeCard(i); console.log(props.deck)}}>\r\n              -\r\n            </button>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText className=\"bg-dark text-white\"> {card[\"count\"]} </InputGroupText>\r\n          </InputGroupAddon>\r\n          <InputGroupAddon addonType=\"append\">\r\n            <button className=\"btn btn-success\" onClick={() => {console.log(card); addCard(card); console.log(props.deck)}}>\r\n              +\r\n            </button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    )\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction DeckPanel(props) {\r\n  const [infoOpen, setInfoOpen] = useState(true);\r\n  const [mainOpen, setMainOpen] = useState(true);\r\n  const [eggOpen, setEggOpen] = useState(true);\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //\r\n  //   getDeck(props);\r\n  // },[getDeck]);\r\n\r\n  // function sortForms() {\r\n  //   return function (a, b) {\r\n  //     var forms = {\"Rookie\": 1, \"Champion\": 2, \"Ultimate\": 3, \"Mega\": 4, \"-\": 5};\r\n  //     // console.log(forms[a] + \" | \" + forms[b]);\r\n  //     if (forms[a] > forms[b]) {\r\n  //       return 1;\r\n  //     }\r\n  //     else if (forms[a] < forms[b]) {\r\n  //       return -1;\r\n  //     }\r\n  //     return 0;\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"deckMenu\">\r\n      <Form className=\"deckPanel\" id=\"deckPanel\"  onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}>\r\n        <div className=\"deckInfo\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setInfoOpen(!infoOpen)}}>\r\n              Deck Info\r\n            </button>\r\n          </div>\r\n          <Collapse isOpen={infoOpen}>\r\n            <div className=\"deck-info-container col\">\r\n              <FormGroup row style={{margin:0}}>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText className=\"bg-dark text-white\"> Deck Title </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input className=\"bg-dark text-white\" id=\"deckTitle\" value={props.title} onChange={(e) => {\r\n                    props.setTitle(e.target.value);\r\n                  }}/>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <Input className=\"bg-dark text-white\" value=\"Private\" id=\"private\" disabled/>\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText className=\"bg-dark text-white\">\r\n                      <Input className=\"bg-dark text-white\" addon type=\"checkbox\" id=\"privacy\" checked={props.privacy} onChange={(e) => {\r\n                        props.setPrivacy(e.target.checked);\r\n                      }}/>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </FormGroup>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"mainDeck\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setMainOpen(!mainOpen)}}>\r\n              Main Deck: {props.deck[\"count\"]}\r\n            </button>\r\n          </div>\r\n          <Collapse isOpen={mainOpen}>\r\n            <div className=\"deck-list-container col\">\r\n              <Deck {...props} />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"digiEggDeck\">\r\n          <div className=\"titleButton\">\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => {setEggOpen(!eggOpen)}}>\r\n              Digi-Egg Deck: {props.eggDeck[\"count\"]}\r\n            </button>\r\n          </div>\r\n          <Collapse isOpen={eggOpen}>\r\n            <div className=\"egg-deck-list-container col\">\r\n              <EggDeck {...props} />\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"deckPanel-buttons col\">\r\n          <FormGroup row>\r\n            <div className=\"btn-group-vertical w-100\">\r\n              <div className=\"col btn-group\">\r\n                <button type=\"button\" className=\"btn w-50 btn-danger\" onClick={()=> {\r\n                  props.clearData();\r\n                  props.setDeck({decklist :[], deckInfo: {colors: {}, cardTypes: {}, levels: {}}, count: 0});\r\n                  // props.setDeck({decklist :[], deckInfo: {colors: {}, costs: {}, cardTypes: {}, levels: {}}, count: 0});\r\n                  props.setEggDeck({decklist :[], deckInfo: {colors: {}}, count: 0});\r\n                }}>\r\n                  Clear\r\n                </button>\r\n                <button type=\"button\" className=\"btn w-50 btn-warning\" onClick={() => {\r\n                  if (props.deck[\"count\"] === 0 && props.eggDeck[\"count\"] === 0) {\r\n                    alert(\"Please add a card first\");\r\n                    return;\r\n                  }\r\n                  var deckTitle = document.getElementById(\"deckTitle\").value.trim();\r\n                  var privacy = document.getElementById(\"privacy\").checked;\r\n                  var deckInfo = props.deck[\"deckInfo\"];\r\n                  var eggDeckInfo = props.eggDeck[\"deckInfo\"];\r\n                  var cardTypes = {};\r\n                  var colors = {};\r\n                  // var costs = {};\r\n                  var levels = {};\r\n                  var eggColors = {};\r\n\r\n                  var mainDeck = [];\r\n                  for (var i=0; i < props.deck[\"decklist\"].length; i++) {\r\n                    mainDeck.push({id: props.deck[\"decklist\"][i][\"id\"], count: props.deck[\"decklist\"][i][\"count\"]});\r\n                  }\r\n\r\n                  var eggDeck = [];\r\n                  for (var j=0; j < props.eggDeck[\"decklist\"].length; j++) {\r\n                    eggDeck.push({id: props.eggDeck[\"decklist\"][j][\"id\"], count: props.eggDeck[\"decklist\"][j][\"count\"]});\r\n                  }\r\n\r\n\r\n                  Object.keys(deckInfo[\"cardTypes\"]).sort().forEach(function(key) {\r\n                    var temp = {};\r\n                    var count = deckInfo[\"cardTypes\"][key][\"count\"];\r\n                    Object.keys(deckInfo[\"cardTypes\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                      temp[color] = deckInfo[\"cardTypes\"][key][\"colors\"][color];\r\n                    });\r\n                    cardTypes[key] = {colors: temp, count: count};\r\n                  });\r\n\r\n                  Object.keys(deckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                    colors[key] = deckInfo[\"colors\"][key];\r\n                  });\r\n\r\n                  // Object.keys(deckInfo[\"costs\"]).sort().forEach(function(key) {\r\n                  //   var temp = {};\r\n                  //   var count = deckInfo[\"costs\"][key][\"count\"];\r\n                  //   Object.keys(deckInfo[\"costs\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                  //     temp[color] = deckInfo[\"costs\"][key][\"colors\"][color];\r\n                  //   });\r\n                  //   costs[key] = {colors: temp, count: count};\r\n                  // });\r\n\r\n                  Object.keys(deckInfo[\"levels\"]).sort().forEach(function(key) {\r\n                    var temp = {};\r\n                    var count = deckInfo[\"levels\"][key][\"count\"];\r\n                    Object.keys(deckInfo[\"levels\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                      temp[color] = deckInfo[\"levels\"][key][\"colors\"][color];\r\n                    });\r\n                    levels[key] = {colors: temp, count: count};\r\n                  });\r\n\r\n                  Object.keys(eggDeckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                    eggColors[key] = eggDeckInfo[\"colors\"][key];\r\n                  });\r\n\r\n                  deckInfo[\"cardTypes\"] = cardTypes;\r\n                  // deckInfo[\"costs\"] = costs;\r\n                  deckInfo[\"colors\"] = colors;\r\n                  deckInfo[\"levels\"] = levels;\r\n                  eggDeckInfo[\"colors\"] = eggColors;\r\n                  var request = {};\r\n                  if (props.userDetails[\"username\"] === props.params[\"user\"] && props.params[\"request\"] === \"Edit\") {\r\n                    request = {_id: props.params[\"id\"], mainDeck: props.deck[\"decklist\"], mainDeckInfo: deckInfo, mainDeckCount: props.deck[\"count\"], eggDeck: props.eggDeck[\"decklist\"], eggDeckInfo: eggDeckInfo, eggDeckCount: props.eggDeck[\"count\"], status: \"Incomplete\", title: deckTitle, privacy: privacy, user: props.userDetails[\"username\"], creation: props.params[\"creation\"]};\r\n                    // console.log(request);\r\n                    props.service.Post(\"/decks/update\", request, () => {\r\n                      alert(\"Deck Saved\");\r\n                      props.clearData();\r\n                      history.push('/mydecks');\r\n                      props.onNavigate(null);\r\n                    }, (e) => {\r\n                      alert(e);\r\n                    });\r\n                  }\r\n                  else {\r\n                    request = {mainDeck: props.deck[\"decklist\"], mainDeckInfo: deckInfo, mainDeckCount: props.deck[\"count\"], eggDeck: props.eggDeck[\"decklist\"], eggDeckInfo: eggDeckInfo, eggDeckCount: props.eggDeck[\"count\"], status: \"Incomplete\", title: deckTitle, privacy: privacy, user: props.userDetails[\"username\"]};\r\n                    // console.log(request);\r\n                    props.service.Post(\"/decks/submit\", request, () => {\r\n                      alert(\"Deck Saved\");\r\n                      props.clearData();\r\n                      history.push('/mydecks');\r\n                      props.onNavigate(null);\r\n                    }, (e) => {\r\n                      alert(e);\r\n                    });\r\n                  }\r\n                }}>\r\n                  Save for Later\r\n                </button>\r\n              </div>\r\n              <div className=\"col btn-group\">\r\n                <button type=\"button\" className=\"btn w-100 btn-success\" onClick={() => {\r\n                  if (props.deck[\"count\"] < 50) {\r\n                    alert(\"Not enough cards in the Main Deck. Either add 50 cards to the Main Deck or click Save for Later.\");\r\n                    return;\r\n                  }\r\n                  else {\r\n                    var deckTitle = document.getElementById(\"deckTitle\").value.trim();\r\n                    var privacy = document.getElementById(\"privacy\").checked;\r\n                    var deckInfo = props.deck[\"deckInfo\"];\r\n                    var eggDeckInfo = props.eggDeck[\"deckInfo\"];\r\n                    var cardTypes = {};\r\n                    var colors = {};\r\n                    // var costs = {};\r\n                    var levels = {};\r\n                    var eggColors = {};\r\n\r\n                    var mainDeck = [];\r\n                    for (var i=0; i < props.deck[\"decklist\"].length; i++) {\r\n                      mainDeck.push({id: props.deck[\"decklist\"][i][\"id\"], count: props.deck[\"decklist\"][i][\"count\"]});\r\n                    }\r\n\r\n                    var eggDeck = [];\r\n                    for (var j=0; j < props.eggDeck[\"decklist\"].length; j++) {\r\n                      eggDeck.push({id: props.eggDeck[\"decklist\"][j][\"id\"], count: props.eggDeck[\"decklist\"][j][\"count\"]});\r\n                    }\r\n\r\n\r\n                    Object.keys(deckInfo[\"cardTypes\"]).sort().forEach(function(key) {\r\n                      var temp = {};\r\n                      var count = deckInfo[\"cardTypes\"][key][\"count\"];\r\n                      Object.keys(deckInfo[\"cardTypes\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                        temp[color] = deckInfo[\"cardTypes\"][key][\"colors\"][color];\r\n                      });\r\n                      cardTypes[key] = {colors: temp, count: count};\r\n                    });\r\n\r\n                    Object.keys(deckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                      colors[key] = deckInfo[\"colors\"][key];\r\n                    });\r\n\r\n                    // Object.keys(deckInfo[\"costs\"]).sort().forEach(function(key) {\r\n                    //   var temp = {};\r\n                    //   var count = deckInfo[\"costs\"][key][\"count\"];\r\n                    //   Object.keys(deckInfo[\"costs\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                    //     temp[color] = deckInfo[\"costs\"][key][\"colors\"][color];\r\n                    //   });\r\n                    //   costs[key] = {colors: temp, count: count};\r\n                    // });\r\n\r\n                    Object.keys(deckInfo[\"levels\"]).sort().forEach(function(key) {\r\n                      var temp = {};\r\n                      var count = deckInfo[\"levels\"][key][\"count\"];\r\n                      Object.keys(deckInfo[\"levels\"][key][\"colors\"]).sort().forEach(function(color) {\r\n                        temp[color] = deckInfo[\"levels\"][key][\"colors\"][color];\r\n                      });\r\n                      levels[key] = {colors: temp, count: count};\r\n                    });\r\n\r\n                    Object.keys(eggDeckInfo[\"colors\"]).sort().forEach(function(key) {\r\n                      eggColors[key] = eggDeckInfo[\"colors\"][key];\r\n                    });\r\n\r\n                    deckInfo[\"cardTypes\"] = cardTypes;\r\n                    // deckInfo[\"costs\"] = costs;\r\n                    deckInfo[\"colors\"] = colors;\r\n                    deckInfo[\"levels\"] = levels;\r\n                    eggDeckInfo[\"colors\"] = eggColors;\r\n                    var request = {}\r\n                    if (props.userDetails[\"username\"] === props.params[\"user\"] && props.params[\"request\"] === \"Edit\") {\r\n                      request = {_id: props.params[\"id\"], mainDeck: props.deck[\"decklist\"], mainDeckInfo: deckInfo, mainDeckCount: props.deck[\"count\"], eggDeck: props.eggDeck[\"decklist\"], eggDeckInfo: eggDeckInfo, eggDeckCount: props.eggDeck[\"count\"], status: \"Complete\", title: deckTitle, privacy: privacy, user: props.userDetails[\"username\"], creation: props.params[\"creation\"]};\r\n                      // console.log(request);\r\n                      props.service.Post(\"/decks/update\", request, () => {\r\n                        alert(\"Deck Saved\");\r\n                        props.clearData();\r\n                        history.push('/mydecks');\r\n                        props.onNavigate(null);\r\n                      }, (e) => {\r\n                        alert(e);\r\n                      });\r\n                    }\r\n                    else {\r\n                      request = {mainDeck: props.deck[\"decklist\"], mainDeckInfo: deckInfo, mainDeckCount: props.deck[\"count\"], eggDeck: props.eggDeck[\"decklist\"], eggDeckInfo: eggDeckInfo, eggDeckCount: props.eggDeck[\"count\"], status: \"Complete\", title: deckTitle, privacy: privacy, user: props.userDetails[\"username\"]};\r\n                      // console.log(request);\r\n                      props.service.Post(\"/decks/submit\", request, () => {\r\n                        alert(\"Deck Saved\");\r\n                        props.clearData();\r\n                        history.push('/mydecks');\r\n                        props.onNavigate(null);\r\n                      }, (e) => {\r\n                        alert(e);\r\n                      });\r\n                    }\r\n                  }\r\n                }}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckPanel;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport Cards from './Cards';\r\nimport DeckPanel from './DeckPanel';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction DeckEditor(props) {\r\n  const [cards, setCards] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  const setDisplay = props.setDisplay;\r\n  const history = useHistory();\r\n  const setPageName = props.setPageName;\r\n  var sessionObject = {\r\n    mainDeck: {\r\n      decklist :[],\r\n      deckInfo: {\r\n        colors: {},\r\n        // costs: {},\r\n        cardTypes: {},\r\n        levels: {}\r\n      },\r\n      count: 0\r\n    },\r\n    eggDeck: {\r\n      decklist: [],\r\n      deckInfo: {\r\n        colors: {}\r\n      },\r\n      count: 0\r\n    },\r\n    title: '',\r\n    privacy: false\r\n  };\r\n  const [deck, setDeck] = useState(sessionObject[\"mainDeck\"]);\r\n  const [eggDeck, setEggDeck] = useState(sessionObject[\"eggDeck\"]);\r\n  const [title, setTitle] = useState(sessionObject[\"title\"]);\r\n  const [privacy, setPrivacy] = useState(sessionObject[\"privacy\"]);\r\n  var cardsInRow = 6;\r\n  var cardsPerPage = cardsInRow * 5;\r\n  var rowsPerPage = Math.floor(cardsPerPage/cardsInRow);\r\n\r\n  function sortCards() {\r\n\r\n    return function (a, b) {\r\n      if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n        return 1;\r\n      }\r\n      else{\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearData() {\r\n    var sessionObject = {\r\n      mainDeck: {\r\n        decklist :[],\r\n        deckInfo: {\r\n          colors: {},\r\n          // costs: {},\r\n          cardTypes: {},\r\n          levels: {}\r\n        },\r\n        count: 0\r\n      },\r\n      eggDeck: {\r\n        decklist: [],\r\n        deckInfo: {\r\n          colors: {}\r\n        },\r\n        count: 0\r\n      },\r\n      title: '',\r\n      privacy: false\r\n    };\r\n    setDeck(sessionObject[\"mainDeck\"]);\r\n    setEggDeck(sessionObject[\"eggDeck\"]);\r\n    setTitle(sessionObject[\"title\"]);\r\n    setPrivacy(sessionObject[\"privacy\"]);\r\n  }\r\n\r\n  function addCard(card) {\r\n    // Make sure not to exceed deck limit\r\n    console.log(card)\r\n    if (deck[\"count\"] < 50) {\r\n      // Update decklist\r\n      // Check if a copy of the card is already in the deck\r\n      var cardIndex = deck[\"decklist\"].findIndex(item => {\r\n         return item.id === card[\"id\"];\r\n      });\r\n\r\n      var cardColor = card[\"cardColor\"];\r\n      var tempDeckInfo = {...deck[\"deckInfo\"]};\r\n      if (cardIndex > -1) {\r\n        // Make sure not to exceed card limit\r\n        var tempDeck = [...deck[\"decklist\"]];\r\n        if (tempDeck[cardIndex][\"count\"] < 4) {\r\n          // Update Deck Info\r\n          // Update colors\r\n          if (tempDeckInfo[\"colors\"][cardColor]) {\r\n            tempDeckInfo[\"colors\"][cardColor] += 1;\r\n          }\r\n          else {\r\n            tempDeckInfo[\"colors\"][cardColor] = 1;\r\n          }\r\n\r\n          // Update costs\r\n          // if (tempDeckInfo[\"costs\"][card[\"playCost\"]]) {\r\n          //   if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"]) {\r\n          //     if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor]) {\r\n          //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] += 1;\r\n          //     }\r\n          //     else {\r\n          //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] = 1;\r\n          //     }\r\n          //   }\r\n          //   else {\r\n          //     tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"] = {[cardColor]: 1};\r\n          //   }\r\n          //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] += 1;\r\n          // }\r\n          // else {\r\n          //   tempDeckInfo[\"costs\"][card[\"playCost\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n          // }\r\n\r\n          // Update cardTypes\r\n          if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]]) {\r\n            if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"]) {\r\n              if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor]) {\r\n                tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] += 1;\r\n              }\r\n              else {\r\n                tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] = 1;\r\n              }\r\n            }\r\n            else {\r\n              tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"] = {[cardColor]: 1};\r\n            }\r\n            tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] += 1;\r\n          }\r\n          else {\r\n            tempDeckInfo[\"cardTypes\"][card[\"cardType\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n          }\r\n\r\n          // Update levels\r\n          if (tempDeckInfo[\"levels\"][card[\"cardLv\"]]) {\r\n            if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"]) {\r\n              if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor]) {\r\n                tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] += 1;\r\n              }\r\n              else {\r\n                tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] = 1;\r\n              }\r\n            }\r\n            else {\r\n              tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"] = {[cardColor]: 1};\r\n            }\r\n            tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] += 1;\r\n          }\r\n          else {\r\n            tempDeckInfo[\"levels\"][card[\"cardLv\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n          }\r\n\r\n          tempDeck[cardIndex][\"count\"] = tempDeck[cardIndex][\"count\"] + 1;\r\n          setDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]+1});\r\n        }\r\n      }\r\n      else {\r\n        // Update Deck Info\r\n        // Update colors\r\n        if (tempDeckInfo[\"colors\"][cardColor]) {\r\n          tempDeckInfo[\"colors\"][cardColor] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"colors\"][cardColor] = 1;\r\n        }\r\n\r\n        // Update costs\r\n        // if (tempDeckInfo[\"costs\"][card[\"playCost\"]]) {\r\n        //   if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"]) {\r\n        //     if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor]) {\r\n        //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] += 1;\r\n        //     }\r\n        //     else {\r\n        //       tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][cardColor] = 1;\r\n        //     }\r\n        //   }\r\n        //   else {\r\n        //     tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"] = {[cardColor]: 1};\r\n        //   }\r\n        //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] += 1;\r\n        // }\r\n        // else {\r\n        //   tempDeckInfo[\"costs\"][card[\"playCost\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n        // }\r\n\r\n        // Update cardTypes\r\n        if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]]) {\r\n          if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"]) {\r\n            if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor]) {\r\n              tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] += 1;\r\n            }\r\n            else {\r\n              tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][cardColor] = 1;\r\n            }\r\n          }\r\n          else {\r\n            tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"] = {[cardColor]: 1};\r\n          }\r\n          tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"cardTypes\"][card[\"cardType\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n        }\r\n\r\n        // Update levels\r\n        if (tempDeckInfo[\"levels\"][card[\"cardLv\"]]) {\r\n          if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"]) {\r\n            if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor]) {\r\n              tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] += 1;\r\n            }\r\n            else {\r\n              tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][cardColor] = 1;\r\n            }\r\n          }\r\n          else {\r\n            tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"] = {[cardColor]: 1};\r\n          }\r\n          tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"levels\"][card[\"cardLv\"]] = {\"colors\": {[cardColor]: 1}, \"count\": 1};\r\n        }\r\n\r\n        card[\"count\"] = 1;\r\n        card[\"id\"] = card[\"cardNo\"];\r\n        setDeck({decklist: [...deck[\"decklist\"], card].sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]+1});\r\n      }\r\n    }\r\n    // console.log(deck);\r\n  }\r\n\r\n  function removeCard(index) {\r\n    var card = deck[\"decklist\"][index];\r\n\r\n    // Update decklist\r\n    var tempDeck = [...deck[\"decklist\"]];\r\n    if (index < tempDeck.length) {\r\n      // Update deck information\r\n      var tempDeckInfo = {...deck[\"deckInfo\"]};\r\n      if (tempDeckInfo[\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n\r\n      // if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][card[\"cardColor\"]] === 1) {\r\n      //   delete tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][card[\"cardColor\"]];\r\n      // }\r\n      // else {\r\n      //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"colors\"][card[\"cardColor\"]] -= 1;\r\n      // }\r\n      // if (tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] === 1) {\r\n      //   delete tempDeckInfo[\"costs\"][card[\"playCost\"]];\r\n      // }\r\n      // else {\r\n      //   tempDeckInfo[\"costs\"][card[\"playCost\"]][\"count\"] -= 1;\r\n      // }\r\n\r\n      if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n      if (tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] === 1) {\r\n        delete tempDeckInfo[\"cardTypes\"][card[\"cardType\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"cardTypes\"][card[\"cardType\"]][\"count\"] -= 1;\r\n      }\r\n\r\n      if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n      if (tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] === 1) {\r\n        delete tempDeckInfo[\"levels\"][card[\"cardLv\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"levels\"][card[\"cardLv\"]][\"count\"] -= 1;\r\n      }\r\n\r\n      // Check if card is last copy\r\n      if (tempDeck[index][\"count\"] > 1) {\r\n        tempDeck[index][\"count\"] = tempDeck[index][\"count\"] - 1;\r\n      }\r\n      else {\r\n        tempDeck.splice(index, 1);\r\n      }\r\n      setDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: deck[\"count\"]-1});\r\n    }\r\n    // console.log(deck);\r\n  }\r\n\r\n  function addEggCard(card) {\r\n    // Make sure not to exceed deck limit\r\n    if (eggDeck[\"count\"] < 5) {\r\n\r\n      // Update decklist\r\n      // Check if a copy of the card is already in the deck\r\n      var cardIndex = eggDeck[\"decklist\"].findIndex(item => {\r\n         return item.id === card[\"id\"];\r\n      });\r\n      var tempDeckInfo = {...eggDeck[\"deckInfo\"]};\r\n      // console.log(tempDeckInfo);\r\n      if (cardIndex > -1) {\r\n        // Update deck information\r\n        if (tempDeckInfo[\"colors\"][card[\"cardColor\"]]) {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] = 1;\r\n        }\r\n        var tempDeck = [...eggDeck[\"decklist\"]];\r\n        if (tempDeck[cardIndex][\"count\"] < 4) {\r\n          tempDeck[cardIndex][\"count\"] = tempDeck[cardIndex][\"count\"] + 1;\r\n          setEggDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]+1});\r\n        }\r\n      }\r\n      else {\r\n        // Update deck information\r\n        if (tempDeckInfo[\"colors\"][card[\"cardColor\"]]) {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] += 1;\r\n        }\r\n        else {\r\n          tempDeckInfo[\"colors\"][card[\"cardColor\"]] = 1;\r\n        }\r\n        card[\"count\"] = 1;\r\n        card[\"id\"] = card[\"cardNo\"];\r\n        setEggDeck({decklist: [...eggDeck[\"decklist\"], card].sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]+1});\r\n      }\r\n    }\r\n    // console.log(eggDeck);\r\n  }\r\n\r\n  function removeEggCard(index) {\r\n    var card = eggDeck[\"decklist\"][index];\r\n\r\n    // Update decklist\r\n    var tempDeck = [...eggDeck[\"decklist\"]];\r\n    if (index < tempDeck.length) {\r\n      // Update deck information\r\n      var tempDeckInfo = {...eggDeck[\"deckInfo\"]};\r\n      if (tempDeckInfo[\"colors\"][card[\"cardColor\"]] === 1) {\r\n        delete tempDeckInfo[\"colors\"][card[\"cardColor\"]];\r\n      }\r\n      else {\r\n        tempDeckInfo[\"colors\"][card[\"cardColor\"]] -= 1;\r\n      }\r\n      // Check if card is last copy\r\n      if (tempDeck[index][\"count\"] > 1) {\r\n        tempDeck[index][\"count\"] = tempDeck[index][\"count\"] - 1;\r\n      }\r\n      else {\r\n        tempDeck.splice(index, 1);\r\n      }\r\n      setEggDeck({decklist: tempDeck.sort(sortDeck()), deckInfo: tempDeckInfo, count: eggDeck[\"count\"]-1});\r\n    }\r\n\r\n    // console.log(eggDeck);\r\n  }\r\n\r\n  function sortDeck() {\r\n\r\n    return function (a, b) {\r\n      if (a[\"cardColor\"] > b[\"cardColor\"]) {\r\n        return 1;\r\n      }\r\n      else if (a[\"cardColor\"] < b[\"cardColor\"]) {\r\n        return -1;\r\n      }\r\n      else {\r\n        if (a[\"cardType\"] > b[\"cardType\"]) {\r\n          return 1;\r\n        }\r\n        else if (a[\"cardType\"] < b[\"cardType\"]) {\r\n          return -1;\r\n        }\r\n        else {\r\n          if (a[\"cardLv\"] > b[\"cardLv\"]) {\r\n            return 1;\r\n          }\r\n          else if (a[\"cardLv\"] < b[\"cardLv\"]) {\r\n            return -1;\r\n          }\r\n          else {\r\n            if (a[\"cardName\"] > b[\"cardName\"]) {\r\n              return 1;\r\n            }\r\n            else if (a[\"cardName\"] < b[\"cardName\"]) {\r\n              return -1;\r\n            }\r\n            else {\r\n              if (a[\"cardNo\"] > b[\"cardNo\"]) {\r\n                return 1;\r\n              }\r\n              else if (a[\"cardNo\"] < b[\"cardNo\"]) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    var currentDate = Date.now();\r\n    var sessionObject = {\r\n      mainDeck: {\r\n        decklist: props.params[\"mainDeck\"],\r\n        deckInfo: props.params[\"mainDeckInfo\"],\r\n        count: props.params[\"mainDeckCount\"]\r\n      },\r\n      eggDeck: {\r\n        decklist: props.params[\"eggDeck\"],\r\n        deckInfo: props.params[\"eggDeckInfo\"],\r\n        count: props.params[\"eggDeckCount\"]\r\n      },\r\n      title: props.params[\"title\"],\r\n      privacy: props.params[\"privacy\"]\r\n    };\r\n    setDeck(sessionObject[\"mainDeck\"]);\r\n    setEggDeck(sessionObject[\"eggDeck\"]);\r\n    setTitle(sessionObject[\"title\"]);\r\n    setPrivacy(sessionObject[\"privacy\"]);\r\n    console.log(props.params);\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('cardData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    if (sessionStorage.getItem('cardData') == null) {\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        history.push('/');\r\n        console.log(error);\r\n      });\r\n    }\r\n    else if (currentDate - JSON.parse(sessionStorage.getItem('cardData'))['created'] >= 43200000) {\r\n      props.service.Get(\"/cards/\", {}, (data) => {\r\n        // put data into local storage\r\n        if (mounted) {\r\n          var created = Date.now();\r\n          var sessionObject = {\r\n              created: created,\r\n              data: data\r\n          }\r\n          sessionStorage.setItem('cardData', JSON.stringify(sessionObject));\r\n          var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n          setCards(cards.sort(sortCards()));\r\n          setPages(Math.ceil(cards.length/cardsPerPage));\r\n          setDisplay(\"none\");\r\n        }\r\n      }, (error) => {\r\n        setDisplay(\"none\");\r\n        history.push('/');\r\n        console.log(error);\r\n      });\r\n    }\r\n    else {\r\n      if (mounted) {\r\n        var cards = JSON.parse(sessionStorage.getItem(\"cardData\"))[\"data\"];\r\n        setCards(cards.sort(sortCards()));\r\n        setPages(Math.ceil(cards.length/cardsPerPage));\r\n        setDisplay(\"none\");\r\n      }\r\n    }\r\n  }, [props.service, cardsPerPage, setDisplay, history, props.params]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Deck Builder\");\r\n    let mounted = true;\r\n    if (mounted && props.params)\r\n      getData(mounted);\r\n    else\r\n      history.push('/');\r\n\r\n    return () => mounted = false;\r\n  },[getData, history, props.params, setPageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex flex-row flex-wrap flex-start\">\r\n      <div className=\"flex-column col-lg-4 col-md-4 col-sm-12 deck-list\">\r\n        <DeckPanel {...props} clearData={clearData} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage} addCard={addCard} removeCard={removeCard} deck={deck} setDeck={setDeck} addEggCard={addEggCard} removeEggCard={removeEggCard} eggDeck={eggDeck} setEggDeck={setEggDeck} title={title} setTitle={setTitle} privacy={privacy} setPrivacy={setPrivacy}/>\r\n      </div>\r\n      <div className=\"d-flex flex-column col-lg-8 col-md-8 col-sm-12 db-cards-filter-container\">\r\n        <div className=\"filterWrapper-top row d-flex\">\r\n          <FilterMenu sortCards={sortCards} service={props.service} setCards={setCards} setPages={setPages} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage}/>\r\n        </div>\r\n        <div className=\"d-flex flex-column flex-grow-1 cardsWrapper\">\r\n          <Cards service={props.service} cards={cards} pages={pages} page={page} setPage={setPage} cardsInRow={cardsInRow} cardsPerPage={cardsPerPage} rowsPerPage={rowsPerPage} addCard={addCard}  addEggCard={addEggCard}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DeckEditor;\r\n","import React from 'react'\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction DecksList(props) {\r\n\r\n  function fillRow(rowDecks) {\r\n    let row = rowDecks.map((deck) => {\r\n      if (!deck[\"privacy\"] && deck[\"status\"] === \"Complete\") {\r\n        var colors = Object.keys(deck[\"mainDeckInfo\"][\"colors\"]);\r\n        colors = colors.concat(Object.keys(deck[\"eggDeckInfo\"][\"colors\"]));\r\n        colors = new Set(colors);\r\n        colors = Array.from(colors).join(\", \");\r\n        var date = Date.parse(deck['update']);\r\n        date = new Date(date);\r\n        date = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \", \" + date.getHours() + \":\" + (date.getMinutes()<10?'0':'') + date.getMinutes();\r\n        return (\r\n          <div className=\"col\" id= {deck[\"id\"]} key={deck[\"id\"]}>\r\n            <div className=\"card text-white bg-dark text-left\">\r\n              <Link className=\"text-white\" to={\"/decklist/\" + deck[\"id\"]} onClick={() => {\r\n                props.onNavigate(deck);\r\n              }}>\r\n                <div className=\"card-block\"><div className=\"card-header\">{deck['title'] + '  by ' + deck['user'] + ' on ' + date}</div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"card-body\">\r\n                        <p className=\"card-text\">{\"Colors: \" + colors}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      return (<></>);\r\n    });\r\n    return row;\r\n  }\r\n\r\n  function makeRows() {\r\n\r\n    // console.log(props.cards.slice(15*(props.page-1), props.cards.length <15*props.page ? props.cards.length : 15*props.page));\r\n\r\n    var decks = props.decks.slice(0, props.decksPerPage);\r\n    var numDecks = 0;\r\n    if (props.decks.length < props.decksPerPage) {\r\n      numDecks = props.decks.length;\r\n    }\r\n    else {\r\n      numDecks = props.decksPerPage;\r\n    }\r\n\r\n    var result = [];\r\n    for (var rowNum=1; rowNum<=numDecks; rowNum++) {\r\n      result.push(\r\n        <div className=\"row decks-row\" key={rowNum}>\r\n          {fillRow(decks.slice((rowNum-1)*props.decksInRow, rowNum*props.decksInRow))}\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      {makeRows()}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Decks(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      <div className=\"row flex-nowrap decks-list-container\">\r\n        <DecksList {...props}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Decks;\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { FacebookProvider, Page } from 'react-facebook';\r\nimport { Card, CardTitle } from 'reactstrap';\r\nimport Decks from './Decks.js';\r\n// import Youtube from './Youtube.js';\r\n\r\nfunction Home(props) {\r\n  const setDisplay = props.setDisplay;\r\n  const setPageName = props.setPageName;\r\n  const [decks, setDecks] = useState([]);\r\n  var decksInRow = 1;\r\n  var decksPerPage = decksInRow * 5;\r\n  var rowsPerPage = Math.floor(decksPerPage/decksInRow);\r\n\r\n  const getData = useCallback((mounted) => {\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('deckData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    setDisplay(\"block\");\r\n    props.service.Get(\"/decks/deckdb/\", {limit: 5}, (data) => {\r\n      // put data into local storage\r\n      if (mounted) {\r\n        var created = Date.now();\r\n        var sessionObject = {\r\n            created: created,\r\n            data: data\r\n        }\r\n        sessionStorage.setItem('deckData', JSON.stringify(sessionObject));\r\n        var decks = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"];\r\n        setDecks(decks);\r\n        setDisplay(\"none\");\r\n      }\r\n    }, (error) => {\r\n      setDisplay(\"none\");\r\n      console.log(error);\r\n    });\r\n  }, [props.service, setDisplay]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Home\");\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData, setPageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"home-content row d-flex\">\r\n        <div className=\"home-card-container col\">\r\n          <Card body className=\"home-card text-white bg-1\">\r\n            <FacebookProvider appId=\"1426479930889397\">\r\n              <Page href=\"https://www.facebook.com/digimontcgen\" width=\"300px\" tabs=\"timeline\" smallHeader=\"true\"/>\r\n            </FacebookProvider>\r\n          </Card>\r\n        </div>\r\n        <div className=\"home-card-container col\">\r\n          <Card body className=\"home-card text-white bg-1\">\r\n            <CardTitle><h2>Recent Decks</h2></CardTitle>\r\n            <Decks {...props} decks={decks} decksInRow={decksInRow} decksPerPage={decksPerPage} rowsPerPage={rowsPerPage}/>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // return (\r\n  //   <div className=\"container-fluid\">\r\n  //     <div className=\"row header-container justify-content-center\">\r\n  //     </div>\r\n  //     <div className=\"row d-flex\">\r\n  //       <div className=\"home-card-container col\">\r\n  //         <div className=\"row card-container\">\r\n  //           <Card body className=\"home-card text-white bg-1\">\r\n  //             <FacebookProvider appId=\"1426479930889397\">\r\n  //               <Page href=\"https://www.facebook.com/digimontcgen\" width=\"300px\" tabs=\"timeline\" />\r\n  //             </FacebookProvider>\r\n  //           </Card>\r\n  //         </div>\r\n  //         <div className=\"row card-container\">\r\n  //           <Card body className=\"home-card text-white bg-1\">\r\n  //             <CardTitle><h2>Recent Decks</h2></CardTitle>\r\n  //             <Decks {...props} decks={decks} decksInRow={decksInRow} decksPerPage={decksPerPage} rowsPerPage={rowsPerPage}/>\r\n  //           </Card>\r\n  //         </div>\r\n  //       </div>\r\n  //       <div className=\"home-card-container card-container col\">\r\n  //         <Card body className=\"home-card text-white bg-1\">\r\n  //           <CardTitle><h2>Recent Content</h2></CardTitle>\r\n  //           <Youtube {...props}/>\r\n  //         </Card>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n}\r\nexport default Home;\r\n","import React, {useState, useEffect, useCallback } from 'react';\r\nimport { Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Collapse } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FilterMenu(props) {\r\n  const [cardNo, setCardNo] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function filterPages() {\r\n    var deckTitleInput = document.getElementById(\"deckTitleInput\").value.trim();\r\n    var cardNoSelect = document.getElementById(\"cardNoSelect\").value;\r\n    if (cardNoSelect === \"default\")\r\n      cardNoSelect = \"\";\r\n\r\n    var cardNameInput = document.getElementById(\"cardNameInput\").value.trim();\r\n\r\n    var colors = [];\r\n    var andCheckbox = document.getElementById(\"andCheckbox\").checked;\r\n    var blackCheckbox = document.getElementById(\"blackCheckbox\").checked;\r\n    if (blackCheckbox)\r\n      colors.push(\"Black\")\r\n    var blueCheckbox = document.getElementById(\"blueCheckbox\").checked;\r\n    if (blueCheckbox)\r\n      colors.push(\"Blue\")\r\n    var greenCheckbox = document.getElementById(\"greenCheckbox\").checked;\r\n    if (greenCheckbox)\r\n      colors.push(\"Green\")\r\n    var purpleCheckbox = document.getElementById(\"purpleCheckbox\").checked;\r\n    if (purpleCheckbox)\r\n      colors.push(\"Purple\")\r\n    var redCheckbox = document.getElementById(\"redCheckbox\").checked;\r\n    if (redCheckbox)\r\n      colors.push(\"Red\")\r\n    var whiteCheckbox = document.getElementById(\"whiteCheckbox\").checked;\r\n    if (whiteCheckbox)\r\n      colors.push(\"White\")\r\n    var yellowCheckbox = document.getElementById(\"yellowCheckbox\").checked;\r\n    if (yellowCheckbox)\r\n      colors.push(\"Yellow\")\r\n    // console.log(colors);\r\n    var empty = !(cardNoSelect || cardNameInput || deckTitleInput || colors.length > 0);\r\n\r\n    var deckData = [];\r\n\r\n    if (empty) {\r\n      deckData = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"]\r\n      props.setDecks(deckData);\r\n      props.setPages(Math.ceil(deckData.length/props.decksPerPage));\r\n      props.setPage(1);\r\n      // console.log(\"Length: \"+deckData.length);\r\n      // console.log(\"Pages: \"+Math.ceil(deckData.length/props.decksPerPage));\r\n      return;\r\n    }\r\n\r\n    deckData = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"].filter(function (deck) {\r\n      var flag = true;\r\n      if (cardNoSelect) {\r\n        flag = flag && (deck[\"mainDeck\"].filter(function (cards) {\r\n          if (cards[\"cardNo\"] === cardNoSelect)\r\n            return true;\r\n          else\r\n            return false;\r\n        }) || deck[\"eggDeck\"].filter(function (cards) {\r\n          if (cards[\"cardNo\"] === cardNoSelect)\r\n            return true;\r\n          else\r\n            return false;\r\n        }));\r\n      }\r\n      if (cardNameInput) {\r\n        flag = flag && (deck[\"mainDeck\"].filter(function (cards) {\r\n          if (cards[\"cardName\"].toLowerCase() === cardNameInput.toLowerCase())\r\n            return true;\r\n          else\r\n            return false;\r\n        }) || deck[\"eggDeck\"].filter(function (cards) {\r\n          if (cards[\"cardName\"].toLowerCase() === cardNameInput.toLowerCase())\r\n            return true;\r\n          else\r\n            return false;\r\n        }));\r\n      }\r\n      if (deckTitleInput) {\r\n        flag = flag && (deck[\"title\"].toLowerCase().includes(deckTitleInput.toLowerCase()));\r\n      }\r\n      if (colors.length > 0) {\r\n        var colorFlag = false;\r\n        if (andCheckbox) {\r\n          colorFlag = true;\r\n          for (var i=0; i < colors.length; i++) {\r\n            if (!deck[\"mainDeckInfo\"][\"colors\"].hasOwnProperty(colors[i]) && !deck[\"eggDeckInfo\"][\"colors\"].hasOwnProperty(colors[i])){\r\n              colorFlag = false;\r\n              break;\r\n            }\r\n          }\r\n\r\n        }\r\n        else {\r\n          for (var j=0; j < colors.length; j++) {\r\n            if (deck[\"mainDeckInfo\"][\"colors\"].hasOwnProperty(colors[j]) || deck[\"eggDeckInfo\"][\"colors\"].hasOwnProperty(colors[j])){\r\n              colorFlag = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        flag = flag && colorFlag;\r\n      }\r\n      // console.log(flag);\r\n      return flag;\r\n    });\r\n    props.setDecks(deckData);\r\n    props.setPages(Math.ceil(deckData.length/props.decksPerPage));\r\n    // console.log(deckData);\r\n    // console.log(\"Length: \"+deckData.length);\r\n    // console.log(\"Pages: \"+Math.ceil(deckData.length/props.decksPerPage));\r\n    props.setPage(1);\r\n  }\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Get(\"/cards/cardNo\", {}, (data) => {\r\n      if (mounted) {\r\n        let option = data.map((cardNos) => {\r\n          return (\r\n            <option key={\"no\" + cardNos[\"cardNo\"]} value={cardNos[\"cardNo\"]}>{cardNos[\"cardNo\"]+\" \"+cardNos[\"cardName\"]}</option>\r\n          );\r\n        });\r\n        setCardNo(option);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setCardNo(\"\");\r\n    })\r\n  }, [props.service]);\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted = true;\r\n    if (mounted)\r\n      getData(mounted);\r\n\r\n    return () => mounted = false;\r\n  },[getData]);\r\n\r\n  return (\r\n    <div className=\"FilterMenu filterMenu-left\">\r\n      <Form className=\"px-4 py-3\" id=\"filter\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        filterPages();\r\n      }}>\r\n        <h5> Filter Decks </h5>\r\n        <FormGroup row>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText className=\"bg-dark text-white\" > Deck Title </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input className=\"bg-dark text-white\" name=\"deckTitleInput\" sm=\"8\" id=\"deckTitleInput\" placeholder=\"Search by Deck Title\">\r\n            </Input>\r\n            <InputGroupAddon addonType=\"append\">\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setIsOpen(!isOpen)}}>\r\n                Show more filters\r\n              </button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <Collapse isOpen={isOpen}>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Card Name </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" name=\"cardNameInput\" sm=\"8\" id=\"cardNameInput\" placeholder=\"Search by Card Name\">\r\n              </Input>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Card No. </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" type=\"select\" name=\"cardNoSelect\" sm=\"8\" id=\"cardNoSelect\" defaultValue=\"default\">\r\n                <option value=\"default\"> -Card No.- </option>\r\n                {cardNo}\r\n              </Input>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <InputGroup>\r\n              <Input className=\"bg-dark text-white\" value=\"Colors\" id=\"colors\" style={{textAlign: \"center\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText className=\"bg-dark text-white\">\r\n                  AND\r\n                </InputGroupText>\r\n                <InputGroupText className=\"bg-dark text-white\">\r\n                  <Input addon type=\"checkbox\" id=\"andCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Black\" id=\"black\" style={{backgroundColor: \"Black\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"Black\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"blackCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Blue\" id=\"blue\" style={{backgroundColor: \"#0097f4\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#0097f4\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"blueCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Green\" id=\"green\" style={{backgroundColor: \"#009c6b\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#009c6b\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"greenCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Purple\" id=\"purple\" style={{backgroundColor: \"#6456a3\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#6456a3\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"purpleCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Red\" id=\"red\" style={{backgroundColor: \"#e6002c\", color: \"White\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#e6002c\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"redCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"White\" id=\"white\" style={{backgroundColor: \"White\", color: \"Black\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"White\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"whiteCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input value=\"Yellow\" id=\"yellow\" style={{backgroundColor: \"#ffff00\", color: \"Black\"}} disabled/>\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText style={{backgroundColor: \"#ffff00\"}}>\r\n                  <Input addon type=\"checkbox\" id=\"yellowCheckbox\"/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n          </FormGroup>\r\n        </Collapse>\r\n        <FormGroup row>\r\n          <div className=\"btn-group w-100\" role=\"group\">\r\n            <button type=\"button\" className=\"btn w-50 btn-danger\" onClick={() => {\r\n              document.getElementById(\"cardNoSelect\").value = 'default';\r\n              document.getElementById(\"deckTitleInput\").value = '';\r\n              document.getElementById(\"cardNameInput\").value = '';\r\n              document.getElementById(\"andCheckbox\").checked = false;\r\n              document.getElementById(\"blackCheckbox\").checked = false;\r\n              document.getElementById(\"blueCheckbox\").checked = false;\r\n              document.getElementById(\"greenCheckbox\").checked = false;\r\n              document.getElementById(\"purpleCheckbox\").checked = false;\r\n              document.getElementById(\"redCheckbox\").checked = false;\r\n              document.getElementById(\"whiteCheckbox\").checked = false;\r\n              document.getElementById(\"yellowCheckbox\").checked = false;\r\n            }}>\r\n              Clear\r\n            </button>\r\n            <button type=\"submit\" className=\"btn w-50 btn-success\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterMenu;\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction DecksList(props) {\r\n\r\n  function fillRow(rowDecks) {\r\n    let row = rowDecks.map((deck) => {\r\n      var colors = Object.keys(deck[\"mainDeckInfo\"][\"colors\"]);\r\n      colors = colors.concat(Object.keys(deck[\"eggDeckInfo\"][\"colors\"]));\r\n      colors = new Set(colors);\r\n      colors = Array.from(colors).join(\", \");\r\n      var date = Date.parse(deck['update']);\r\n      date = new Date(date);\r\n      date = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \", \" + date.getHours() + \":\" + (date.getMinutes()<10?'0':'') + date.getMinutes();\r\n      return (\r\n        <div className=\"col\" id= {deck[\"id\"]} key={deck[\"id\"]}>\r\n          <div className=\"card text-white bg-dark text-left\">\r\n            <Link className=\"text-white\" to={\"/decklist/\" + deck[\"id\"]} onClick={() => {\r\n              props.onNavigate(deck);\r\n            }}>\r\n              <div className=\"card-block\"><div className=\"card-header\">{deck['title'] + ' on ' + date + \" | Status: \" + deck[\"status\"] + \" | \" + (deck[\"privacy\"] ? \"Private\" : \"Public\")}</div>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <div className=\"card-body\">\r\n                      <p className=\"card-text\">{\"Colors: \" + colors}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return row;\r\n  }\r\n\r\n  function makeRows() {\r\n\r\n    // console.log(props.cards.slice(15*(props.page-1), props.cards.length <15*props.page ? props.cards.length : 15*props.page));\r\n    var decks = props.decks.slice(props.decksPerPage*(props.page-1), props.decks.length <props.decksPerPage*props.page ? props.decks.length : props.decksPerPage*props.page);\r\n\r\n    var numDecks = 0;\r\n    if (decks.length < props.rowsPerPage) {\r\n      numDecks = decks.length;\r\n    }\r\n    else {\r\n      numDecks = props.rowsPerPage;\r\n    }\r\n\r\n    var result = [];\r\n    for (var rowNum=1; rowNum<=numDecks; rowNum++) {\r\n      result.push(\r\n        <div className=\"row decks-row\" key={rowNum}>\r\n          {fillRow(decks.slice((rowNum-1)*props.decksInRow, rowNum*props.decksInRow))}\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      {makeRows()}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Decks(props) {\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.cards);\r\n  // });\r\n\r\n  function handlePageClick(data) {\r\n    props.setPage(data.selected + 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center align-items-center pagination-top\">\r\n        <ReactPaginate\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'page-item disabled'}\r\n          breakLinkClassName={'page-link bg-dark text-white'}\r\n          pageCount={props.pages}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={'pagination'}\r\n          pageClassName={'page-item'}\r\n          pageLinkClassName={'page-link bg-dark text-white'}\r\n          previousClassName={'page-item'}\r\n          previousLinkClassName={'page-link bg-dark text-white'}\r\n          nextClassName={'page-item'}\r\n          nextLinkClassName={'page-link bg-dark text-white'}\r\n          activeClassName={'active bg-dark text-white'}\r\n        />\r\n      </div>\r\n      <div className=\"flex-row flex-grow-1 d-flex flex-nowrap decks-list-container\">\r\n        <DecksList {...props}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Decks;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport Decks from './Decks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction MyDecks(props) {\r\n  const [decks, setDecks] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  var decksInRow = 1;\r\n  var decksPerPage = decksInRow * 5;\r\n  var rowsPerPage = Math.floor(decksPerPage/decksInRow);\r\n  const setDisplay = props.setDisplay;\r\n  const userDetails = props.userDetails;\r\n  const setPageName = props.setPageName;\r\n  const history = useHistory();\r\n\r\n  const getData = useCallback((mounted) => {\r\n    // console.log(\"Session Storage: \" + sessionStorage.getItem('deckData'));\r\n    // console.log(\"Current Date: \" + currentDate);\r\n    props.service.Get(\"/decks/\", {username: userDetails.username}, (data) => {\r\n      // put data into local storage\r\n      if (mounted) {\r\n        var created = Date.now();\r\n        var sessionObject = {\r\n            created: created,\r\n            data: data\r\n        }\r\n        sessionStorage.setItem('deckData', JSON.stringify(sessionObject));\r\n        var decks = JSON.parse(sessionStorage.getItem(\"deckData\"))[\"data\"];\r\n        setDecks(decks);\r\n        setPages(Math.ceil(decks.length/decksPerPage));\r\n        setDisplay(\"none\");\r\n        // console.log(decks);\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n      setDisplay(\"none\");\r\n    });\r\n  }, [props.service, decksPerPage, setDisplay, userDetails]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"My Decks\");\r\n    let mounted = true;\r\n    if (props.loaded) {\r\n      if (!props.userDetails[\"username\"]) {\r\n        history.push('/');\r\n        return;\r\n      }\r\n\r\n      if (mounted)\r\n        getData(mounted);\r\n    }\r\n    return () => mounted = false;\r\n  },[getData, props.loaded, history, props.userDetails, setPageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex flex-row flex-wrap flex-start\">\r\n      <div className=\"filterMenuWrapper col-xl-4 col-lg-6 col-md-12 col-sm-12\">\r\n        <FilterMenu service={props.service} setDecks={setDecks} setPages={setPages} setPage={setPage} decksInRow={decksInRow} decksPerPage={decksPerPage} rowsPerPage={rowsPerPage}/>\r\n      </div>\r\n      <div className=\"decksWrapper flex-grow-1 d-flex flex-column col-xl-8 col-lg-6 col-md-12 col-sm-12\">\r\n        <Decks {...props} decks={decks} pages={pages} page={page} setPage={setPage} decksInRow={decksInRow} decksPerPage={decksPerPage} rowsPerPage={rowsPerPage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MyDecks;\r\n","import React, { useState } from 'react';\r\nimport { Form, FormGroup, Label, Input, Button, ButtonGroup } from \"reactstrap\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction LoginRegister(props) {\r\n  const [component, setComponent] = useState(\"Login\");\r\n\r\n  function buildComponentMap() {\r\n    return {\r\n        \"Login\": <Login service={props.service} onLoginChange={props.onLoginChange} changeSelected={props.changeSelected} onNavigate={props.onNavigate}/>,\r\n        \"Register\": <Register service={props.service} onLoginChange={props.onLoginChange} onNavigate={props.onNavigate}/>\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <div className=\"btn-group d-flex flex-row flex-wrap\" role=\"group\">\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setComponent(\"Login\")}>Login</button>\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setComponent(\"Register\")}>Register</button>\r\n        </div>\r\n      </Form>\r\n      <div className=\"LoginRegister d-flex flex-row flex-wrap\">\r\n        <div className=\"p-2\" style={{flex: 1}}>\r\n          {buildComponentMap()[component]}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <div>\r\n      <Form className=\"px-4 py-3\" id=\"login\" onSubmit={(e) => {\r\n        e.preventDefault();\r\n        let email = document.getElementById(\"loginEmail\").value;\r\n        let password = document.getElementById(\"loginPassword\").value;\r\n        props.service.Login(email, password, () => {\r\n          props.onLoginChange();\r\n        }, (e) => {\r\n          alert(e);\r\n        });\r\n      }}>\r\n        <h5> Login </h5>\r\n        <FormGroup>\r\n          <Label for=\"loginEmail\"> Email </Label>\r\n          <Input type=\"loginEmail\" name=\"loginEmail\" id=\"loginEmail\" placeholder=\"Email\" required=\"required\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"loginPassword\"> Password </Label>\r\n          <Input type=\"password\" name=\"loginPassword\" id=\"loginPassword\" placeholder=\"********\" required=\"Required\"/>\r\n        </FormGroup>\r\n        <ButtonGroup>\r\n          <Button type=\"reset\" color=\"danger\"> Clear </Button>\r\n          <Button type=\"submit\" color=\"success\"> Login </Button>\r\n        </ButtonGroup>\r\n      </Form>\r\n      <div className=\"px-4 py-3\" >\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <a href=\"/password\" onClick={() => {\r\n              props.onNavigate(null);\r\n            }}> Forgot Password? </a>\r\n          </div>\r\n          <div className=\"row\">\r\n            <a href=\"/resend\" onClick={() => {\r\n              props.onNavigate(null);\r\n            }}> Resend Verification Email </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Register(props) {\r\n  const history = useHistory();\r\n  return (\r\n    <Form className=\"px-4 py-3\" id=\"register\" onSubmit={(e) => {\r\n      e.preventDefault();\r\n      let email = document.getElementById(\"registerEmail\").value;\r\n      let username = document.getElementById(\"username\").value;\r\n      let firstName = document.getElementById(\"firstName\").value;\r\n      let lastName = document.getElementById(\"lastName\").value;\r\n      let password = document.getElementById(\"registerPassword\").value;\r\n      if (password.length < 8) {\r\n        alert(\"Password must be at least 8 characters\");\r\n        return;\r\n      }\r\n      props.service.Register(email, username, firstName, lastName, password, () => {\r\n        document.getElementById(\"registerEmail\").value = '';\r\n        document.getElementById(\"username\").value = '';\r\n        document.getElementById(\"firstName\").value = '';\r\n        document.getElementById(\"lastName\").value = '';\r\n        document.getElementById(\"registerPassword\").value = '';\r\n        props.onNavigate(null);\r\n        history.push('/');\r\n        alert(\"Confirmation email has been sent.\");\r\n      }, (e) => {\r\n        alert(e);\r\n      });\r\n    }}>\r\n      <h5> Register </h5>\r\n      <FormGroup>\r\n        <Label for=\"registerEmail\"> Email </Label>\r\n        <Input type=\"registerEmail\" name=\"registerEmail\" id=\"registerEmail\" placeholder=\"Required\" required=\"required\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"username\"> Username </Label>\r\n        <Input type=\"username\" name=\"username\" id=\"username\" placeholder=\"Required\" required=\"required\" />\r\n      </FormGroup>\r\n      <div className=\"d-flex flex-wrap justify-content-between\">\r\n        <div style={{flex: 1}}>\r\n          <FormGroup>\r\n            <Label for=\"firstName\"> First Name </Label>\r\n            <Input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Optional\"/>\r\n          </FormGroup>\r\n        </div>\r\n        <div style={{flex: 1}}>\r\n          <FormGroup>\r\n            <Label for=\"lastName\"> Last Name </Label>\r\n            <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Optional\"/>\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n      <FormGroup>\r\n        <Label for=\"registerPassword\"> Password </Label>\r\n        <Input type=\"password\" name=\"registerPassword\" id=\"registerPassword\" placeholder=\"********\" required=\"Required\"/>\r\n      </FormGroup>\r\n      <ButtonGroup>\r\n        <Button type=\"reset\" color=\"danger\"> Clear </Button>\r\n        <Button type=\"submit\" color=\"success\"> Register </Button>\r\n      </ButtonGroup>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default LoginRegister;\r\n","import React from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { DropdownItem } from 'reactstrap';\r\n\r\nfunction UserPanel(props) {\r\n\r\n  return (\r\n    <div id=\"UserPanel\">\r\n      {props.admin &&\r\n        <div>\r\n          <DropdownItem className=\"text-white\" tag={Link} to=\"/admin\" onClick={() => {\r\n            props.onNavigate(null);\r\n          }}>\r\n            Admin Panel\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n        </div>\r\n      }\r\n      <DropdownItem className=\"text-white\" tag={Link} to=\"/mydecks\" onClick={() => {\r\n        props.onNavigate(null);\r\n      }}>\r\n        My Decks\r\n      </DropdownItem>\r\n      <DropdownItem className=\"text-white\" tag={Link} to=\"/settings\" onClick={() => {\r\n        props.onNavigate(null);\r\n      }}>\r\n        Settings\r\n      </DropdownItem>\r\n      <DropdownItem className=\"text-white\" tag={Link} to=\"/\" onClick={(e) => {\r\n        props.service.Logout( () => {\r\n          props.onLoginChange();\r\n          props.onNavigate(null);\r\n        }, (e) => {\r\n          alert(e);\r\n        });\r\n      }}>\r\n        Log Out\r\n      </DropdownItem>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default UserPanel;\r\n","import React, {useState} from 'react';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport LoginRegister from './LoginRegister.js';\r\nimport UserPanel from './UserPanel.js';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nfunction TopNavbar(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  function rightNavigation() {\r\n    let rightNav = [];\r\n    for (let i = 0; i < props.rightNav.length; i++) {\r\n      // let click = () => {\r\n      //   setSelected(props.rightNav[i]);\r\n      //   props.onNavigate(props.rightNav[i], null);\r\n      // };\r\n      if (props.rightNav[i] === \"Login/Register\"){\r\n        rightNav.push(\r\n          <UncontrolledDropdown id=\"login-register-dropdown\" key={props.rightNav[i]} nav inNavbar>\r\n            <DropdownToggle nav caret>\r\n              Login/Register\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"bg-dark\" id=\"login-register-window\" right>\r\n              <LoginRegister service={props.service} onLoginChange={props.onLoginChange} onNavigate={props.onNavigate} />\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        )\r\n      }\r\n      if (props.rightNav[i] === \"User Panel\"){\r\n        rightNav.push(\r\n          <UncontrolledDropdown key={props.rightNav[i]} nav inNavbar>\r\n            <DropdownToggle nav caret>\r\n              {props.userDetails[\"username\"]}\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"bg-dark\" id=\"userpanel-window\" right>\r\n              <UserPanel service={props.service} admin={props.admin} userDetails={props.userDetails} onLoginChange={props.onLoginChange} onNavigate={props.onNavigate}/>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        )\r\n      }\r\n    }\r\n    return rightNav;\r\n  }\r\n\r\n  return (\r\n\r\n    <Navbar className=\"py-3 shadow-sm fixed-top justify-content-between navbar-custom\" dark expand=\"lg\">\r\n      <NavbarBrand tag={Link} to=\"/\">DigiDecks</NavbarBrand>\r\n      <NavbarText style={{padding:\"0\"}}> <h2 style={{color: \"white\", margin:\"0\", paddingRight: \"1rem\"}}>| </h2> </NavbarText>\r\n      <NavbarText className=\"mr-auto\" > <h5 style={{color: \"white\", margin:\"0\", paddingRight: \"2rem\"}}>{props.pageName}</h5> </NavbarText>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/deckbuilder\"> Deck Builder </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/carddb\"> Card Database </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/deckdb\"> Deck Database </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav className=\"in-line\" navbar>\r\n          {rightNavigation()}\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default TopNavbar;\r\n","import React, { useEffect } from \"react\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\nfunction Password (props){\r\n  const history = useHistory();\r\n  const setDisplay = props.setDisplay;\r\n\r\n  useEffect(() => {\r\n    props.setPageName(\"Reset Password\");\r\n    let mounted = true;\r\n    if (mounted)\r\n      setDisplay(\"none\");\r\n    return () => mounted = false;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={{height: \"100vh\"}}>\r\n      <div className=\"d-flex justify-content-center align-items-center flex-grow-1 h-100\">\r\n        <div className=\"d-flex col-8 bg-dark text-white\" style={{borderRadius: \"10px 10px 10px 10px\", padding: \"1rem\"}}>\r\n          <Form className=\"px-4 py-3 flex-grow-1\" id=\"filter\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            var email = document.getElementById(\"resetEmail\").value;\r\n            props.service.Post(\"/sendReset\", {email: email}, () => {\r\n              props.onNavigate(null);\r\n              history.push('/');\r\n              alert(\"Password Reset email has been sent.\");\r\n            }, (error) => {\r\n              alert(error);\r\n            });\r\n          }}>\r\n            <h5> Reset Password </h5>\r\n            <FormGroup row>\r\n              <Label for=\"resetEmail\"> Email </Label>\r\n              <Input name=\"resetEmail\" id=\"resetEmail\" placeholder=\"Required\" required=\"required\" />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <div className=\"btn-group w-100\" role=\"group\">\r\n                <Button className=\"w-100\" type=\"submit\" color=\"success\"> Send Reset Email </Button>\r\n              </div>\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Password;\r\n","import React, { useEffect } from \"react\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\nfunction Resend (props){\r\n  const history = useHistory();\r\n  const setDisplay = props.setDisplay;\r\n\r\n  useEffect(() => {\r\n    props.setPageName(\"Resend Email\");\r\n    let mounted = true;\r\n    if (mounted)\r\n      setDisplay(\"none\");\r\n    return () => mounted = false;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={{height: \"100vh\"}}>\r\n      <div className=\"d-flex justify-content-center align-items-center flex-grow-1 h-100\">\r\n        <div className=\"d-flex col-8 bg-dark text-white\" style={{borderRadius: \"10px 10px 10px 10px\", padding: \"1rem\"}}>\r\n          <Form className=\"px-4 py-3 flex-grow-1\" id=\"filter\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            var email = document.getElementById(\"resendEmail\").value;\r\n            props.service.Post(\"/resend\", {email: email}, () => {\r\n              props.onNavigate(null);\r\n              history.push('/');\r\n              alert(\"Confirmation email has been sent.\");\r\n            }, (error) => {\r\n              alert(error);\r\n            });\r\n          }}>\r\n            <h5> Resend Verification Email </h5>\r\n            <FormGroup row>\r\n              <Label for=\"resendEmail\"> Email </Label>\r\n              <Input name=\"resendEmail\" id=\"resendEmail\" placeholder=\"Required\" required=\"required\" />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <div className=\"btn-group w-100\" role=\"group\">\r\n                <Button className=\"w-100\" type=\"submit\" color=\"success\"> Resend Verification Email </Button>\r\n              </div>\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Resend;\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction Reset (props) {\r\n  const history = useHistory();\r\n  const setDisplay = props.setDisplay;\r\n  const [validToken, setValidToken] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  let mParams = useParams();\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Post(\"/reset\", {token: mParams.token}, (data) => {\r\n      // put data into local storage\r\n      if (mounted) {\r\n        setValidToken(true);\r\n        setShow(true);\r\n        setDisplay(\"none\");\r\n      }\r\n    }, (error) => {\r\n      console.log(error)\r\n      setValidToken(false);\r\n      setShow(true);\r\n      setDisplay(\"none\");\r\n    });\r\n  }, [props.service, setDisplay, mParams.token]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (props.loaded) {\r\n      if (mounted)\r\n        getData(mounted);\r\n    }\r\n    return () => mounted = false;\r\n  },[getData, props.loaded, history, props.userDetails]);\r\n\r\n  return (\r\n      <div className=\"d-flex row justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n        {show && props.loaded && validToken &&\r\n          <h1 className=\"bg-dark text-white\" style={{borderRadius: \"10px 10px 10px 10px\", padding: \"1rem\", color: \"black\"}}> Password has been reset. Please check your email for your new password </h1>\r\n        }\r\n        {show && props.loaded && !validToken &&\r\n          <div className=\"bg-dark text-white\" style={{borderRadius: \"10px 10px 10px 10px\", padding: \"1rem\"}}>\r\n            <h1 > Reset Failed. Link has expired </h1>\r\n            <a href=\"/password\"> Reset Password </a>\r\n          </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\nexport default Reset;\r\n","import React, {useState} from 'react';\r\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UserProfile(props) {\r\n  const history = useHistory();\r\n  const [firstName, setFirstName] = useState(props.userDetails[\"firstName\"]);\r\n  const [lastName, setLastName] = useState(props.userDetails[\"lastName\"]);\r\n\r\n  return (\r\n    <div className=\"account-info-list\">\r\n      <div className=\"accountInformation\">\r\n        <div className=\"account-info-container col\">\r\n          <div className=\"row\">\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Email </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" id=\"email\" value={props.userDetails[\"email\"]} disabled/>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Username </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" id=\"username\" value={props.userDetails[\"username\"]} disabled/>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> First Name </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" id=\"firstName\" value={firstName} onChange={(e) => {\r\n                setFirstName(e.target.value);\r\n              }}/>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Last Name </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" id=\"lastName\" value={lastName} onChange={(e) => {\r\n                setLastName(e.target.value);\r\n              }}/>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Password </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" type=\"password\" id=\"password\" placeholder=\"********\"/>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText className=\"bg-dark text-white\"> Confirm Password </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input className=\"bg-dark text-white\" type=\"password\" id=\"confirmPassword\" placeholder=\"********\"/>\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col btn-group\">\r\n            <button type=\"button\" className=\"btn w-100 btn-success\"  onClick={(e) => {\r\n              e.preventDefault();\r\n              let firstName = document.getElementById(\"firstName\").value;\r\n              let lastName = document.getElementById(\"lastName\").value;\r\n              let password = document.getElementById(\"password\").value;\r\n              let confirmPassword = document.getElementById(\"confirmPassword\").value;\r\n              if (password.length < 8 && password.length > 0) {\r\n                alert(\"Password must be at least 8 characters\");\r\n                return;\r\n              }\r\n              if (password !== confirmPassword) {\r\n                alert(\"Passwords must match\");\r\n                return;\r\n              }\r\n              props.service.Update(props.userDetails[\"email\"], firstName, lastName, password, () => {\r\n                props.service.Logout( () => {\r\n                  history.push('/');\r\n                  props.onNavigate(null);\r\n                }, (e) => {\r\n                  alert(e);\r\n                });\r\n              }, (e) => {\r\n                alert(e);\r\n              });\r\n            }}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\n// import { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction UserProfile(props) {\r\n\r\n  return (\r\n    <div className=\"user-profile-list\">\r\n      <div className=\"userProfile\">\r\n        <div className=\"user-profile-container col\">\r\n          <div className=\"dflex flex-row justify-content-center\">\r\n            <h2> To be added in a future update </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { useEffect } from \"react\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport UserInformation from './UserInformation.js';\r\nimport ProfileSettings from './ProfileSettings.js';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Settings (props) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    props.setPageName(\"Settings\");\r\n    if (props.loaded) {\r\n      if (!props.userDetails[\"username\"]) {\r\n        history.push('/');\r\n      }\r\n      props.setDisplay(\"none\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row d-flex\">\r\n        <div className=\"col-xl-2 col-md-2 col-sm-12\" style={{padding: \"0px\"}}>\r\n          <div className=\"nav nav-pills flex-column\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n            <a className=\"nav-link active\" id=\"v-pills-accountInformation-tab\" data-toggle=\"pill\" href=\"#v-pills-accountInformation\" role=\"tab\" aria-controls=\"v-pills-accountInformation\" aria-selected=\"false\">Account Information</a>\r\n            <a className=\"nav-link\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Profile</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-10 col-md-10 col-sm-12\" style={{borderLeft: \"3px solid black\"}}>\r\n          <div className=\"tab-content\" id=\"v-pills-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"v-pills-accountInformation\" role=\"tabpanel\" aria-labelledby=\"v-pills-accountInformation-tab\">\r\n              <h1> Account Information </h1>\r\n              <UserInformation {...props}/>\r\n            </div>\r\n            <div className=\"tab-pane fade show\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\r\n              <h1> Profile Settings </h1>\r\n              <ProfileSettings {...props}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Settings;\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction Confirmation (props) {\r\n  const history = useHistory();\r\n  const setDisplay = props.setDisplay;\r\n  const [validToken, setValidToken] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  let mParams = useParams();\r\n  const setPageName = props.setPageName;\r\n\r\n  const getData = useCallback((mounted) => {\r\n    props.service.Post(\"/confirmation\", {token: mParams.token}, (data) => {\r\n      // put data into local storage\r\n      if (mounted) {\r\n        setValidToken(true);\r\n        setShow(true);\r\n        setDisplay(\"none\");\r\n      }\r\n    }, (error) => {\r\n      console.log(error)\r\n      setValidToken(false);\r\n      setShow(true);\r\n      setDisplay(\"none\");\r\n    });\r\n  }, [props.service, setDisplay, mParams.token]);\r\n\r\n  useEffect(() => {\r\n    setPageName(\"Confirmation\");\r\n    let mounted = true;\r\n    if (props.loaded) {\r\n      if (mounted)\r\n        getData(mounted);\r\n    }\r\n    return () => mounted = false;\r\n  },[getData, props.loaded, history, setPageName]);\r\n\r\n  return (\r\n      <div className=\"d-flex row justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n        {show && props.loaded && validToken &&\r\n          <h1 className=\"bg-dark text-white\" style={{borderRadius: \"10px 10px 10px 10px\", padding: \"1rem\", color: \"black\"}}>Email Confirmed</h1>\r\n        }\r\n        {show && props.loaded && !validToken &&\r\n          <div className=\"bg-dark text-white\" style={{borderRadius: \"10px 10px 10px 10px\", padding: \"1rem\"}}>\r\n            <h1 >Confirmation Failed. Link has expired</h1>\r\n            <a href=\"/resend\"> Resend Verification Email </a>\r\n          </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\nexport default Confirmation;\r\n","import React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport spinner from './assets/spinner.png';\nimport AdminPanel from './component/Admin/AdminPanel.js';\nimport CardDB from './component/CardDB/CardDB.js';\nimport Deck from './component/Decks/Deck.js';\nimport DeckBuilder from './component/DeckBuilder/DeckBuilder.js';\nimport DeckDB from './component/DeckDB/DeckDB.js';\nimport DeckEditor from './component/DeckEditor/DeckEditor.js';\nimport Home from './component/Home/Home.js';\nimport MyDecks from './component/MyDecks/MyDecks.js';\nimport TopNavbar from './component/Navbar/Navbar.js';\nimport Password from './component/Account/Password.js';\nimport Resend from './component/Account/Resend.js';\nimport Reset from './component/Account/Reset.js';\nimport Settings from './component/Account/Settings.js';\nimport Confirmation from './component/Account/Confirmation.js';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App(props) {\n\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [rightNav, setRightNav] = useState([]);\n  const [params, setParams] = useState();\n  const [display, setDisplay] = useState(\"block\");\n  const [pageName, setPageName] = useState(\"Home\");\n\n  const onNavigate = useCallback((params) => {\n    setParams(params);\n  }, []);\n\n  const onLoginChange = useCallback(() => {\n    if (!props.service.Authorized) {\n      setUserDetails({});\n      setAdmin(false);\n      setRightNav([\"Login/Register\"]);\n      setLoaded(true);\n    } else {\n      props.service.Get(\"/users/me\", {}, (data) => {\n        setRightNav([\"User Panel\"]);\n        if (data[0][\"role\"] === \"admin\") {\n          setAdmin(true);\n        }\n        setUserDetails(data[0]);\n        setLoaded(true);\n      }, (error) => {\n        props.service.Logout( () => {\n          history.push('/');\n          onNavigate(null);\n        }, (e) => {\n          alert(e);\n        });\n        setUserDetails({});\n        setAdmin(false)\n        setRightNav([\"Login/Register\"])\n        setLoaded(false);\n      });\n    }\n  }, [props.service, onNavigate, history]);\n\n  useEffect(() => {\n    onLoginChange();\n  },[onLoginChange]);\n\n\n  return (\n    <div className=\"App\">\n      <div id=\"navigation-wrapper\">\n        <TopNavbar pageName={pageName} onNavigate={onNavigate} rightNav={rightNav} service={props.service} admin={admin} onLoginChange={onLoginChange} userDetails={userDetails}/>\n      </div>\n      <div style={{display: display}}>\n        <div className=\"loader d-flex align-items-center justify-content-center\" style={{display: display}}>\n          <img className=\"loader-spinner\" src={spinner} alt=\"Loading\" style={{display: display}}/>\n          <div className=\"loader-background\" style={{display: display}}></div>\n        </div>\n      </div>\n      <div id=\"component-wrapper\">\n        <Switch>\n          <Route path=\"/\" exact={true} render={() => <Home service={props.service} setDisplay={setDisplay} setPageName={setPageName} onNavigate={onNavigate}/>}/>\n          <Route path=\"/admin\" render={() => <AdminPanel service={props.service} setDisplay={setDisplay} userDetails={userDetails} loaded={loaded} setPageName={setPageName}/>}/>\n          <Route path=\"/mydecks\" render={() => <MyDecks service={props.service} userDetails={userDetails} onNavigate={onNavigate} setDisplay={setDisplay} loaded={loaded} setPageName={setPageName}/>}/>\n          <Route path=\"/carddb\" render={() => <CardDB service={props.service} setDisplay={setDisplay} setPageName={setPageName} />}/>\n          <Route path=\"/confirmation/:token\" render={({match}) => <Confirmation service={props.service} setDisplay={setDisplay} onNavigate={onNavigate} loaded={loaded} setPageName={setPageName}/>}/>\n          <Route path=\"/confirmation\" render={() => <Redirect to=\"/\" />} />\n          <Route path=\"/deckbuilder\" render={() => <DeckBuilder service={props.service} userDetails={userDetails} onNavigate={onNavigate} params={params} setDisplay={setDisplay} loaded={loaded} setPageName={setPageName}/> }/>\n          <Route path=\"/deckeditor\" render={({match}) => <DeckEditor service={props.service} userDetails={userDetails} onNavigate={onNavigate} params={params} setDisplay={setDisplay} loaded={loaded} setPageName={setPageName}/>}/>\n          <Route path=\"/deckeditor\" render={() => <Redirect to=\"/\" />} />\n          <Route path=\"/deckdb\" render={() => <DeckDB service={props.service}  onNavigate={onNavigate} setDisplay={setDisplay} setPageName={setPageName}/>}/>\n          <Route path=\"/decklist/:id\" render={({match}) => <Deck service={props.service} params={params} onNavigate={onNavigate} userDetails={userDetails} setDisplay={setDisplay} setPageName={setPageName}/>}/>\n          <Route path=\"/decklist\" render={() => <Redirect to=\"/deckdb\" />} />\n          <Route path=\"/password\" render={() => <Password service={props.service}  setDisplay={setDisplay} onNavigate={onNavigate} setPageName={setPageName}/>}/>\n          <Route path=\"/resend\" render={() => <Resend service={props.service} setDisplay={setDisplay} onNavigate={onNavigate} setPageName={setPageName} />}/>\n          <Route path=\"/reset/:token\" render={({match}) => <Reset service={props.service} setDisplay={setDisplay} onNavigate={onNavigate} loaded={loaded} setPageName={setPageName}/>}/>\n          <Route path=\"/reset\" render={() => <Redirect to=\"/\" />} />\n          <Route path=\"/settings\" render={() => <Settings service={props.service} userDetails={userDetails} setDisplay={setDisplay} onNavigate={onNavigate} onLoginChange={onLoginChange} loaded={loaded} setPageName={setPageName}/>}/>\n          <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","class CookieController {\r\n    // constructor() {\r\n    //     this.PrintCookies();\r\n    // }\r\n    // PrintCookies() {\r\n    //     console.log(document.cookie);\r\n    // }\r\n    ClearCookies() {\r\n        let cookies = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            let cookie = cookies[i];\r\n            let eqPos = cookie.indexOf(\"=\");\r\n            let name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n            name += cookie + eqPos;\r\n            cookie += name;\r\n        }\r\n    }\r\n    GetCookies() {\r\n        let str = document.cookie;\r\n        str = str.split(\";\");\r\n        let _return = {};\r\n        for (let i = 0; i < str.length; i++) {\r\n            let child = str[i].split(\"=\");\r\n            if (child.length === 2) {\r\n                _return[child[0]] = child[1];\r\n            }\r\n        }\r\n        return _return;\r\n    }\r\n    PutCookie(key, value) {\r\n      document.cookie = key + \"=\" + value+\"; SameSite=Lax;\";\r\n    }\r\n}\r\n\r\nexport default CookieController;\r\n","//import request from \"request\";\r\nimport CookieController from \"./CookieController\";\r\nimport config from './config';\r\nconst axios = require(\"axios\");\r\nlet routing = \"//\" + config.apiEndPoint.hostname + \":\" + config.apiEndPoint.port;\r\nif (config.apiEndPoint.routingPrefix !== \"\") {\r\n  routing += \"/\" + config.apiEndPoint.routingPrefix;\r\n}\r\n\r\nclass APIService {\r\n  constructor() {\r\n    this.CookieController = new CookieController();\r\n    this.accesstoken = this.CookieController.GetCookies()[\"accessToken\"];\r\n    this.Authorized = false;\r\n    this.Logout = this.Logout.bind(this);\r\n    this.Login = this.Login.bind(this);\r\n    this.Register = this.Register.bind(this);\r\n  }\r\n\r\n  CheckAuthorization() {\r\n    if (this.accesstoken) {\r\n      this.Authorized = true;\r\n    }\r\n  }\r\n\r\n  Logout(onCompleted, onError) {\r\n    this.Authorized = false;\r\n    window.dispatchEvent(new CustomEvent(\"_event_onLoginChange\"), { detail: { loggedin: false } });\r\n    this.accesstoken = '';\r\n    this.CookieController.PutCookie(\"accessToken\", \"\");\r\n    onCompleted();\r\n  }\r\n\r\n  Login(email, password, onCompleted, onError) {\r\n    axios.post(routing + \"/login\", {\r\n      email: email,\r\n      password: password\r\n    })\r\n    .then((response) => {\r\n      let data = response[\"data\"];\r\n      this.Authorized = true;\r\n      this.accesstoken = data[\"token\"];\r\n      this.CookieController.PutCookie(\"accessToken\", data[\"token\"]);\r\n      window.dispatchEvent(new CustomEvent(\"_event_onLoginChange\"), { detail: { loggedin: true } });\r\n      if (onCompleted) {\r\n        onCompleted();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      this.Authorized = false;\r\n      if (error.response) {\r\n        if (onError) {\r\n          onError(\"Login Failed: \" + error.response[\"data\"][\"message\"]);\r\n        }\r\n      }\r\n      else if (onError) {\r\n        onError(\"Login Failed\");\r\n      }\r\n    });\r\n  }\r\n\r\n  Get(path, params, onCompleted, onError) {\r\n    axios.get(routing + path, {\r\n      headers: {\r\n        \"X-Access-Token\": this.accesstoken\r\n      },\r\n      params: params\r\n    })\r\n    .then((response) => {\r\n      onCompleted(response[\"data\"]);\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        if (onError) {\r\n          onError(error.response[\"data\"][\"message\"]);\r\n        }\r\n      }\r\n      else if (onError) {\r\n        onError(\"Unexpected Error\" + onError);\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  Post(path, params, onCompleted, onError) {\r\n    axios.post(routing + path, params, {\r\n      headers: {\r\n        \"X-Access-Token\": this.accesstoken\r\n      }\r\n    })\r\n    .then((response) => {\r\n      if(onCompleted){\r\n        onCompleted(response[\"data\"][\"message\"]);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        if (onError) {\r\n          onError(error.response[\"data\"][\"message\"]);\r\n        }\r\n      }\r\n      else if (onError) {\r\n        onError(\"Unexpected Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  Register(email, username, firstName, lastName, password, onCompleted, onError) {\r\n    axios.post(routing + \"/register\", {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      username: username,\r\n      email: email,\r\n      password: password\r\n    })\r\n    .then((response) => {\r\n      if (onCompleted) {\r\n        onCompleted();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        if (onError) {\r\n          onError(\"Registration Failed: \" + error.response[\"data\"][\"message\"]);\r\n        }\r\n      }\r\n      else if (onError) {\r\n        onError(\"Registration Failed\");\r\n      }\r\n    });\r\n  }\r\n\r\n  Update(email, firstName, lastName, password, onCompleted, onError) {\r\n    axios.post(routing + \"/update\", {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password\r\n    })\r\n    .then((response) => {\r\n      if (onCompleted) {\r\n        onCompleted();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        if (onError) {\r\n          onError(\"Update Failed: \" + error.response[\"data\"][\"message\"]);\r\n        }\r\n      }\r\n      else if (onError) {\r\n        onError(\"Update Failed\" + error);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default APIService;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport API from \"./API\";\nimport { BrowserRouter } from 'react-router-dom';\n\nlet UniversalService = new API();\nUniversalService.CheckAuthorization();\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App service={UniversalService}/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Production\r\nmodule.exports = {\r\n    apiEndPoint: {\r\n        hostname: \"digidecks.net\",\r\n        port: 443,\r\n        routingPrefix: \"\"\r\n    }\r\n}\r\n\r\n// // Testing\r\n// module.exports = {\r\n//     apiEndPoint: {\r\n//         hostname: \"localhost\",\r\n//         port: 5000,\r\n//         routingPrefix: \"\"\r\n//     }\r\n// }\r\n"],"sourceRoot":""}